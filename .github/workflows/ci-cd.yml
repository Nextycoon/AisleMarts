name: AisleMarts CI/CD Pipeline

on:
  push:
    branches: [ "staging", "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: aislemarts-prod
  GAR_LOCATION: us-central1
  REPO_NAME: aislemarts
  IMAGE_BACKEND: us-central1-docker.pkg.dev/aislemarts-prod/aislemarts/backend
  IMAGE_TAG: ${{ github.sha }}
  CLUSTER_NAME_STAGING: gke-aislemarts-stg
  CLUSTER_NAME_PROD: gke-aislemarts-prod
  CLUSTER_LOCATION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: 
          python-version: "3.11"
      
      - name: Install backend dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install pip-audit pytest
      
      - name: Run backend tests
        run: |
          cd backend
          pytest -q || true
      
      - name: Security audit
        run: |
          pip-audit -r backend/requirements.txt || true
      
      - name: Frontend audit
        run: |
          cd frontend
          npm ci
          npm audit --audit-level=high || true

  build-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SA }}
      
      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
      
      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.IMAGE_BACKEND }}:${{ env.IMAGE_TAG }} -t ${{ env.IMAGE_BACKEND }}:latest -f backend/Dockerfile backend
          docker push ${{ env.IMAGE_BACKEND }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_BACKEND }}:latest
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_BACKEND }}:${{ env.IMAGE_TAG }}
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SA }}
      
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ startsWith(github.ref, 'refs/heads/main') && env.CLUSTER_NAME_PROD || env.CLUSTER_NAME_STAGING }}
          location: ${{ env.CLUSTER_LOCATION }}
          project_id: ${{ env.PROJECT_ID }}
      
      - name: Deploy with Helm
        run: |
          NS=${{ startsWith(github.ref,'refs/heads/main') && 'prod' || 'staging' }}
          DOMAIN=${{ startsWith(github.ref,'refs/heads/main') && 'AisleMarts.com' || 'staging.AisleMarts.com' }}
          
          helm upgrade --install aislemarts ops/helm/aislemarts \
            --namespace $NS --create-namespace \
            --set image.repository=${{ env.IMAGE_BACKEND }} \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set ingress.host="$DOMAIN" \
            --wait --timeout=300s
      
      - name: Verify deployment
        run: |
          NS=${{ startsWith(github.ref,'refs/heads/main') && 'prod' || 'staging' }}
          kubectl -n $NS rollout status deploy/aislemarts-backend --timeout=180s
          kubectl -n $NS get pods -l app=aislemarts