name: AisleMarts Backend CI

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'backend/**'
      - 'docker-compose.production.yml'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_DATABASE: aislemarts_test
        ports:
          - 27017:27017
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx

    - name: Set environment variables for testing
      run: |
        echo "MONGO_URL=mongodb://localhost:27017/aislemarts_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "ENV=test" >> $GITHUB_ENV
        echo "JWT_SECRET=test_secret_key_for_ci" >> $GITHUB_ENV

    - name: Run tests
      run: |
        cd backend
        python -m pytest tests/ -v --tb=short

    - name: Test API health check
      run: |
        cd backend
        python -c "
        import asyncio
        import sys
        from server import app
        from fastapi.testclient import TestClient
        
        client = TestClient(app)
        try:
            response = client.get('/api/health')
            assert response.status_code == 200
            print('✅ Health check passed')
        except Exception as e:
            print(f'❌ Health check failed: {e}')
            sys.exit(1)
        "

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile.production
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/aislemarts-api:latest
          ghcr.io/${{ github.repository_owner }}/aislemarts-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max