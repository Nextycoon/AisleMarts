import { Asset } from 'expo-asset'; import type { Story } from './types'; import { MediaCacheLRU } from './MediaCacheLRU';
export class PreloadCoordinator{ constructor(private cache:MediaCacheLRU){} async preload(s:Story){ if(!s?.mediaUrl) return; if(this.cache.get(s.mediaUrl)) return; try{ const a=Asset.fromURI(s.mediaUrl); await a.downloadAsync(); const bytes=(a as any).filesize ?? 1_000_000; this.cache.set(s.mediaUrl, a.localUri ?? s.mediaUrl, bytes);}catch{} } async preloadNext(i:number, arr:Story[], nextCreatorFirst?:Story){ const n=arr[i+1]; if(n) await this.preload(n); if(nextCreatorFirst) await this.preload(nextCreatorFirst);} }
