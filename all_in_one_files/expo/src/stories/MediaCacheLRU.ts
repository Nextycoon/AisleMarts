type Entry={key:string,uri:string,bytes:number,ts:number}; export class MediaCacheLRU{ private m=new Map<string,Entry>(); private total=0; constructor(private max=75*1024*1024){} get size(){return this.total;} get(k:string){const e=this.m.get(k); if(!e) return null; e.ts=Date.now(); return e.uri;} set(k:string,uri:string,bytes=1_000_000){const ex=this.m.get(k); if(ex){this.total-=ex.bytes; this.m.delete(k);} const e={key:k,uri,bytes,ts:Date.now()}; this.m.set(k,e); this.total+=bytes; this.evict();} evict(){ if(this.total<=this.max) return; const arr=[...this.m.values()].sort((a,b)=>a.ts-b.ts); for(const e of arr){ this.m.delete(e.key); this.total-=e.bytes; if(this.total<=this.max) break; } } }
