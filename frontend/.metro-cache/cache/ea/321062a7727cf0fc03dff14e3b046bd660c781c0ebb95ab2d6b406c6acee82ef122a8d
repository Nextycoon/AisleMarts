{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./AppleAuthentication.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":76,"index":145}}],"key":"hor6J/onRNt/lS52AczKo1xwe4I=","exportNames":["*"]}},{"name":"./ExpoAppleAuthentication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":146},"end":{"line":3,"column":64,"index":210}}],"key":"yW7eeT39HKBl9DAuxfo7qeUSqEg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addRevokeListener = addRevokeListener;\n  exports.formatFullName = formatFullName;\n  exports.getCredentialStateAsync = getCredentialStateAsync;\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.refreshAsync = refreshAsync;\n  exports.signInAsync = signInAsync;\n  exports.signOutAsync = signOutAsync;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _AppleAuthentication = require(_dependencyMap[2], \"./AppleAuthentication.types\");\n  var _ExpoAppleAuthentication = _interopRequireDefault(require(_dependencyMap[3], \"./ExpoAppleAuthentication\"));\n  // @needsAudit\n  /**\n   * Determine if the current device's operating system supports Apple authentication.\n   * @return A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\n   */\n  async function isAvailableAsync() {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.isAvailableAsync) {\n      return false;\n    }\n    return _ExpoAppleAuthentication.default.isAvailableAsync();\n  }\n  // @needsAudit\n  /**\n   * Sends a request to the operating system to initiate the Apple authentication flow, which will\n   * present a modal to the user over your app and allow them to sign in.\n   *\n   * You can request access to the user's full name and email address in this method, which allows you\n   * to personalize your UI for signed in users. However, users can deny access to either or both\n   * of these options at runtime.\n   *\n   * Additionally, you will only receive Apple Authentication Credentials the first time users sign\n   * into your app, so you must store it for later use. It's best to store this information either\n   * server-side, or using [SecureStore](./securestore), so that the data persists across app installs.\n   * You can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\n   * the user, since this remains the same for apps released by the same developer.\n   *\n   * @param options An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object\n   * @return A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\n   * object after a successful authentication, and rejects with `ERR_REQUEST_CANCELED` if the user cancels the\n   * sign-in operation.\n   */\n  async function signInAsync(options) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.requestAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'signInAsync');\n    }\n    const requestOptions = {\n      ...options,\n      requestedOperation: _AppleAuthentication.AppleAuthenticationOperation.LOGIN\n    };\n    const credential = await _ExpoAppleAuthentication.default.requestAsync(requestOptions);\n    if (!credential.authorizationCode || !credential.identityToken || !credential.user) {\n      throw new _expoModulesCore.CodedError('ERR_REQUEST_FAILED', 'The credential returned by `signInAsync` is missing one or more required fields.');\n    }\n    return credential;\n  }\n  // @needsAudit\n  /**\n   * An operation that refreshes the logged-in userâ€™s credentials.\n   * Calling this method will show the sign in modal before actually refreshing the user credentials.\n   *\n   * @param options An [`AppleAuthenticationRefreshOptions`](#appleauthenticationrefreshoptions) object\n   * @returns A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\n   * object after a successful authentication, and rejects with `ERR_REQUEST_CANCELED` if the user cancels the\n   * refresh operation.\n   */\n  async function refreshAsync(options) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.requestAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'refreshAsync');\n    }\n    const requestOptions = {\n      ...options,\n      requestedOperation: _AppleAuthentication.AppleAuthenticationOperation.REFRESH\n    };\n    const credential = await _ExpoAppleAuthentication.default.requestAsync(requestOptions);\n    if (!credential.authorizationCode || !credential.identityToken || !credential.user) {\n      throw new _expoModulesCore.CodedError('ERR_REQUEST_FAILED', 'The credential returned by `refreshAsync` is missing one or more required fields.');\n    }\n    return credential;\n  }\n  // @needsAudit\n  /**\n   * An operation that ends the authenticated session.\n   * Calling this method will show the sign in modal before actually signing the user out.\n   *\n   * It is not recommended to use this method to sign out the user as it works counterintuitively.\n   * Instead of using this method it is recommended to simply clear all the user's data collected\n   * from using [`signInAsync`](#appleauthenticationsigninasyncoptions) or [`refreshAsync`](#appleauthenticationrefreshasyncoptions) methods.\n   *\n   * @param options An [`AppleAuthenticationSignOutOptions`](#appleauthenticationsignoutoptions) object\n   * @returns A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\n   * object after a successful authentication, and rejects with `ERR_REQUEST_CANCELED` if the user cancels the\n   * sign-out operation.\n   */\n  async function signOutAsync(options) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.requestAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'signOutAsync');\n    }\n    const requestOptions = {\n      ...options,\n      requestedOperation: _AppleAuthentication.AppleAuthenticationOperation.LOGOUT\n    };\n    return _ExpoAppleAuthentication.default.requestAsync(requestOptions);\n  }\n  // @needsAudit\n  /**\n   * Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\n   * > **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.\n   *\n   * @param user The unique identifier for the user whose credential state you'd like to check.\n   * This should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object.\n   * @return A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\n   * value depending on the state of the credential.\n   */\n  async function getCredentialStateAsync(user) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.getCredentialStateAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'getCredentialStateAsync');\n    }\n    return _ExpoAppleAuthentication.default.getCredentialStateAsync(user);\n  }\n  // @needsAudit @docsMissing\n  /**\n   * Creates a locale-aware string representation of a person's name from an object representing the tokenized portions of a user's full name\n   *\n   * @param fullName The full name object with the tokenized portions\n   * @param formatStyle The style in which the name should be formatted\n   * @returns A locale-aware string representation of a person's name\n   */\n  function formatFullName(fullName, formatStyle) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.formatFullName) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'formatFullName');\n    }\n    return _ExpoAppleAuthentication.default.formatFullName(fullName, formatStyle);\n  }\n  // @docsMissing\n  function addRevokeListener(listener) {\n    return _ExpoAppleAuthentication.default.addListener('Expo.appleIdCredentialRevoked', listener);\n  }\n});","lineCount":143,"map":[[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_AppleAuthentication"],[14,26,2,0],[14,29,2,0,"require"],[14,36,2,0],[14,37,2,0,"_dependencyMap"],[14,51,2,0],[15,2,3,0],[15,6,3,0,"_ExpoAppleAuthentication"],[15,30,3,0],[15,33,3,0,"_interopRequireDefault"],[15,55,3,0],[15,56,3,0,"require"],[15,63,3,0],[15,64,3,0,"_dependencyMap"],[15,78,3,0],[16,2,4,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,2,9,7],[21,17,9,22,"isAvailableAsync"],[21,33,9,38,"isAvailableAsync"],[21,34,9,38],[21,36,9,41],[22,4,10,4],[22,8,10,8],[22,9,10,9,"ExpoAppleAuthentication"],[22,41,10,32],[22,45,10,36],[22,46,10,37,"ExpoAppleAuthentication"],[22,78,10,60],[22,79,10,61,"isAvailableAsync"],[22,95,10,77],[22,97,10,79],[23,6,11,8],[23,13,11,15],[23,18,11,20],[24,4,12,4],[25,4,13,4],[25,11,13,11,"ExpoAppleAuthentication"],[25,43,13,34],[25,44,13,35,"isAvailableAsync"],[25,60,13,51],[25,61,13,52],[25,62,13,53],[26,2,14,0],[27,2,15,0],[28,2,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,2,35,7],[47,17,35,22,"signInAsync"],[47,28,35,33,"signInAsync"],[47,29,35,34,"options"],[47,36,35,41],[47,38,35,43],[48,4,36,4],[48,8,36,8],[48,9,36,9,"ExpoAppleAuthentication"],[48,41,36,32],[48,45,36,36],[48,46,36,37,"ExpoAppleAuthentication"],[48,78,36,60],[48,79,36,61,"requestAsync"],[48,91,36,73],[48,93,36,75],[49,6,37,8],[49,12,37,14],[49,16,37,18,"UnavailabilityError"],[49,52,37,37],[49,53,37,38],[49,80,37,65],[49,82,37,67],[49,95,37,80],[49,96,37,81],[50,4,38,4],[51,4,39,4],[51,10,39,10,"requestOptions"],[51,24,39,24],[51,27,39,27],[52,6,40,8],[52,9,40,11,"options"],[52,16,40,18],[53,6,41,8,"requestedOperation"],[53,24,41,26],[53,26,41,28,"AppleAuthenticationOperation"],[53,75,41,56],[53,76,41,57,"LOGIN"],[54,4,42,4],[54,5,42,5],[55,4,43,4],[55,10,43,10,"credential"],[55,20,43,20],[55,23,43,23],[55,29,43,29,"ExpoAppleAuthentication"],[55,61,43,52],[55,62,43,53,"requestAsync"],[55,74,43,65],[55,75,43,66,"requestOptions"],[55,89,43,80],[55,90,43,81],[56,4,44,4],[56,8,44,8],[56,9,44,9,"credential"],[56,19,44,19],[56,20,44,20,"authorizationCode"],[56,37,44,37],[56,41,44,41],[56,42,44,42,"credential"],[56,52,44,52],[56,53,44,53,"identityToken"],[56,66,44,66],[56,70,44,70],[56,71,44,71,"credential"],[56,81,44,81],[56,82,44,82,"user"],[56,86,44,86],[56,88,44,88],[57,6,45,8],[57,12,45,14],[57,16,45,18,"CodedError"],[57,43,45,28],[57,44,45,29],[57,64,45,49],[57,66,45,51],[57,148,45,133],[57,149,45,134],[58,4,46,4],[59,4,47,4],[59,11,47,11,"credential"],[59,21,47,21],[60,2,48,0],[61,2,49,0],[62,2,50,0],[63,0,51,0],[64,0,52,0],[65,0,53,0],[66,0,54,0],[67,0,55,0],[68,0,56,0],[69,0,57,0],[70,0,58,0],[71,2,59,7],[71,17,59,22,"refreshAsync"],[71,29,59,34,"refreshAsync"],[71,30,59,35,"options"],[71,37,59,42],[71,39,59,44],[72,4,60,4],[72,8,60,8],[72,9,60,9,"ExpoAppleAuthentication"],[72,41,60,32],[72,45,60,36],[72,46,60,37,"ExpoAppleAuthentication"],[72,78,60,60],[72,79,60,61,"requestAsync"],[72,91,60,73],[72,93,60,75],[73,6,61,8],[73,12,61,14],[73,16,61,18,"UnavailabilityError"],[73,52,61,37],[73,53,61,38],[73,80,61,65],[73,82,61,67],[73,96,61,81],[73,97,61,82],[74,4,62,4],[75,4,63,4],[75,10,63,10,"requestOptions"],[75,24,63,24],[75,27,63,27],[76,6,64,8],[76,9,64,11,"options"],[76,16,64,18],[77,6,65,8,"requestedOperation"],[77,24,65,26],[77,26,65,28,"AppleAuthenticationOperation"],[77,75,65,56],[77,76,65,57,"REFRESH"],[78,4,66,4],[78,5,66,5],[79,4,67,4],[79,10,67,10,"credential"],[79,20,67,20],[79,23,67,23],[79,29,67,29,"ExpoAppleAuthentication"],[79,61,67,52],[79,62,67,53,"requestAsync"],[79,74,67,65],[79,75,67,66,"requestOptions"],[79,89,67,80],[79,90,67,81],[80,4,68,4],[80,8,68,8],[80,9,68,9,"credential"],[80,19,68,19],[80,20,68,20,"authorizationCode"],[80,37,68,37],[80,41,68,41],[80,42,68,42,"credential"],[80,52,68,52],[80,53,68,53,"identityToken"],[80,66,68,66],[80,70,68,70],[80,71,68,71,"credential"],[80,81,68,81],[80,82,68,82,"user"],[80,86,68,86],[80,88,68,88],[81,6,69,8],[81,12,69,14],[81,16,69,18,"CodedError"],[81,43,69,28],[81,44,69,29],[81,64,69,49],[81,66,69,51],[81,149,69,134],[81,150,69,135],[82,4,70,4],[83,4,71,4],[83,11,71,11,"credential"],[83,21,71,21],[84,2,72,0],[85,2,73,0],[86,2,74,0],[87,0,75,0],[88,0,76,0],[89,0,77,0],[90,0,78,0],[91,0,79,0],[92,0,80,0],[93,0,81,0],[94,0,82,0],[95,0,83,0],[96,0,84,0],[97,0,85,0],[98,0,86,0],[99,2,87,7],[99,17,87,22,"signOutAsync"],[99,29,87,34,"signOutAsync"],[99,30,87,35,"options"],[99,37,87,42],[99,39,87,44],[100,4,88,4],[100,8,88,8],[100,9,88,9,"ExpoAppleAuthentication"],[100,41,88,32],[100,45,88,36],[100,46,88,37,"ExpoAppleAuthentication"],[100,78,88,60],[100,79,88,61,"requestAsync"],[100,91,88,73],[100,93,88,75],[101,6,89,8],[101,12,89,14],[101,16,89,18,"UnavailabilityError"],[101,52,89,37],[101,53,89,38],[101,80,89,65],[101,82,89,67],[101,96,89,81],[101,97,89,82],[102,4,90,4],[103,4,91,4],[103,10,91,10,"requestOptions"],[103,24,91,24],[103,27,91,27],[104,6,92,8],[104,9,92,11,"options"],[104,16,92,18],[105,6,93,8,"requestedOperation"],[105,24,93,26],[105,26,93,28,"AppleAuthenticationOperation"],[105,75,93,56],[105,76,93,57,"LOGOUT"],[106,4,94,4],[106,5,94,5],[107,4,95,4],[107,11,95,11,"ExpoAppleAuthentication"],[107,43,95,34],[107,44,95,35,"requestAsync"],[107,56,95,47],[107,57,95,48,"requestOptions"],[107,71,95,62],[107,72,95,63],[108,2,96,0],[109,2,97,0],[110,2,98,0],[111,0,99,0],[112,0,100,0],[113,0,101,0],[114,0,102,0],[115,0,103,0],[116,0,104,0],[117,0,105,0],[118,0,106,0],[119,2,107,7],[119,17,107,22,"getCredentialStateAsync"],[119,40,107,45,"getCredentialStateAsync"],[119,41,107,46,"user"],[119,45,107,50],[119,47,107,52],[120,4,108,4],[120,8,108,8],[120,9,108,9,"ExpoAppleAuthentication"],[120,41,108,32],[120,45,108,36],[120,46,108,37,"ExpoAppleAuthentication"],[120,78,108,60],[120,79,108,61,"getCredentialStateAsync"],[120,102,108,84],[120,104,108,86],[121,6,109,8],[121,12,109,14],[121,16,109,18,"UnavailabilityError"],[121,52,109,37],[121,53,109,38],[121,80,109,65],[121,82,109,67],[121,107,109,92],[121,108,109,93],[122,4,110,4],[123,4,111,4],[123,11,111,11,"ExpoAppleAuthentication"],[123,43,111,34],[123,44,111,35,"getCredentialStateAsync"],[123,67,111,58],[123,68,111,59,"user"],[123,72,111,63],[123,73,111,64],[124,2,112,0],[125,2,113,0],[126,2,114,0],[127,0,115,0],[128,0,116,0],[129,0,117,0],[130,0,118,0],[131,0,119,0],[132,0,120,0],[133,2,121,7],[133,11,121,16,"formatFullName"],[133,25,121,30,"formatFullName"],[133,26,121,31,"fullName"],[133,34,121,39],[133,36,121,41,"formatStyle"],[133,47,121,52],[133,49,121,54],[134,4,122,4],[134,8,122,8],[134,9,122,9,"ExpoAppleAuthentication"],[134,41,122,32],[134,45,122,36],[134,46,122,37,"ExpoAppleAuthentication"],[134,78,122,60],[134,79,122,61,"formatFullName"],[134,93,122,75],[134,95,122,77],[135,6,123,8],[135,12,123,14],[135,16,123,18,"UnavailabilityError"],[135,52,123,37],[135,53,123,38],[135,80,123,65],[135,82,123,67],[135,98,123,83],[135,99,123,84],[136,4,124,4],[137,4,125,4],[137,11,125,11,"ExpoAppleAuthentication"],[137,43,125,34],[137,44,125,35,"formatFullName"],[137,58,125,49],[137,59,125,50,"fullName"],[137,67,125,58],[137,69,125,60,"formatStyle"],[137,80,125,71],[137,81,125,72],[138,2,126,0],[139,2,127,0],[140,2,128,7],[140,11,128,16,"addRevokeListener"],[140,28,128,33,"addRevokeListener"],[140,29,128,34,"listener"],[140,37,128,42],[140,39,128,44],[141,4,129,4],[141,11,129,11,"ExpoAppleAuthentication"],[141,43,129,34],[141,44,129,35,"addListener"],[141,55,129,46],[141,56,129,47],[141,87,129,78],[141,89,129,80,"listener"],[141,97,129,88],[141,98,129,89],[142,2,130,0],[143,0,130,1],[143,3]],"functionMap":{"names":["<global>","isAvailableAsync","signInAsync","refreshAsync","signOutAsync","getCredentialStateAsync","formatFullName","addRevokeListener"],"mappings":"AAA;OCQ;CDK;OEqB;CFa;OGW;CHa;OIe;CJS;OKW;CLK;OMS;CNK;OOE;CPE"}},"type":"js/module"}]}