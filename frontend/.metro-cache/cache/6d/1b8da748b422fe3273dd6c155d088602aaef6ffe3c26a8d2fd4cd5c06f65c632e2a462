{"dependencies":[{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getFx = getFx;\n  var _expoConstants = require(_dependencyMap[0], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  let memoryCache = {};\n  async function fetchRates(sourceBase) {\n    // Get backend URL from environment\n    const backendUrl = Constants.default.expoConfig?.extra?.EXPO_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || '';\n    const url = `${backendUrl}/api/currency/rates?base=${encodeURIComponent(sourceBase)}`;\n    console.log(`🌍 Currency-Infinity Engine: Fetching rates for ${sourceBase} from ${url}`);\n    try {\n      const res = await fetch(url, {\n        cache: 'no-store',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!res.ok) {\n        throw new Error(`FX fetch failed: ${res.status} ${res.statusText}`);\n      }\n      const data = await res.json();\n      console.log(`💱 Received rates for ${sourceBase}:`, Object.keys(data.rates || {}).length, 'currencies');\n      return data;\n    } catch (error) {\n      console.warn('🔄 FX API failed, using fallback rates:', error);\n      // Fallback to static rates if API fails\n      return getFallbackRates(sourceBase);\n    }\n  }\n  function getFallbackRates(base) {\n    // Static fallback rates for demo (updated June 2025)\n    const fallbackRates = {\n      'USD': 1.0,\n      // Base currency\n      'EUR': 0.85,\n      'GBP': 0.73,\n      'JPY': 110.0,\n      'CNY': 6.45,\n      'CAD': 1.25,\n      'AUD': 1.35,\n      'CHF': 0.92,\n      'SEK': 8.60,\n      'NOK': 8.50,\n      'DKK': 6.30,\n      'PLN': 3.90,\n      'CZK': 21.50,\n      'HUF': 290.0,\n      'RUB': 75.0,\n      'BRL': 5.20,\n      'MXN': 20.0,\n      'ARS': 98.0,\n      'COP': 3800.0,\n      'CLP': 720.0,\n      'PEN': 3.60,\n      'KRW': 1180.0,\n      'INR': 74.0,\n      'IDR': 14200.0,\n      'THB': 31.0,\n      'SGD': 1.35,\n      'MYR': 4.15,\n      'PHP': 50.0,\n      'VND': 23000.0,\n      'HKD': 7.80,\n      'TWD': 28.0,\n      'LKR': 180.0,\n      'BDT': 85.0,\n      'PKR': 160.0,\n      'AED': 3.67,\n      'SAR': 3.75,\n      'QAR': 3.64,\n      'KWD': 0.30,\n      'BHD': 0.38,\n      'ILS': 3.20,\n      'TRY': 8.50,\n      'EGP': 15.7,\n      'ZAR': 14.5,\n      'NGN': 410.0,\n      'KES': 108.0,\n      'MAD': 9.0\n    };\n\n    // Convert rates relative to base currency\n    const baseRate = fallbackRates[base] || 1;\n    const rates = Object.fromEntries(Object.entries(fallbackRates).map(([k, v]) => [k, v / baseRate]));\n    return {\n      base,\n      ts: Date.now(),\n      rates\n    };\n  }\n  async function getFx(base) {\n    // Serve cached if fresh (<5 min)\n    const now = Date.now();\n    if (memoryCache.quote && now - (memoryCache.quote.ts || 0) < 5 * 60 * 1000) {\n      if (memoryCache.quote.base === base) {\n        console.log(`⚡ Using cached rates for ${base}`);\n        return memoryCache.quote;\n      }\n    }\n    const q = await fetchRates(base);\n    memoryCache.quote = q;\n    return q;\n  }\n});","lineCount":114,"map":[[12,2,66,0,"exports"],[12,9,66,0],[12,10,66,0,"getFx"],[12,15,66,0],[12,18,66,0,"getFx"],[12,23,66,0],[13,2,1,0],[13,6,1,0,"_expoConstants"],[13,20,1,0],[13,23,1,0,"require"],[13,30,1,0],[13,31,1,0,"_dependencyMap"],[13,45,1,0],[14,2,1,0],[14,6,1,0,"Constants"],[14,15,1,0],[14,18,1,0,"_interopDefault"],[14,33,1,0],[14,34,1,0,"_expoConstants"],[14,48,1,0],[15,2,4,0],[15,6,4,4,"memoryCache"],[15,17,4,36],[15,20,4,39],[15,21,4,40],[15,22,4,41],[16,2,6,0],[16,17,6,15,"fetchRates"],[16,27,6,25,"fetchRates"],[16,28,6,26,"sourceBase"],[16,38,6,44],[16,40,6,64],[17,4,7,2],[18,4,8,2],[18,10,8,8,"backendUrl"],[18,20,8,18],[18,23,8,21,"Constants"],[18,32,8,30],[18,33,8,30,"default"],[18,40,8,30],[18,41,8,31,"expoConfig"],[18,51,8,41],[18,53,8,43,"extra"],[18,58,8,48],[18,60,8,50,"EXPO_BACKEND_URL"],[18,76,8,66],[18,80,8,70,"process"],[18,87,8,77],[18,88,8,78,"env"],[18,91,8,81],[18,92,8,82,"EXPO_PUBLIC_BACKEND_URL"],[18,115,8,105],[18,119,8,109],[18,121,8,111],[19,4,9,2],[19,10,9,8,"url"],[19,13,9,11],[19,16,9,14],[19,19,9,17,"backendUrl"],[19,29,9,27],[19,57,9,55,"encodeURIComponent"],[19,75,9,73],[19,76,9,74,"sourceBase"],[19,86,9,84],[19,87,9,85],[19,89,9,87],[20,4,11,2,"console"],[20,11,11,9],[20,12,11,10,"log"],[20,15,11,13],[20,16,11,14],[20,67,11,65,"sourceBase"],[20,77,11,75],[20,86,11,84,"url"],[20,89,11,87],[20,91,11,89],[20,92,11,90],[21,4,13,2],[21,8,13,6],[22,6,14,4],[22,12,14,10,"res"],[22,15,14,13],[22,18,14,16],[22,24,14,22,"fetch"],[22,29,14,27],[22,30,14,28,"url"],[22,33,14,31],[22,35,14,33],[23,8,15,6,"cache"],[23,13,15,11],[23,15,15,13],[23,25,15,23],[24,8,16,6,"headers"],[24,15,16,13],[24,17,16,15],[25,10,17,8],[25,24,17,22],[25,26,17,24],[26,8,18,6],[27,6,19,4],[27,7,19,5],[27,8,19,6],[28,6,21,4],[28,10,21,8],[28,11,21,9,"res"],[28,14,21,12],[28,15,21,13,"ok"],[28,17,21,15],[28,19,21,17],[29,8,22,6],[29,14,22,12],[29,18,22,16,"Error"],[29,23,22,21],[29,24,22,22],[29,44,22,42,"res"],[29,47,22,45],[29,48,22,46,"status"],[29,54,22,52],[29,58,22,56,"res"],[29,61,22,59],[29,62,22,60,"statusText"],[29,72,22,70],[29,74,22,72],[29,75,22,73],[30,6,23,4],[31,6,25,4],[31,12,25,10,"data"],[31,16,25,14],[31,19,25,17],[31,25,25,23,"res"],[31,28,25,26],[31,29,25,27,"json"],[31,33,25,31],[31,34,25,32],[31,35,25,33],[32,6,26,4,"console"],[32,13,26,11],[32,14,26,12,"log"],[32,17,26,15],[32,18,26,16],[32,43,26,41,"sourceBase"],[32,53,26,51],[32,56,26,54],[32,58,26,56,"Object"],[32,64,26,62],[32,65,26,63,"keys"],[32,69,26,67],[32,70,26,68,"data"],[32,74,26,72],[32,75,26,73,"rates"],[32,80,26,78],[32,84,26,82],[32,85,26,83],[32,86,26,84],[32,87,26,85],[32,88,26,86,"length"],[32,94,26,92],[32,96,26,94],[32,108,26,106],[32,109,26,107],[33,6,27,4],[33,13,27,11,"data"],[33,17,27,15],[34,4,28,2],[34,5,28,3],[34,6,28,4],[34,13,28,11,"error"],[34,18,28,16],[34,20,28,18],[35,6,29,4,"console"],[35,13,29,11],[35,14,29,12,"warn"],[35,18,29,16],[35,19,29,17],[35,60,29,58],[35,62,29,60,"error"],[35,67,29,65],[35,68,29,66],[36,6,30,4],[37,6,31,4],[37,13,31,11,"getFallbackRates"],[37,29,31,27],[37,30,31,28,"sourceBase"],[37,40,31,38],[37,41,31,39],[38,4,32,2],[39,2,33,0],[40,2,35,0],[40,11,35,9,"getFallbackRates"],[40,27,35,25,"getFallbackRates"],[40,28,35,26,"base"],[40,32,35,38],[40,34,35,49],[41,4,36,2],[42,4,37,2],[42,10,37,8,"fallbackRates"],[42,23,37,45],[42,26,37,48],[43,6,38,4],[43,11,38,9],[43,13,38,11],[43,16,38,14],[44,6,38,21],[45,6,39,4],[45,11,39,9],[45,13,39,11],[45,17,39,15],[46,6,39,21],[46,11,39,26],[46,13,39,28],[46,17,39,32],[47,6,39,38],[47,11,39,43],[47,13,39,45],[47,18,39,50],[48,6,39,55],[48,11,39,60],[48,13,39,62],[48,17,39,66],[49,6,40,4],[49,11,40,9],[49,13,40,11],[49,17,40,15],[50,6,40,21],[50,11,40,26],[50,13,40,28],[50,17,40,32],[51,6,40,38],[51,11,40,43],[51,13,40,45],[51,17,40,49],[52,6,40,55],[52,11,40,60],[52,13,40,62],[52,17,40,66],[53,6,41,4],[53,11,41,9],[53,13,41,11],[53,17,41,15],[54,6,41,21],[54,11,41,26],[54,13,41,28],[54,17,41,32],[55,6,41,38],[55,11,41,43],[55,13,41,45],[55,17,41,49],[56,6,41,55],[56,11,41,60],[56,13,41,62],[56,18,41,67],[57,6,42,4],[57,11,42,9],[57,13,42,11],[57,18,42,16],[58,6,42,21],[58,11,42,26],[58,13,42,28],[58,17,42,32],[59,6,42,38],[59,11,42,43],[59,13,42,45],[59,17,42,49],[60,6,42,55],[60,11,42,60],[60,13,42,62],[60,17,42,66],[61,6,43,4],[61,11,43,9],[61,13,43,11],[61,17,43,15],[62,6,43,21],[62,11,43,26],[62,13,43,28],[62,19,43,34],[63,6,43,38],[63,11,43,43],[63,13,43,45],[63,18,43,50],[64,6,43,55],[64,11,43,60],[64,13,43,62],[64,17,43,66],[65,6,44,4],[65,11,44,9],[65,13,44,11],[65,19,44,17],[66,6,44,21],[66,11,44,26],[66,13,44,28],[66,17,44,32],[67,6,44,38],[67,11,44,43],[67,13,44,45],[67,20,44,52],[68,6,44,55],[68,11,44,60],[68,13,44,62],[68,17,44,66],[69,6,45,4],[69,11,45,9],[69,13,45,11],[69,17,45,15],[70,6,45,21],[70,11,45,26],[70,13,45,28],[70,17,45,32],[71,6,45,38],[71,11,45,43],[71,13,45,45],[71,17,45,49],[72,6,45,55],[72,11,45,60],[72,13,45,62],[72,20,45,69],[73,6,46,4],[73,11,46,9],[73,13,46,11],[73,17,46,15],[74,6,46,21],[74,11,46,26],[74,13,46,28],[74,17,46,32],[75,6,46,38],[75,11,46,43],[75,13,46,45],[75,18,46,50],[76,6,46,55],[76,11,46,60],[76,13,46,62],[76,17,46,66],[77,6,47,4],[77,11,47,9],[77,13,47,11],[77,18,47,16],[78,6,47,21],[78,11,47,26],[78,13,47,28],[78,17,47,32],[79,6,47,38],[79,11,47,43],[79,13,47,45],[79,17,47,49],[80,6,47,55],[80,11,47,60],[80,13,47,62],[80,17,47,66],[81,6,48,4],[81,11,48,9],[81,13,48,11],[81,17,48,15],[82,6,48,21],[82,11,48,26],[82,13,48,28],[82,17,48,32],[83,6,48,38],[83,11,48,43],[83,13,48,45],[83,17,48,49],[84,6,48,55],[84,11,48,60],[84,13,48,62],[84,17,48,66],[85,6,49,4],[85,11,49,9],[85,13,49,11],[85,17,49,15],[86,6,49,21],[86,11,49,26],[86,13,49,28],[86,17,49,32],[87,6,49,38],[87,11,49,43],[87,13,49,45],[87,18,49,50],[88,6,49,55],[88,11,49,60],[88,13,49,62],[88,18,49,67],[89,6,50,4],[89,11,50,9],[89,13,50,11],[90,4,51,2],[90,5,51,3],[92,4,53,2],[93,4,54,2],[93,10,54,8,"baseRate"],[93,18,54,16],[93,21,54,19,"fallbackRates"],[93,34,54,32],[93,35,54,33,"base"],[93,39,54,37],[93,40,54,38],[93,44,54,42],[93,45,54,43],[94,4,55,2],[94,10,55,8,"rates"],[94,15,55,13],[94,18,55,16,"Object"],[94,24,55,22],[94,25,55,23,"fromEntries"],[94,36,55,34],[94,37,56,4,"Object"],[94,43,56,10],[94,44,56,11,"entries"],[94,51,56,18],[94,52,56,19,"fallbackRates"],[94,65,56,32],[94,66,56,33],[94,67,56,34,"map"],[94,70,56,37],[94,71,56,38],[94,72,56,39],[94,73,56,40,"k"],[94,74,56,41],[94,76,56,43,"v"],[94,77,56,44],[94,78,56,45],[94,83,56,50],[94,84,56,51,"k"],[94,85,56,52],[94,87,56,54,"v"],[94,88,56,55],[94,91,56,58,"baseRate"],[94,99,56,66],[94,100,56,67],[94,101,57,2],[94,102,57,3],[95,4,59,2],[95,11,59,9],[96,6,60,4,"base"],[96,10,60,8],[97,6,61,4,"ts"],[97,8,61,6],[97,10,61,8,"Date"],[97,14,61,12],[97,15,61,13,"now"],[97,18,61,16],[97,19,61,17],[97,20,61,18],[98,6,62,4,"rates"],[99,4,63,2],[99,5,63,3],[100,2,64,0],[101,2,66,7],[101,17,66,22,"getFx"],[101,22,66,27,"getFx"],[101,23,66,28,"base"],[101,27,66,40],[101,29,66,60],[102,4,67,2],[103,4,68,2],[103,10,68,8,"now"],[103,13,68,11],[103,16,68,14,"Date"],[103,20,68,18],[103,21,68,19,"now"],[103,24,68,22],[103,25,68,23],[103,26,68,24],[104,4,69,2],[104,8,69,6,"memoryCache"],[104,19,69,17],[104,20,69,18,"quote"],[104,25,69,23],[104,29,69,27,"now"],[104,32,69,30],[104,36,69,34,"memoryCache"],[104,47,69,45],[104,48,69,46,"quote"],[104,53,69,51],[104,54,69,52,"ts"],[104,56,69,54],[104,60,69,58],[104,61,69,59],[104,62,69,60],[104,65,69,63],[104,66,69,64],[104,69,69,67],[104,71,69,69],[104,74,69,72],[104,78,69,76],[104,80,69,78],[105,6,70,4],[105,10,70,8,"memoryCache"],[105,21,70,19],[105,22,70,20,"quote"],[105,27,70,25],[105,28,70,26,"base"],[105,32,70,30],[105,37,70,35,"base"],[105,41,70,39],[105,43,70,41],[106,8,71,6,"console"],[106,15,71,13],[106,16,71,14,"log"],[106,19,71,17],[106,20,71,18],[106,48,71,46,"base"],[106,52,71,50],[106,54,71,52],[106,55,71,53],[107,8,72,6],[107,15,72,13,"memoryCache"],[107,26,72,24],[107,27,72,25,"quote"],[107,32,72,30],[108,6,73,4],[109,4,74,2],[110,4,76,2],[110,10,76,8,"q"],[110,11,76,9],[110,14,76,12],[110,20,76,18,"fetchRates"],[110,30,76,28],[110,31,76,29,"base"],[110,35,76,33],[110,36,76,34],[111,4,77,2,"memoryCache"],[111,15,77,13],[111,16,77,14,"quote"],[111,21,77,19],[111,24,77,22,"q"],[111,25,77,23],[112,4,78,2],[112,11,78,9,"q"],[112,12,78,10],[113,2,79,0],[114,0,79,1],[114,3]],"functionMap":{"names":["<global>","fetchRates","getFallbackRates","Object.entries.map$argument_0","getFx"],"mappings":"AAA;ACK;CD2B;AEE;sCCqB,6BD;CFQ;OIE"},"hasCjsExports":false},"type":"js/module"}]}