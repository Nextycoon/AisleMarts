{"dependencies":[{"name":"../api/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"vrY6iF+Nd2CrRu9d6eBxeX1BPiA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.paymentsTaxService = void 0;\n  var _client = require(_dependencyMap[0], \"../api/client\");\n  class PaymentsTaxService {\n    async initializeData() {\n      try {\n        const response = await _client.API.post('/payments-tax/initialize');\n        return response.data;\n      } catch (error) {\n        console.error('Failed to initialize payments/tax data:', error);\n        throw error;\n      }\n    }\n    async suggestPaymentMethods(country, currency, cartTotal, userType = 'B2C') {\n      try {\n        const response = await _client.API.post('/payments-tax/suggest-methods', {\n          country,\n          currency,\n          cart_total: cartTotal,\n          user_type: userType\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get payment method suggestions:', error);\n        throw error;\n      }\n    }\n    async computeTax(country, items, role = 'B2C') {\n      try {\n        const response = await _client.API.post('/payments-tax/compute-tax', {\n          country,\n          items,\n          role\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to compute tax:', error);\n        throw error;\n      }\n    }\n    async convertCurrency(fromCurrency, toCurrency, amount) {\n      try {\n        const response = await _client.API.post('/payments-tax/convert-currency', {\n          from_currency: fromCurrency,\n          to_currency: toCurrency,\n          amount\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to convert currency:', error);\n        throw error;\n      }\n    }\n    async assessFraudRisk(country, amount, paymentMethod, userHistory = {}) {\n      try {\n        const response = await _client.API.post('/payments-tax/assess-fraud-risk', {\n          country,\n          amount,\n          payment_method: paymentMethod,\n          user_history: userHistory\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to assess fraud risk:', error);\n        throw error;\n      }\n    }\n    async createEnhancedPaymentIntent(items, country, currency, role = 'B2C', paymentMethodPreference, optimizeFor = 'cost') {\n      try {\n        const response = await _client.API.post('/payments-tax/create-enhanced-payment-intent', {\n          items,\n          country,\n          currency,\n          role,\n          payment_method_preference: paymentMethodPreference,\n          optimize_for: optimizeFor\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to create enhanced payment intent:', error);\n        throw error;\n      }\n    }\n    async getPaymentAnalytics(country, days = 30) {\n      try {\n        const params = new URLSearchParams();\n        if (country) params.append('country', country);\n        params.append('days', days.toString());\n        const response = await _client.API.get(`/payments-tax/payment-analytics?${params.toString()}`);\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get payment analytics:', error);\n        throw error;\n      }\n    }\n    async getTaxAnalytics(country, days = 30) {\n      try {\n        const params = new URLSearchParams();\n        if (country) params.append('country', country);\n        params.append('days', days.toString());\n        const response = await _client.API.get(`/payments-tax/tax-analytics?${params.toString()}`);\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get tax analytics:', error);\n        throw error;\n      }\n    }\n    async checkHealth() {\n      try {\n        const response = await _client.API.get('/payments-tax/health');\n        return response.data;\n      } catch (error) {\n        console.error('Payments/Tax service health check failed:', error);\n        throw error;\n      }\n    }\n  }\n  const paymentsTaxService = exports.paymentsTaxService = new PaymentsTaxService();\n});","lineCount":122,"map":[[6,2,1,0],[6,6,1,0,"_client"],[6,13,1,0],[6,16,1,0,"require"],[6,23,1,0],[6,24,1,0,"_dependencyMap"],[6,38,1,0],[7,2,93,0],[7,8,93,6,"PaymentsTaxService"],[7,26,93,24],[7,27,93,25],[8,4,94,2],[8,10,94,8,"initializeData"],[8,24,94,22,"initializeData"],[8,25,94,22],[8,27,94,25],[9,6,95,4],[9,10,95,8],[10,8,96,6],[10,14,96,12,"response"],[10,22,96,20],[10,25,96,23],[10,31,96,29,"API"],[10,42,96,32],[10,43,96,33,"post"],[10,47,96,37],[10,48,96,38],[10,74,96,64],[10,75,96,65],[11,8,97,6],[11,15,97,13,"response"],[11,23,97,21],[11,24,97,22,"data"],[11,28,97,26],[12,6,98,4],[12,7,98,5],[12,8,98,6],[12,15,98,13,"error"],[12,20,98,18],[12,22,98,20],[13,8,99,6,"console"],[13,15,99,13],[13,16,99,14,"error"],[13,21,99,19],[13,22,99,20],[13,63,99,61],[13,65,99,63,"error"],[13,70,99,68],[13,71,99,69],[14,8,100,6],[14,14,100,12,"error"],[14,19,100,17],[15,6,101,4],[16,4,102,2],[17,4,104,2],[17,10,104,8,"suggestPaymentMethods"],[17,31,104,29,"suggestPaymentMethods"],[17,32,105,4,"country"],[17,39,105,19],[17,41,106,4,"currency"],[17,49,106,20],[17,51,107,4,"cartTotal"],[17,60,107,21],[17,62,108,4,"userType"],[17,70,108,27],[17,73,108,30],[17,78,108,35],[17,80,109,38],[18,6,110,4],[18,10,110,8],[19,8,111,6],[19,14,111,12,"response"],[19,22,111,20],[19,25,111,23],[19,31,111,29,"API"],[19,42,111,32],[19,43,111,33,"post"],[19,47,111,37],[19,48,111,38],[19,79,111,69],[19,81,111,71],[20,10,112,8,"country"],[20,17,112,15],[21,10,113,8,"currency"],[21,18,113,16],[22,10,114,8,"cart_total"],[22,20,114,18],[22,22,114,20,"cartTotal"],[22,31,114,29],[23,10,115,8,"user_type"],[23,19,115,17],[23,21,115,19,"userType"],[24,8,116,6],[24,9,116,7],[24,10,116,8],[25,8,117,6],[25,15,117,13,"response"],[25,23,117,21],[25,24,117,22,"data"],[25,28,117,26],[26,6,118,4],[26,7,118,5],[26,8,118,6],[26,15,118,13,"error"],[26,20,118,18],[26,22,118,20],[27,8,119,6,"console"],[27,15,119,13],[27,16,119,14,"error"],[27,21,119,19],[27,22,119,20],[27,65,119,63],[27,67,119,65,"error"],[27,72,119,70],[27,73,119,71],[28,8,120,6],[28,14,120,12,"error"],[28,19,120,17],[29,6,121,4],[30,4,122,2],[31,4,124,2],[31,10,124,8,"computeTax"],[31,20,124,18,"computeTax"],[31,21,125,4,"country"],[31,28,125,19],[31,30,126,4,"items"],[31,35,131,6],[31,37,132,4,"role"],[31,41,132,23],[31,44,132,26],[31,49,132,31],[31,51,133,29],[32,6,134,4],[32,10,134,8],[33,8,135,6],[33,14,135,12,"response"],[33,22,135,20],[33,25,135,23],[33,31,135,29,"API"],[33,42,135,32],[33,43,135,33,"post"],[33,47,135,37],[33,48,135,38],[33,75,135,65],[33,77,135,67],[34,10,136,8,"country"],[34,17,136,15],[35,10,137,8,"items"],[35,15,137,13],[36,10,138,8,"role"],[37,8,139,6],[37,9,139,7],[37,10,139,8],[38,8,140,6],[38,15,140,13,"response"],[38,23,140,21],[38,24,140,22,"data"],[38,28,140,26],[39,6,141,4],[39,7,141,5],[39,8,141,6],[39,15,141,13,"error"],[39,20,141,18],[39,22,141,20],[40,8,142,6,"console"],[40,15,142,13],[40,16,142,14,"error"],[40,21,142,19],[40,22,142,20],[40,46,142,44],[40,48,142,46,"error"],[40,53,142,51],[40,54,142,52],[41,8,143,6],[41,14,143,12,"error"],[41,19,143,17],[42,6,144,4],[43,4,145,2],[44,4,147,2],[44,10,147,8,"convertCurrency"],[44,25,147,23,"convertCurrency"],[44,26,148,4,"fromCurrency"],[44,38,148,24],[44,40,149,4,"toCurrency"],[44,50,149,22],[44,52,150,4,"amount"],[44,58,150,18],[44,60,151,33],[45,6,152,4],[45,10,152,8],[46,8,153,6],[46,14,153,12,"response"],[46,22,153,20],[46,25,153,23],[46,31,153,29,"API"],[46,42,153,32],[46,43,153,33,"post"],[46,47,153,37],[46,48,153,38],[46,80,153,70],[46,82,153,72],[47,10,154,8,"from_currency"],[47,23,154,21],[47,25,154,23,"fromCurrency"],[47,37,154,35],[48,10,155,8,"to_currency"],[48,21,155,19],[48,23,155,21,"toCurrency"],[48,33,155,31],[49,10,156,8,"amount"],[50,8,157,6],[50,9,157,7],[50,10,157,8],[51,8,158,6],[51,15,158,13,"response"],[51,23,158,21],[51,24,158,22,"data"],[51,28,158,26],[52,6,159,4],[52,7,159,5],[52,8,159,6],[52,15,159,13,"error"],[52,20,159,18],[52,22,159,20],[53,8,160,6,"console"],[53,15,160,13],[53,16,160,14,"error"],[53,21,160,19],[53,22,160,20],[53,51,160,49],[53,53,160,51,"error"],[53,58,160,56],[53,59,160,57],[54,8,161,6],[54,14,161,12,"error"],[54,19,161,17],[55,6,162,4],[56,4,163,2],[57,4,165,2],[57,10,165,8,"assessFraudRisk"],[57,25,165,23,"assessFraudRisk"],[57,26,166,4,"country"],[57,33,166,19],[57,35,167,4,"amount"],[57,41,167,18],[57,43,168,4,"paymentMethod"],[57,56,168,25],[57,58,169,4,"userHistory"],[57,69,169,36],[57,72,169,39],[57,73,169,40],[57,74,169,41],[57,76,170,30],[58,6,171,4],[58,10,171,8],[59,8,172,6],[59,14,172,12,"response"],[59,22,172,20],[59,25,172,23],[59,31,172,29,"API"],[59,42,172,32],[59,43,172,33,"post"],[59,47,172,37],[59,48,172,38],[59,81,172,71],[59,83,172,73],[60,10,173,8,"country"],[60,17,173,15],[61,10,174,8,"amount"],[61,16,174,14],[62,10,175,8,"payment_method"],[62,24,175,22],[62,26,175,24,"paymentMethod"],[62,39,175,37],[63,10,176,8,"user_history"],[63,22,176,20],[63,24,176,22,"userHistory"],[64,8,177,6],[64,9,177,7],[64,10,177,8],[65,8,178,6],[65,15,178,13,"response"],[65,23,178,21],[65,24,178,22,"data"],[65,28,178,26],[66,6,179,4],[66,7,179,5],[66,8,179,6],[66,15,179,13,"error"],[66,20,179,18],[66,22,179,20],[67,8,180,6,"console"],[67,15,180,13],[67,16,180,14,"error"],[67,21,180,19],[67,22,180,20],[67,52,180,50],[67,54,180,52,"error"],[67,59,180,57],[67,60,180,58],[68,8,181,6],[68,14,181,12,"error"],[68,19,181,17],[69,6,182,4],[70,4,183,2],[71,4,185,2],[71,10,185,8,"createEnhancedPaymentIntent"],[71,37,185,35,"createEnhancedPaymentIntent"],[71,38,186,4,"items"],[71,43,191,6],[71,45,192,4,"country"],[71,52,192,19],[71,54,193,4,"currency"],[71,62,193,20],[71,64,194,4,"role"],[71,68,194,23],[71,71,194,26],[71,76,194,31],[71,78,195,4,"paymentMethodPreference"],[71,101,195,36],[71,103,196,4,"optimizeFor"],[71,114,196,46],[71,117,196,49],[71,123,196,55],[71,125,197,36],[72,6,198,4],[72,10,198,8],[73,8,199,6],[73,14,199,12,"response"],[73,22,199,20],[73,25,199,23],[73,31,199,29,"API"],[73,42,199,32],[73,43,199,33,"post"],[73,47,199,37],[73,48,199,38],[73,94,199,84],[73,96,199,86],[74,10,200,8,"items"],[74,15,200,13],[75,10,201,8,"country"],[75,17,201,15],[76,10,202,8,"currency"],[76,18,202,16],[77,10,203,8,"role"],[77,14,203,12],[78,10,204,8,"payment_method_preference"],[78,35,204,33],[78,37,204,35,"paymentMethodPreference"],[78,60,204,58],[79,10,205,8,"optimize_for"],[79,22,205,20],[79,24,205,22,"optimizeFor"],[80,8,206,6],[80,9,206,7],[80,10,206,8],[81,8,207,6],[81,15,207,13,"response"],[81,23,207,21],[81,24,207,22,"data"],[81,28,207,26],[82,6,208,4],[82,7,208,5],[82,8,208,6],[82,15,208,13,"error"],[82,20,208,18],[82,22,208,20],[83,8,209,6,"console"],[83,15,209,13],[83,16,209,14,"error"],[83,21,209,19],[83,22,209,20],[83,65,209,63],[83,67,209,65,"error"],[83,72,209,70],[83,73,209,71],[84,8,210,6],[84,14,210,12,"error"],[84,19,210,17],[85,6,211,4],[86,4,212,2],[87,4,214,2],[87,10,214,8,"getPaymentAnalytics"],[87,29,214,27,"getPaymentAnalytics"],[87,30,214,28,"country"],[87,37,214,44],[87,39,214,46,"days"],[87,43,214,58],[87,46,214,61],[87,48,214,63],[87,50,214,65],[88,6,215,4],[88,10,215,8],[89,8,216,6],[89,14,216,12,"params"],[89,20,216,18],[89,23,216,21],[89,27,216,25,"URLSearchParams"],[89,42,216,40],[89,43,216,41],[89,44,216,42],[90,8,217,6],[90,12,217,10,"country"],[90,19,217,17],[90,21,217,19,"params"],[90,27,217,25],[90,28,217,26,"append"],[90,34,217,32],[90,35,217,33],[90,44,217,42],[90,46,217,44,"country"],[90,53,217,51],[90,54,217,52],[91,8,218,6,"params"],[91,14,218,12],[91,15,218,13,"append"],[91,21,218,19],[91,22,218,20],[91,28,218,26],[91,30,218,28,"days"],[91,34,218,32],[91,35,218,33,"toString"],[91,43,218,41],[91,44,218,42],[91,45,218,43],[91,46,218,44],[92,8,220,6],[92,14,220,12,"response"],[92,22,220,20],[92,25,220,23],[92,31,220,29,"API"],[92,42,220,32],[92,43,220,33,"get"],[92,46,220,36],[92,47,220,37],[92,82,220,72,"params"],[92,88,220,78],[92,89,220,79,"toString"],[92,97,220,87],[92,98,220,88],[92,99,220,89],[92,101,220,91],[92,102,220,92],[93,8,221,6],[93,15,221,13,"response"],[93,23,221,21],[93,24,221,22,"data"],[93,28,221,26],[94,6,222,4],[94,7,222,5],[94,8,222,6],[94,15,222,13,"error"],[94,20,222,18],[94,22,222,20],[95,8,223,6,"console"],[95,15,223,13],[95,16,223,14,"error"],[95,21,223,19],[95,22,223,20],[95,56,223,54],[95,58,223,56,"error"],[95,63,223,61],[95,64,223,62],[96,8,224,6],[96,14,224,12,"error"],[96,19,224,17],[97,6,225,4],[98,4,226,2],[99,4,228,2],[99,10,228,8,"getTaxAnalytics"],[99,25,228,23,"getTaxAnalytics"],[99,26,228,24,"country"],[99,33,228,40],[99,35,228,42,"days"],[99,39,228,54],[99,42,228,57],[99,44,228,59],[99,46,228,61],[100,6,229,4],[100,10,229,8],[101,8,230,6],[101,14,230,12,"params"],[101,20,230,18],[101,23,230,21],[101,27,230,25,"URLSearchParams"],[101,42,230,40],[101,43,230,41],[101,44,230,42],[102,8,231,6],[102,12,231,10,"country"],[102,19,231,17],[102,21,231,19,"params"],[102,27,231,25],[102,28,231,26,"append"],[102,34,231,32],[102,35,231,33],[102,44,231,42],[102,46,231,44,"country"],[102,53,231,51],[102,54,231,52],[103,8,232,6,"params"],[103,14,232,12],[103,15,232,13,"append"],[103,21,232,19],[103,22,232,20],[103,28,232,26],[103,30,232,28,"days"],[103,34,232,32],[103,35,232,33,"toString"],[103,43,232,41],[103,44,232,42],[103,45,232,43],[103,46,232,44],[104,8,234,6],[104,14,234,12,"response"],[104,22,234,20],[104,25,234,23],[104,31,234,29,"API"],[104,42,234,32],[104,43,234,33,"get"],[104,46,234,36],[104,47,234,37],[104,78,234,68,"params"],[104,84,234,74],[104,85,234,75,"toString"],[104,93,234,83],[104,94,234,84],[104,95,234,85],[104,97,234,87],[104,98,234,88],[105,8,235,6],[105,15,235,13,"response"],[105,23,235,21],[105,24,235,22,"data"],[105,28,235,26],[106,6,236,4],[106,7,236,5],[106,8,236,6],[106,15,236,13,"error"],[106,20,236,18],[106,22,236,20],[107,8,237,6,"console"],[107,15,237,13],[107,16,237,14,"error"],[107,21,237,19],[107,22,237,20],[107,52,237,50],[107,54,237,52,"error"],[107,59,237,57],[107,60,237,58],[108,8,238,6],[108,14,238,12,"error"],[108,19,238,17],[109,6,239,4],[110,4,240,2],[111,4,242,2],[111,10,242,8,"checkHealth"],[111,21,242,19,"checkHealth"],[111,22,242,19],[111,24,242,22],[112,6,243,4],[112,10,243,8],[113,8,244,6],[113,14,244,12,"response"],[113,22,244,20],[113,25,244,23],[113,31,244,29,"API"],[113,42,244,32],[113,43,244,33,"get"],[113,46,244,36],[113,47,244,37],[113,69,244,59],[113,70,244,60],[114,8,245,6],[114,15,245,13,"response"],[114,23,245,21],[114,24,245,22,"data"],[114,28,245,26],[115,6,246,4],[115,7,246,5],[115,8,246,6],[115,15,246,13,"error"],[115,20,246,18],[115,22,246,20],[116,8,247,6,"console"],[116,15,247,13],[116,16,247,14,"error"],[116,21,247,19],[116,22,247,20],[116,65,247,63],[116,67,247,65,"error"],[116,72,247,70],[116,73,247,71],[117,8,248,6],[117,14,248,12,"error"],[117,19,248,17],[118,6,249,4],[119,4,250,2],[120,2,251,0],[121,2,253,7],[121,8,253,13,"paymentsTaxService"],[121,26,253,31],[121,29,253,31,"exports"],[121,36,253,31],[121,37,253,31,"paymentsTaxService"],[121,55,253,31],[121,58,253,34],[121,62,253,38,"PaymentsTaxService"],[121,80,253,56],[121,81,253,57],[121,82,253,58],[122,0,253,59],[122,3]],"functionMap":{"names":["<global>","PaymentsTaxService","initializeData","suggestPaymentMethods","computeTax","convertCurrency","assessFraudRisk","createEnhancedPaymentIntent","getPaymentAnalytics","getTaxAnalytics","checkHealth"],"mappings":"AAA;AC4F;ECC;GDQ;EEE;GFkB;EGE;GHqB;EIE;GJgB;EKE;GLkB;EME;GN2B;EOE;GPY;EQE;GRY;ESE;GTQ;CDC"}},"type":"js/module"}]}