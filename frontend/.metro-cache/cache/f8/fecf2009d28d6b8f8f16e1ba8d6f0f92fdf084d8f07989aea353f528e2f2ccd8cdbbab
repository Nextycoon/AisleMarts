{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"MediaCacheLRU\", {\n    enumerable: true,\n    get: function () {\n      return MediaCacheLRU;\n    }\n  });\n  class MediaCacheLRU {\n    map = new Map();\n    total = 0;\n    constructor(maxBytes = 75 * 1024 * 1024) {\n      this.maxBytes = maxBytes;\n    }\n    get sizeBytes() {\n      return this.total;\n    }\n    get(key) {\n      const e = this.map.get(key);\n      if (!e) return null;\n      e.ts = Date.now();\n      return e.uri;\n    }\n    set(key, uri, bytes = 1_000_000) {\n      // default 1MB if unknown\n      const existed = this.map.get(key);\n      if (existed) {\n        this.total -= existed.bytes;\n        this.map.delete(key);\n      }\n      const e = {\n        key,\n        uri,\n        bytes,\n        ts: Date.now()\n      };\n      this.map.set(key, e);\n      this.total += e.bytes;\n      this.evict();\n    }\n    evict() {\n      if (this.total <= this.maxBytes) return;\n      const arr = Array.from(this.map.values()).sort((a, b) => a.ts - b.ts); // oldest first\n      for (const e of arr) {\n        this.map.delete(e.key);\n        this.total -= e.bytes;\n        if (this.total <= this.maxBytes) break;\n      }\n    }\n  }\n});","lineCount":55,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"MediaCacheLRU"],[10,26,3,0],[11,4,3,0],[12,2,3,0],[13,2,3,7],[13,8,3,13,"MediaCacheLRU"],[13,21,3,26],[13,22,3,27],[14,4,4,10,"map"],[14,7,4,13],[14,10,4,16],[14,14,4,20,"Map"],[14,17,4,23],[14,18,4,39],[14,19,4,40],[15,4,5,10,"total"],[15,9,5,15],[15,12,5,18],[15,13,5,19],[16,4,6,2,"constructor"],[16,15,6,13,"constructor"],[16,16,6,22,"maxBytes"],[16,24,6,30],[16,27,6,33],[16,29,6,35],[16,32,6,38],[16,36,6,42],[16,39,6,45],[16,43,6,49],[16,45,6,51],[17,6,6,51],[17,11,6,22,"maxBytes"],[17,19,6,30],[17,22,6,22,"maxBytes"],[17,30,6,30],[18,4,6,52],[19,4,8,2],[19,8,8,6,"sizeBytes"],[19,17,8,15,"sizeBytes"],[19,18,8,15],[19,20,8,18],[20,6,8,20],[20,13,8,27],[20,17,8,31],[20,18,8,32,"total"],[20,23,8,37],[21,4,8,39],[22,4,10,2,"get"],[22,7,10,5,"get"],[22,8,10,6,"key"],[22,11,10,17],[22,13,10,19],[23,6,11,4],[23,12,11,10,"e"],[23,13,11,11],[23,16,11,14],[23,20,11,18],[23,21,11,19,"map"],[23,24,11,22],[23,25,11,23,"get"],[23,28,11,26],[23,29,11,27,"key"],[23,32,11,30],[23,33,11,31],[24,6,12,4],[24,10,12,8],[24,11,12,9,"e"],[24,12,12,10],[24,14,12,12],[24,21,12,19],[24,25,12,23],[25,6,13,4,"e"],[25,7,13,5],[25,8,13,6,"ts"],[25,10,13,8],[25,13,13,11,"Date"],[25,17,13,15],[25,18,13,16,"now"],[25,21,13,19],[25,22,13,20],[25,23,13,21],[26,6,14,4],[26,13,14,11,"e"],[26,14,14,12],[26,15,14,13,"uri"],[26,18,14,16],[27,4,15,2],[28,4,17,2,"set"],[28,7,17,5,"set"],[28,8,17,6,"key"],[28,11,17,17],[28,13,17,19,"uri"],[28,16,17,30],[28,18,17,32,"bytes"],[28,23,17,37],[28,26,17,40],[28,35,17,49],[28,37,17,51],[29,6,17,53],[30,6,18,4],[30,12,18,10,"existed"],[30,19,18,17],[30,22,18,20],[30,26,18,24],[30,27,18,25,"map"],[30,30,18,28],[30,31,18,29,"get"],[30,34,18,32],[30,35,18,33,"key"],[30,38,18,36],[30,39,18,37],[31,6,19,4],[31,10,19,8,"existed"],[31,17,19,15],[31,19,19,17],[32,8,20,6],[32,12,20,10],[32,13,20,11,"total"],[32,18,20,16],[32,22,20,20,"existed"],[32,29,20,27],[32,30,20,28,"bytes"],[32,35,20,33],[33,8,21,6],[33,12,21,10],[33,13,21,11,"map"],[33,16,21,14],[33,17,21,15,"delete"],[33,23,21,21],[33,24,21,22,"key"],[33,27,21,25],[33,28,21,26],[34,6,22,4],[35,6,23,4],[35,12,23,10,"e"],[35,13,23,18],[35,16,23,21],[36,8,23,23,"key"],[36,11,23,26],[37,8,23,28,"uri"],[37,11,23,31],[38,8,23,33,"bytes"],[38,13,23,38],[39,8,23,40,"ts"],[39,10,23,42],[39,12,23,44,"Date"],[39,16,23,48],[39,17,23,49,"now"],[39,20,23,52],[39,21,23,53],[40,6,23,55],[40,7,23,56],[41,6,24,4],[41,10,24,8],[41,11,24,9,"map"],[41,14,24,12],[41,15,24,13,"set"],[41,18,24,16],[41,19,24,17,"key"],[41,22,24,20],[41,24,24,22,"e"],[41,25,24,23],[41,26,24,24],[42,6,25,4],[42,10,25,8],[42,11,25,9,"total"],[42,16,25,14],[42,20,25,18,"e"],[42,21,25,19],[42,22,25,20,"bytes"],[42,27,25,25],[43,6,26,4],[43,10,26,8],[43,11,26,9,"evict"],[43,16,26,14],[43,17,26,15],[43,18,26,16],[44,4,27,2],[45,4,29,2,"evict"],[45,9,29,7,"evict"],[45,10,29,7],[45,12,29,10],[46,6,30,4],[46,10,30,8],[46,14,30,12],[46,15,30,13,"total"],[46,20,30,18],[46,24,30,22],[46,28,30,26],[46,29,30,27,"maxBytes"],[46,37,30,35],[46,39,30,37],[47,6,31,4],[47,12,31,10,"arr"],[47,15,31,13],[47,18,31,16,"Array"],[47,23,31,21],[47,24,31,22,"from"],[47,28,31,26],[47,29,31,27],[47,33,31,31],[47,34,31,32,"map"],[47,37,31,35],[47,38,31,36,"values"],[47,44,31,42],[47,45,31,43],[47,46,31,44],[47,47,31,45],[47,48,31,46,"sort"],[47,52,31,50],[47,53,31,51],[47,54,31,52,"a"],[47,55,31,53],[47,57,31,55,"b"],[47,58,31,56],[47,63,31,61,"a"],[47,64,31,62],[47,65,31,63,"ts"],[47,67,31,65],[47,70,31,68,"b"],[47,71,31,69],[47,72,31,70,"ts"],[47,74,31,72],[47,75,31,73],[47,76,31,74],[47,77,31,75],[48,6,32,4],[48,11,32,9],[48,17,32,15,"e"],[48,18,32,16],[48,22,32,20,"arr"],[48,25,32,23],[48,27,32,25],[49,8,33,6],[49,12,33,10],[49,13,33,11,"map"],[49,16,33,14],[49,17,33,15,"delete"],[49,23,33,21],[49,24,33,22,"e"],[49,25,33,23],[49,26,33,24,"key"],[49,29,33,27],[49,30,33,28],[50,8,34,6],[50,12,34,10],[50,13,34,11,"total"],[50,18,34,16],[50,22,34,20,"e"],[50,23,34,21],[50,24,34,22,"bytes"],[50,29,34,27],[51,8,35,6],[51,12,35,10],[51,16,35,14],[51,17,35,15,"total"],[51,22,35,20],[51,26,35,24],[51,30,35,28],[51,31,35,29,"maxBytes"],[51,39,35,37],[51,41,35,39],[52,6,36,4],[53,4,37,2],[54,2,38,0],[55,0,38,1],[55,3]],"functionMap":{"names":["<global>","MediaCacheLRU","constructor","get__sizeBytes","get","set","evict","Array.from.sort$argument_0"],"mappings":"AAA;OCE;ECG,mDD;EEE,sCF;EGE;GHK;EIE;GJU;EKE;mDCE,qBD;GLM"},"hasCjsExports":false},"type":"js/module"}]}