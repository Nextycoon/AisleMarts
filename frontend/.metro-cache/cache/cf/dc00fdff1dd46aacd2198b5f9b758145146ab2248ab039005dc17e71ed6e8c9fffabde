{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./resolveAssetSource","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":47},"end":{"line":3,"column":54,"index":101}}],"key":"qiXdfzfF08Pne6HL41q9H4FDwsA=","exportNames":["*"]}},{"name":"./resolveHashString","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":102},"end":{"line":4,"column":84,"index":186}}],"key":"lCGXVqBXYTWy+eggX9g5j1ljhdQ=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":263},"end":{"line":6,"column":38,"index":301}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isBlurhashString = isBlurhashString;\n  exports.isThumbhashString = isThumbhashString;\n  exports.resolveSource = resolveSource;\n  exports.resolveSources = resolveSources;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _resolveAssetSource = _interopRequireDefault(require(_dependencyMap[3], \"./resolveAssetSource\"));\n  var _resolveHashString = require(_dependencyMap[4], \"./resolveHashString\");\n  var _utils = require(_dependencyMap[5], \"../utils\");\n  const _excluded = [\"blurhash\", \"thumbhash\"];\n  function isBlurhashString(str) {\n    return /^(blurhash:\\/)+[\\w#$%*+,\\-.:;=?@[\\]^_{}|~]+(\\/[\\d.]+)*$/.test(str);\n  }\n\n  // Base64 strings will be recognized as blurhash by default (to keep compatibility),\n  // interpret as thumbhash only if correct uri scheme is provided\n  function isThumbhashString(str) {\n    return str.startsWith('thumbhash:/');\n  }\n  function resolveSource(source) {\n    if (typeof source === 'string') {\n      if (isBlurhashString(source)) {\n        return (0, _resolveHashString.resolveBlurhashString)(source);\n      } else if (isThumbhashString(source)) {\n        return (0, _resolveHashString.resolveThumbhashString)(source);\n      }\n      return {\n        uri: source\n      };\n    }\n    if (typeof source === 'number') {\n      return (0, _resolveAssetSource.default)(source);\n    }\n    if (typeof source === 'object' && (source?.blurhash || source?.thumbhash)) {\n      const {\n          blurhash,\n          thumbhash\n        } = source,\n        restSource = (0, _objectWithoutPropertiesLoose2.default)(source, _excluded);\n      const resolved = thumbhash ? (0, _resolveHashString.resolveThumbhashString)(thumbhash) : (0, _resolveHashString.resolveBlurhashString)(blurhash);\n      return Object.assign({}, resolved, restSource);\n    }\n    return source ?? null;\n  }\n\n  /**\n   * Resolves provided `source` prop to an array of objects expected by the native implementation.\n   */\n  function resolveSources(sources) {\n    if (Array.isArray(sources)) {\n      return sources.map(resolveSource).filter(Boolean);\n    }\n    if ((0, _utils.isImageRef)(sources)) {\n      if (_expoModulesCore.Platform.OS === 'web') {\n        return sources;\n      }\n      // @ts-expect-error\n      return sources.__expo_shared_object_id__;\n    }\n    return [resolveSource(sources)].filter(Boolean);\n  }\n});","lineCount":67,"map":[[11,2,1,0],[11,6,1,0,"_expoModulesCore"],[11,22,1,0],[11,25,1,0,"require"],[11,32,1,0],[11,33,1,0,"_dependencyMap"],[11,47,1,0],[12,2,3,0],[12,6,3,0,"_resolveAssetSource"],[12,25,3,0],[12,28,3,0,"_interopRequireDefault"],[12,50,3,0],[12,51,3,0,"require"],[12,58,3,0],[12,59,3,0,"_dependencyMap"],[12,73,3,0],[13,2,4,0],[13,6,4,0,"_resolveHashString"],[13,24,4,0],[13,27,4,0,"require"],[13,34,4,0],[13,35,4,0,"_dependencyMap"],[13,49,4,0],[14,2,6,0],[14,6,6,0,"_utils"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,6,38],[15,8,6,38,"_excluded"],[15,17,6,38],[16,2,8,7],[16,11,8,16,"isBlurhashString"],[16,27,8,32,"isBlurhashString"],[16,28,8,33,"str"],[16,31,8,44],[16,33,8,55],[17,4,9,2],[17,11,9,9],[17,68,9,66],[17,69,9,67,"test"],[17,73,9,71],[17,74,9,72,"str"],[17,77,9,75],[17,78,9,76],[18,2,10,0],[20,2,12,0],[21,2,13,0],[22,2,14,7],[22,11,14,16,"isThumbhashString"],[22,28,14,33,"isThumbhashString"],[22,29,14,34,"str"],[22,32,14,45],[22,34,14,56],[23,4,15,2],[23,11,15,9,"str"],[23,14,15,12],[23,15,15,13,"startsWith"],[23,25,15,23],[23,26,15,24],[23,39,15,37],[23,40,15,38],[24,2,16,0],[25,2,18,7],[25,11,18,16,"resolveSource"],[25,24,18,29,"resolveSource"],[25,25,18,30,"source"],[25,31,18,75],[25,33,18,97],[26,4,19,2],[26,8,19,6],[26,15,19,13,"source"],[26,21,19,19],[26,26,19,24],[26,34,19,32],[26,36,19,34],[27,6,20,4],[27,10,20,8,"isBlurhashString"],[27,26,20,24],[27,27,20,25,"source"],[27,33,20,31],[27,34,20,32],[27,36,20,34],[28,8,21,6],[28,15,21,13],[28,19,21,13,"resolveBlurhashString"],[28,59,21,34],[28,61,21,35,"source"],[28,67,21,41],[28,68,21,42],[29,6,22,4],[29,7,22,5],[29,13,22,11],[29,17,22,15,"isThumbhashString"],[29,34,22,32],[29,35,22,33,"source"],[29,41,22,39],[29,42,22,40],[29,44,22,42],[30,8,23,6],[30,15,23,13],[30,19,23,13,"resolveThumbhashString"],[30,60,23,35],[30,62,23,36,"source"],[30,68,23,42],[30,69,23,43],[31,6,24,4],[32,6,25,4],[32,13,25,11],[33,8,25,13,"uri"],[33,11,25,16],[33,13,25,18,"source"],[34,6,25,25],[34,7,25,26],[35,4,26,2],[36,4,27,2],[36,8,27,6],[36,15,27,13,"source"],[36,21,27,19],[36,26,27,24],[36,34,27,32],[36,36,27,34],[37,6,28,4],[37,13,28,11],[37,17,28,11,"resolveAssetSource"],[37,44,28,29],[37,46,28,30,"source"],[37,52,28,36],[37,53,28,37],[38,4,29,2],[39,4,30,2],[39,8,30,6],[39,15,30,13,"source"],[39,21,30,19],[39,26,30,24],[39,34,30,32],[39,39,30,37,"source"],[39,45,30,43],[39,47,30,45,"blurhash"],[39,55,30,53],[39,59,30,57,"source"],[39,65,30,63],[39,67,30,65,"thumbhash"],[39,76,30,74],[39,77,30,75],[39,79,30,77],[40,6,31,4],[40,12,31,10],[41,10,31,12,"blurhash"],[41,18,31,20],[42,10,31,22,"thumbhash"],[43,8,31,47],[43,9,31,48],[43,12,31,51,"source"],[43,18,31,57],[44,8,31,36,"restSource"],[44,18,31,46],[44,25,31,46,"_objectWithoutPropertiesLoose2"],[44,55,31,46],[44,56,31,46,"default"],[44,63,31,46],[44,65,31,51,"source"],[44,71,31,57],[44,73,31,57,"_excluded"],[44,82,31,57],[45,6,32,4],[45,12,32,10,"resolved"],[45,20,32,18],[45,23,32,21,"thumbhash"],[45,32,32,30],[45,35,33,8],[45,39,33,8,"resolveThumbhashString"],[45,80,33,30],[45,82,33,31,"thumbhash"],[45,91,33,40],[45,92,33,41],[45,95,34,8],[45,99,34,8,"resolveBlurhashString"],[45,139,34,29],[45,141,34,30,"blurhash"],[45,149,34,48],[45,150,34,49],[46,6,35,4],[46,13,35,4,"Object"],[46,19,35,4],[46,20,35,4,"assign"],[46,26,35,4],[46,31,36,9,"resolved"],[46,39,36,17],[46,41,37,9,"restSource"],[46,51,37,19],[47,4,39,2],[48,4,40,2],[48,11,40,9,"source"],[48,17,40,15],[48,21,40,19],[48,25,40,23],[49,2,41,0],[51,2,43,0],[52,0,44,0],[53,0,45,0],[54,2,46,7],[54,11,46,16,"resolveSources"],[54,25,46,30,"resolveSources"],[54,26,46,31,"sources"],[54,33,46,61],[54,35,46,91],[55,4,47,2],[55,8,47,6,"Array"],[55,13,47,11],[55,14,47,12,"isArray"],[55,21,47,19],[55,22,47,20,"sources"],[55,29,47,27],[55,30,47,28],[55,32,47,30],[56,6,48,4],[56,13,48,11,"sources"],[56,20,48,18],[56,21,48,19,"map"],[56,24,48,22],[56,25,48,23,"resolveSource"],[56,38,48,36],[56,39,48,37],[56,40,48,38,"filter"],[56,46,48,44],[56,47,48,45,"Boolean"],[56,54,48,52],[56,55,48,53],[57,4,49,2],[58,4,50,2],[58,8,50,6],[58,12,50,6,"isImageRef"],[58,29,50,16],[58,31,50,17,"sources"],[58,38,50,24],[58,39,50,25],[58,41,50,27],[59,6,51,4],[59,10,51,8,"Platform"],[59,35,51,16],[59,36,51,17,"OS"],[59,38,51,19],[59,43,51,24],[59,48,51,29],[59,50,51,31],[60,8,52,6],[60,15,52,13,"sources"],[60,22,52,20],[61,6,53,4],[62,6,54,4],[63,6,55,4],[63,13,55,11,"sources"],[63,20,55,18],[63,21,55,19,"__expo_shared_object_id__"],[63,46,55,44],[64,4,56,2],[65,4,57,2],[65,11,57,9],[65,12,57,10,"resolveSource"],[65,25,57,23],[65,26,57,24,"sources"],[65,33,57,31],[65,34,57,32],[65,35,57,33],[65,36,57,34,"filter"],[65,42,57,40],[65,43,57,41,"Boolean"],[65,50,57,48],[65,51,57,49],[66,2,58,0],[67,0,58,1],[67,3]],"functionMap":{"names":["<global>","isBlurhashString","isThumbhashString","resolveSource","resolveSources"],"mappings":"AAA;OCO;CDE;OEI;CFE;OGE;CHuB;OIK;CJY"}},"type":"js/module"}]}