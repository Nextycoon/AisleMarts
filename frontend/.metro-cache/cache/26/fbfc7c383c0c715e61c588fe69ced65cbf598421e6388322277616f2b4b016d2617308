{"dependencies":[{"name":"expo-haptics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":85},"end":{"line":6,"column":40,"index":125}}],"key":"XxdHVlyuI491+26LeQ/AtfIvhac=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.useHaptics = useHaptics;\n  Object.defineProperty(exports, \"PICKUP_HAPTIC_PATTERNS\", {\n    enumerable: true,\n    get: function () {\n      return PICKUP_HAPTIC_PATTERNS;\n    }\n  });\n  var _expoHaptics = require(_dependencyMap[0], \"expo-haptics\");\n  var Haptics = _interopNamespace(_expoHaptics);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  /**\n   * Haptic Feedback System\n   * Tactile confirmation for pickup system actions\n   */\n\n  function useHaptics() {\n    const triggerHaptic = type => {\n      // Skip haptics on web or if device doesn't support it\n      if (Platform.default.OS === 'web') return;\n      try {\n        switch (type) {\n          case 'success':\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n            break;\n          case 'warning':\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Warning);\n            break;\n          case 'error':\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);\n            break;\n          case 'selection':\n            Haptics.selectionAsync();\n            break;\n          case 'impact_light':\n            Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n            break;\n          case 'impact_medium':\n            Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n            break;\n          case 'impact_heavy':\n            Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy);\n            break;\n          case 'notification_success':\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n            break;\n          case 'notification_warning':\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Warning);\n            break;\n          case 'notification_error':\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);\n            break;\n          default:\n            // Fallback to light impact\n            Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n        }\n      } catch (error) {\n        // Silently fail if haptics not supported\n        console.log('Haptics not supported:', error);\n      }\n    };\n    return {\n      triggerHaptic,\n      // Pickup-specific haptic methods\n      onPickupCompleted: () => {\n        // Double success haptic for completion\n        triggerHaptic('success');\n        setTimeout(() => triggerHaptic('impact_light'), 150);\n      },\n      onReservationScheduled: () => {\n        triggerHaptic('success');\n      },\n      onHoldExtended: () => {\n        triggerHaptic('warning'); // Warning because it's a limited action\n      },\n      onPartialPickup: () => {\n        triggerHaptic('warning'); // Some items picked up, but not all\n      },\n      onReservationCancelled: () => {\n        triggerHaptic('impact_heavy'); // Heavy feedback for destructive action\n      },\n      onScanSuccess: () => {\n        triggerHaptic('success');\n      },\n      onScanError: () => {\n        triggerHaptic('error');\n      },\n      onWindowSelected: () => {\n        triggerHaptic('selection');\n      },\n      onUploadProgress: progress => {\n        // Light haptic at 25%, 50%, 75%, 100%\n        if (progress === 25 || progress === 50 || progress === 75) {\n          triggerHaptic('impact_light');\n        } else if (progress === 100) {\n          triggerHaptic('success');\n        }\n      },\n      // Generic UI haptics\n      onButtonPress: () => {\n        triggerHaptic('impact_light');\n      },\n      onFormSubmit: () => {\n        triggerHaptic('impact_medium');\n      },\n      onNotificationShow: type => {\n        switch (type) {\n          case 'success':\n            triggerHaptic('notification_success');\n            break;\n          case 'warning':\n            triggerHaptic('notification_warning');\n            break;\n          case 'error':\n            triggerHaptic('notification_error');\n            break;\n        }\n      }\n    };\n  }\n\n  // Haptic feedback patterns for common pickup scenarios\n  const PICKUP_HAPTIC_PATTERNS = {\n    // Reservation flow\n    RESERVATION_CREATED: () => {\n      const haptics = useHaptics();\n      haptics.onReservationScheduled();\n    },\n    // Merchant pickup flow\n    CODE_SCANNED: isValid => {\n      const haptics = useHaptics();\n      if (isValid) {\n        haptics.onScanSuccess();\n      } else {\n        haptics.onScanError();\n      }\n    },\n    // Pickup window interactions\n    WINDOW_SELECTED: () => {\n      const haptics = useHaptics();\n      haptics.onWindowSelected();\n    },\n    // File upload feedback\n    UPLOAD_MILESTONE: progress => {\n      const haptics = useHaptics();\n      haptics.onUploadProgress(progress);\n    }\n  };\n  var _default = useHaptics;\n});","lineCount":182,"map":[[27,2,202,0,"Object"],[27,8,202,0],[27,9,202,0,"defineProperty"],[27,23,202,0],[27,24,202,0,"exports"],[27,31,202,0],[28,4,202,0,"enumerable"],[28,14,202,0],[29,4,202,0,"get"],[29,7,202,0],[29,18,202,0,"get"],[29,19,202,0],[30,6,202,0],[30,13,202,0,"_default"],[30,21,202,0],[31,4,202,0],[32,2,202,0],[33,2,41,0,"exports"],[33,9,41,0],[33,10,41,0,"useHaptics"],[33,20,41,0],[33,23,41,0,"useHaptics"],[33,33,41,0],[34,2,172,0,"Object"],[34,8,172,0],[34,9,172,0,"defineProperty"],[34,23,172,0],[34,24,172,0,"exports"],[34,31,172,0],[35,4,172,0,"enumerable"],[35,14,172,0],[36,4,172,0,"get"],[36,7,172,0],[36,18,172,0,"get"],[36,19,172,0],[37,6,172,0],[37,13,172,0,"PICKUP_HAPTIC_PATTERNS"],[37,35,172,0],[38,4,172,0],[39,2,172,0],[40,2,6,0],[40,6,6,0,"_expoHaptics"],[40,18,6,0],[40,21,6,0,"require"],[40,28,6,0],[40,29,6,0,"_dependencyMap"],[40,43,6,0],[41,2,6,0],[41,6,6,0,"Haptics"],[41,13,6,0],[41,16,6,0,"_interopNamespace"],[41,33,6,0],[41,34,6,0,"_expoHaptics"],[41,46,6,0],[42,2,6,40],[42,6,6,40,"_reactNativeWebDistExportsPlatform"],[42,40,6,40],[42,43,6,40,"require"],[42,50,6,40],[42,51,6,40,"_dependencyMap"],[42,65,6,40],[43,2,6,40],[43,6,6,40,"Platform"],[43,14,6,40],[43,17,6,40,"_interopDefault"],[43,32,6,40],[43,33,6,40,"_reactNativeWebDistExportsPlatform"],[43,67,6,40],[44,2,1,0],[45,0,2,0],[46,0,3,0],[47,0,4,0],[49,2,41,7],[49,11,41,16,"useHaptics"],[49,21,41,26,"useHaptics"],[49,22,41,26],[49,24,41,50],[50,4,43,2],[50,10,43,8,"triggerHaptic"],[50,23,43,21],[50,26,43,25,"type"],[50,30,43,41],[50,34,43,46],[51,6,44,4],[52,6,45,4],[52,10,45,8,"Platform"],[52,18,45,16],[52,19,45,16,"default"],[52,26,45,16],[52,27,45,17,"OS"],[52,29,45,19],[52,34,45,24],[52,39,45,29],[52,41,45,31],[53,6,47,4],[53,10,47,8],[54,8,48,6],[54,16,48,14,"type"],[54,20,48,18],[55,10,49,8],[55,15,49,13],[55,24,49,22],[56,12,50,10,"Haptics"],[56,19,50,17],[56,20,50,18,"notificationAsync"],[56,37,50,35],[56,38,50,36,"Haptics"],[56,45,50,43],[56,46,50,44,"NotificationFeedbackType"],[56,70,50,68],[56,71,50,69,"Success"],[56,78,50,76],[56,79,50,77],[57,12,51,10],[58,10,53,8],[58,15,53,13],[58,24,53,22],[59,12,54,10,"Haptics"],[59,19,54,17],[59,20,54,18,"notificationAsync"],[59,37,54,35],[59,38,54,36,"Haptics"],[59,45,54,43],[59,46,54,44,"NotificationFeedbackType"],[59,70,54,68],[59,71,54,69,"Warning"],[59,78,54,76],[59,79,54,77],[60,12,55,10],[61,10,57,8],[61,15,57,13],[61,22,57,20],[62,12,58,10,"Haptics"],[62,19,58,17],[62,20,58,18,"notificationAsync"],[62,37,58,35],[62,38,58,36,"Haptics"],[62,45,58,43],[62,46,58,44,"NotificationFeedbackType"],[62,70,58,68],[62,71,58,69,"Error"],[62,76,58,74],[62,77,58,75],[63,12,59,10],[64,10,61,8],[64,15,61,13],[64,26,61,24],[65,12,62,10,"Haptics"],[65,19,62,17],[65,20,62,18,"selectionAsync"],[65,34,62,32],[65,35,62,33],[65,36,62,34],[66,12,63,10],[67,10,65,8],[67,15,65,13],[67,29,65,27],[68,12,66,10,"Haptics"],[68,19,66,17],[68,20,66,18,"impactAsync"],[68,31,66,29],[68,32,66,30,"Haptics"],[68,39,66,37],[68,40,66,38,"ImpactFeedbackStyle"],[68,59,66,57],[68,60,66,58,"Light"],[68,65,66,63],[68,66,66,64],[69,12,67,10],[70,10,69,8],[70,15,69,13],[70,30,69,28],[71,12,70,10,"Haptics"],[71,19,70,17],[71,20,70,18,"impactAsync"],[71,31,70,29],[71,32,70,30,"Haptics"],[71,39,70,37],[71,40,70,38,"ImpactFeedbackStyle"],[71,59,70,57],[71,60,70,58,"Medium"],[71,66,70,64],[71,67,70,65],[72,12,71,10],[73,10,73,8],[73,15,73,13],[73,29,73,27],[74,12,74,10,"Haptics"],[74,19,74,17],[74,20,74,18,"impactAsync"],[74,31,74,29],[74,32,74,30,"Haptics"],[74,39,74,37],[74,40,74,38,"ImpactFeedbackStyle"],[74,59,74,57],[74,60,74,58,"Heavy"],[74,65,74,63],[74,66,74,64],[75,12,75,10],[76,10,77,8],[76,15,77,13],[76,37,77,35],[77,12,78,10,"Haptics"],[77,19,78,17],[77,20,78,18,"notificationAsync"],[77,37,78,35],[77,38,78,36,"Haptics"],[77,45,78,43],[77,46,78,44,"NotificationFeedbackType"],[77,70,78,68],[77,71,78,69,"Success"],[77,78,78,76],[77,79,78,77],[78,12,79,10],[79,10,81,8],[79,15,81,13],[79,37,81,35],[80,12,82,10,"Haptics"],[80,19,82,17],[80,20,82,18,"notificationAsync"],[80,37,82,35],[80,38,82,36,"Haptics"],[80,45,82,43],[80,46,82,44,"NotificationFeedbackType"],[80,70,82,68],[80,71,82,69,"Warning"],[80,78,82,76],[80,79,82,77],[81,12,83,10],[82,10,85,8],[82,15,85,13],[82,35,85,33],[83,12,86,10,"Haptics"],[83,19,86,17],[83,20,86,18,"notificationAsync"],[83,37,86,35],[83,38,86,36,"Haptics"],[83,45,86,43],[83,46,86,44,"NotificationFeedbackType"],[83,70,86,68],[83,71,86,69,"Error"],[83,76,86,74],[83,77,86,75],[84,12,87,10],[85,10,89,8],[86,12,90,10],[87,12,91,10,"Haptics"],[87,19,91,17],[87,20,91,18,"impactAsync"],[87,31,91,29],[87,32,91,30,"Haptics"],[87,39,91,37],[87,40,91,38,"ImpactFeedbackStyle"],[87,59,91,57],[87,60,91,58,"Light"],[87,65,91,63],[87,66,91,64],[88,8,92,6],[89,6,93,4],[89,7,93,5],[89,8,93,6],[89,15,93,13,"error"],[89,20,93,18],[89,22,93,20],[90,8,94,6],[91,8,95,6,"console"],[91,15,95,13],[91,16,95,14,"log"],[91,19,95,17],[91,20,95,18],[91,44,95,42],[91,46,95,44,"error"],[91,51,95,49],[91,52,95,50],[92,6,96,4],[93,4,97,2],[93,5,97,3],[94,4,99,2],[94,11,99,9],[95,6,100,4,"triggerHaptic"],[95,19,100,17],[96,6,102,4],[97,6,103,4,"onPickupCompleted"],[97,23,103,21],[97,25,103,23,"onPickupCompleted"],[97,26,103,23],[97,31,103,29],[98,8,104,6],[99,8,105,6,"triggerHaptic"],[99,21,105,19],[99,22,105,20],[99,31,105,29],[99,32,105,30],[100,8,106,6,"setTimeout"],[100,18,106,16],[100,19,106,17],[100,25,106,23,"triggerHaptic"],[100,38,106,36],[100,39,106,37],[100,53,106,51],[100,54,106,52],[100,56,106,54],[100,59,106,57],[100,60,106,58],[101,6,107,4],[101,7,107,5],[102,6,109,4,"onReservationScheduled"],[102,28,109,26],[102,30,109,28,"onReservationScheduled"],[102,31,109,28],[102,36,109,34],[103,8,110,6,"triggerHaptic"],[103,21,110,19],[103,22,110,20],[103,31,110,29],[103,32,110,30],[104,6,111,4],[104,7,111,5],[105,6,113,4,"onHoldExtended"],[105,20,113,18],[105,22,113,20,"onHoldExtended"],[105,23,113,20],[105,28,113,26],[106,8,114,6,"triggerHaptic"],[106,21,114,19],[106,22,114,20],[106,31,114,29],[106,32,114,30],[106,33,114,31],[106,34,114,32],[107,6,115,4],[107,7,115,5],[108,6,117,4,"onPartialPickup"],[108,21,117,19],[108,23,117,21,"onPartialPickup"],[108,24,117,21],[108,29,117,27],[109,8,118,6,"triggerHaptic"],[109,21,118,19],[109,22,118,20],[109,31,118,29],[109,32,118,30],[109,33,118,31],[109,34,118,32],[110,6,119,4],[110,7,119,5],[111,6,121,4,"onReservationCancelled"],[111,28,121,26],[111,30,121,28,"onReservationCancelled"],[111,31,121,28],[111,36,121,34],[112,8,122,6,"triggerHaptic"],[112,21,122,19],[112,22,122,20],[112,36,122,34],[112,37,122,35],[112,38,122,36],[112,39,122,37],[113,6,123,4],[113,7,123,5],[114,6,125,4,"onScanSuccess"],[114,19,125,17],[114,21,125,19,"onScanSuccess"],[114,22,125,19],[114,27,125,25],[115,8,126,6,"triggerHaptic"],[115,21,126,19],[115,22,126,20],[115,31,126,29],[115,32,126,30],[116,6,127,4],[116,7,127,5],[117,6,129,4,"onScanError"],[117,17,129,15],[117,19,129,17,"onScanError"],[117,20,129,17],[117,25,129,23],[118,8,130,6,"triggerHaptic"],[118,21,130,19],[118,22,130,20],[118,29,130,27],[118,30,130,28],[119,6,131,4],[119,7,131,5],[120,6,133,4,"onWindowSelected"],[120,22,133,20],[120,24,133,22,"onWindowSelected"],[120,25,133,22],[120,30,133,28],[121,8,134,6,"triggerHaptic"],[121,21,134,19],[121,22,134,20],[121,33,134,31],[121,34,134,32],[122,6,135,4],[122,7,135,5],[123,6,137,4,"onUploadProgress"],[123,22,137,20],[123,24,137,23,"progress"],[123,32,137,39],[123,36,137,44],[124,8,138,6],[125,8,139,6],[125,12,139,10,"progress"],[125,20,139,18],[125,25,139,23],[125,27,139,25],[125,31,139,29,"progress"],[125,39,139,37],[125,44,139,42],[125,46,139,44],[125,50,139,48,"progress"],[125,58,139,56],[125,63,139,61],[125,65,139,63],[125,67,139,65],[126,10,140,8,"triggerHaptic"],[126,23,140,21],[126,24,140,22],[126,38,140,36],[126,39,140,37],[127,8,141,6],[127,9,141,7],[127,15,141,13],[127,19,141,17,"progress"],[127,27,141,25],[127,32,141,30],[127,35,141,33],[127,37,141,35],[128,10,142,8,"triggerHaptic"],[128,23,142,21],[128,24,142,22],[128,33,142,31],[128,34,142,32],[129,8,143,6],[130,6,144,4],[130,7,144,5],[131,6,146,4],[132,6,147,4,"onButtonPress"],[132,19,147,17],[132,21,147,19,"onButtonPress"],[132,22,147,19],[132,27,147,25],[133,8,148,6,"triggerHaptic"],[133,21,148,19],[133,22,148,20],[133,36,148,34],[133,37,148,35],[134,6,149,4],[134,7,149,5],[135,6,151,4,"onFormSubmit"],[135,18,151,16],[135,20,151,18,"onFormSubmit"],[135,21,151,18],[135,26,151,24],[136,8,152,6,"triggerHaptic"],[136,21,152,19],[136,22,152,20],[136,37,152,35],[136,38,152,36],[137,6,153,4],[137,7,153,5],[138,6,155,4,"onNotificationShow"],[138,24,155,22],[138,26,155,25,"type"],[138,30,155,62],[138,34,155,67],[139,8,156,6],[139,16,156,14,"type"],[139,20,156,18],[140,10,157,8],[140,15,157,13],[140,24,157,22],[141,12,158,10,"triggerHaptic"],[141,25,158,23],[141,26,158,24],[141,48,158,46],[141,49,158,47],[142,12,159,10],[143,10,160,8],[143,15,160,13],[143,24,160,22],[144,12,161,10,"triggerHaptic"],[144,25,161,23],[144,26,161,24],[144,48,161,46],[144,49,161,47],[145,12,162,10],[146,10,163,8],[146,15,163,13],[146,22,163,20],[147,12,164,10,"triggerHaptic"],[147,25,164,23],[147,26,164,24],[147,46,164,44],[147,47,164,45],[148,12,165,10],[149,8,166,6],[150,6,167,4],[151,4,168,2],[151,5,168,3],[152,2,169,0],[154,2,171,0],[155,2,172,7],[155,8,172,13,"PICKUP_HAPTIC_PATTERNS"],[155,30,172,35],[155,33,172,38],[156,4,173,2],[157,4,174,2,"RESERVATION_CREATED"],[157,23,174,21],[157,25,174,23,"RESERVATION_CREATED"],[157,26,174,23],[157,31,174,29],[158,6,175,4],[158,12,175,10,"haptics"],[158,19,175,17],[158,22,175,20,"useHaptics"],[158,32,175,30],[158,33,175,31],[158,34,175,32],[159,6,176,4,"haptics"],[159,13,176,11],[159,14,176,12,"onReservationScheduled"],[159,36,176,34],[159,37,176,35],[159,38,176,36],[160,4,177,2],[160,5,177,3],[161,4,179,2],[162,4,180,2,"CODE_SCANNED"],[162,16,180,14],[162,18,180,17,"isValid"],[162,25,180,33],[162,29,180,38],[163,6,181,4],[163,12,181,10,"haptics"],[163,19,181,17],[163,22,181,20,"useHaptics"],[163,32,181,30],[163,33,181,31],[163,34,181,32],[164,6,182,4],[164,10,182,8,"isValid"],[164,17,182,15],[164,19,182,17],[165,8,183,6,"haptics"],[165,15,183,13],[165,16,183,14,"onScanSuccess"],[165,29,183,27],[165,30,183,28],[165,31,183,29],[166,6,184,4],[166,7,184,5],[166,13,184,11],[167,8,185,6,"haptics"],[167,15,185,13],[167,16,185,14,"onScanError"],[167,27,185,25],[167,28,185,26],[167,29,185,27],[168,6,186,4],[169,4,187,2],[169,5,187,3],[170,4,189,2],[171,4,190,2,"WINDOW_SELECTED"],[171,19,190,17],[171,21,190,19,"WINDOW_SELECTED"],[171,22,190,19],[171,27,190,25],[172,6,191,4],[172,12,191,10,"haptics"],[172,19,191,17],[172,22,191,20,"useHaptics"],[172,32,191,30],[172,33,191,31],[172,34,191,32],[173,6,192,4,"haptics"],[173,13,192,11],[173,14,192,12,"onWindowSelected"],[173,30,192,28],[173,31,192,29],[173,32,192,30],[174,4,193,2],[174,5,193,3],[175,4,195,2],[176,4,196,2,"UPLOAD_MILESTONE"],[176,20,196,18],[176,22,196,21,"progress"],[176,30,196,37],[176,34,196,42],[177,6,197,4],[177,12,197,10,"haptics"],[177,19,197,17],[177,22,197,20,"useHaptics"],[177,32,197,30],[177,33,197,31],[177,34,197,32],[178,6,198,4,"haptics"],[178,13,198,11],[178,14,198,12,"onUploadProgress"],[178,30,198,28],[178,31,198,29,"progress"],[178,39,198,37],[178,40,198,38],[179,4,199,2],[180,2,200,0],[180,3,200,1],[181,2,202,0],[181,6,202,0,"_default"],[181,14,202,0],[181,17,202,15,"useHaptics"],[181,27,202,25],[182,0,202,26],[182,3]],"functionMap":{"names":["<global>","useHaptics","triggerHaptic","onPickupCompleted","setTimeout$argument_0","onReservationScheduled","onHoldExtended","onPartialPickup","onReservationCancelled","onScanSuccess","onScanError","onWindowSelected","onUploadProgress","onButtonPress","onFormSubmit","onNotificationShow","PICKUP_HAPTIC_PATTERNS.RESERVATION_CREATED","PICKUP_HAPTIC_PATTERNS.CODE_SCANNED","PICKUP_HAPTIC_PATTERNS.WINDOW_SELECTED","PICKUP_HAPTIC_PATTERNS.UPLOAD_MILESTONE"],"mappings":"AAA;OCwC;wBCE;GDsD;uBEM;iBCG,mCD;KFC;4BIE;KJE;oBKE;KLE;qBME;KNE;4BOE;KPE;mBQE;KRE;iBSE;KTE;sBUE;KVE;sBWE;KXO;mBYG;KZE;kBaE;KbE;wBcE;KdY;CDE;uBgBK;GhBG;gBiBG;GjBO;mBkBG;GlBG;oBmBG;GnBG"},"hasCjsExports":false},"type":"js/module"}]}