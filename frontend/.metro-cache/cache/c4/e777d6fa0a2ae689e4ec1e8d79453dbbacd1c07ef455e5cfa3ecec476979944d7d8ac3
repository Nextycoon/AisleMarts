{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"expo-file-system","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"6GyvFG3BsQPSqqu9QRKJ8hfZxPw=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":32,"index":80}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}},{"name":"../config/voice","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":81},"end":{"line":3,"column":40,"index":121}}],"key":"GeyuPPLg7FICssd4rs/uqsmM3Yg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"OpenAIVoiceAdapter\", {\n    enumerable: true,\n    get: function () {\n      return OpenAIVoiceAdapter;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _expoFileSystem = require(_dependencyMap[3], \"expo-file-system\");\n  var FileSystem = _interopNamespace(_expoFileSystem);\n  var _expoAv = require(_dependencyMap[4], \"expo-av\");\n  var _configVoice = require(_dependencyMap[5], \"../config/voice\");\n  var OpenAIVoiceAdapter = /*#__PURE__*/function () {\n    function OpenAIVoiceAdapter() {\n      (0, _classCallCheck.default)(this, OpenAIVoiceAdapter);\n      this.recording = null;\n      this.sound = null;\n      this.isRecording = false;\n      // Use Emergent LLM key for seamless integration\n      this.apiKey = 'sk-emergent-35d93F3CeFf0c7aD50';\n    }\n    return (0, _createClass.default)(OpenAIVoiceAdapter, [{\n      key: \"startConversation\",\n      value: function () {\n        var _startConversation = (0, _asyncToGenerator.default)(function* () {\n          try {\n            // 1) Record mic audio and transcribe\n            var transcript = yield this.recordAndTranscribe();\n\n            // 2) Get AI reply\n            var reply = yield this.chat(transcript);\n\n            // 3) Optional: Convert reply to speech\n            var audioUri = yield this.tts(reply);\n            return {\n              transcript,\n              reply,\n              audioUri\n            };\n          } catch (error) {\n            console.error('Voice conversation error:', error);\n            throw error;\n          }\n        });\n        function startConversation() {\n          return _startConversation.apply(this, arguments);\n        }\n        return startConversation;\n      }()\n    }, {\n      key: \"recordAndTranscribe\",\n      value: function () {\n        var _recordAndTranscribe = (0, _asyncToGenerator.default)(function* () {\n          try {\n            // Request permissions\n            var _yield$Audio$requestP = yield _expoAv.Audio.requestPermissionsAsync(),\n              status = _yield$Audio$requestP.status;\n            if (status !== 'granted') {\n              throw new Error('Microphone permission denied');\n            }\n\n            // Configure audio mode for recording\n            yield _expoAv.Audio.setAudioModeAsync({\n              allowsRecordingIOS: true,\n              playsInSilentModeIOS: true,\n              playThroughEarpieceAndroid: false,\n              staysActiveInBackground: false\n            });\n\n            // Start recording\n            this.recording = new _expoAv.Audio.Recording();\n            yield this.recording.prepareToRecordAsync(_expoAv.Audio.RecordingOptionsPresets.HIGH_QUALITY);\n            yield this.recording.startAsync();\n            this.isRecording = true;\n\n            // Record for 5 seconds (in production, this would be push-to-talk or voice detection)\n            yield new Promise(resolve => setTimeout(resolve, 5000));\n            yield this.stopRecording();\n            var uri = this.recording.getURI();\n            if (!uri) {\n              throw new Error('Recording failed - no audio file created');\n            }\n\n            // Transcribe using OpenAI Whisper\n            return yield this.transcribeAudio(uri);\n          } catch (error) {\n            this.isRecording = false;\n            throw error;\n          }\n        });\n        function recordAndTranscribe() {\n          return _recordAndTranscribe.apply(this, arguments);\n        }\n        return recordAndTranscribe;\n      }()\n    }, {\n      key: \"transcribeAudio\",\n      value: function () {\n        var _transcribeAudio = (0, _asyncToGenerator.default)(function* (audioUri) {\n          try {\n            // Prepare form data for OpenAI Whisper API\n            var formData = new FormData();\n\n            // Get audio file info\n            var audioInfo = yield FileSystem.getInfoAsync(audioUri);\n            if (!audioInfo.exists) {\n              throw new Error('Audio file does not exist');\n            }\n            formData.append('file', {\n              uri: audioUri,\n              name: 'voice.m4a',\n              type: 'audio/m4a'\n            });\n            formData.append('model', _configVoice.VOICE.openai.sttModel);\n            formData.append('language', 'en'); // Can be made dynamic later\n\n            var response = yield fetch('https://api.openai.com/v1/audio/transcriptions', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${this.apiKey}`\n              },\n              body: formData\n            });\n            if (!response.ok) {\n              var error = yield response.json();\n              throw new Error(error?.error?.message || `Transcription failed: ${response.status}`);\n            }\n            var result = yield response.json();\n            return result.text || '';\n          } catch (error) {\n            console.error('Transcription error:', error);\n            throw new Error('Failed to transcribe audio');\n          }\n        });\n        function transcribeAudio(_x) {\n          return _transcribeAudio.apply(this, arguments);\n        }\n        return transcribeAudio;\n      }()\n    }, {\n      key: \"chat\",\n      value: function () {\n        var _chat = (0, _asyncToGenerator.default)(function* (prompt) {\n          try {\n            var response = yield fetch('https://api.openai.com/v1/chat/completions', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${this.apiKey}`,\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                model: _configVoice.VOICE.openai.chatModel,\n                messages: [{\n                  role: 'system',\n                  content: 'You are Aisle, an AI shopping companion for AisleMarts. You help users find products, compare prices, and make shopping decisions. Keep responses conversational, helpful, and concise for voice interaction.'\n                }, {\n                  role: 'user',\n                  content: prompt\n                }],\n                max_tokens: 150,\n                // Keep responses short for voice\n                temperature: 0.7\n              })\n            });\n            if (!response.ok) {\n              var error = yield response.json();\n              throw new Error(error?.error?.message || `Chat failed: ${response.status}`);\n            }\n            var result = yield response.json();\n            return result.choices?.[0]?.message?.content || 'I apologize, I couldn\\'t process that request.';\n          } catch (error) {\n            console.error('Chat error:', error);\n            throw new Error('Failed to get AI response');\n          }\n        });\n        function chat(_x2) {\n          return _chat.apply(this, arguments);\n        }\n        return chat;\n      }()\n    }, {\n      key: \"tts\",\n      value: function () {\n        var _tts = (0, _asyncToGenerator.default)(function* (text) {\n          if (!text || text.trim().length === 0) {\n            return null;\n          }\n          try {\n            var response = yield fetch('https://api.openai.com/v1/audio/speech', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${this.apiKey}`,\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                model: 'tts-1',\n                // OpenAI TTS model\n                voice: _configVoice.VOICE.openai.ttsVoice,\n                input: text,\n                response_format: 'mp3'\n              })\n            });\n            if (!response.ok) {\n              console.warn('TTS failed, continuing without audio');\n              return null;\n            }\n\n            // Save audio file\n            var audioFileName = `aisle-tts-${Date.now()}.mp3`;\n            var audioUri = FileSystem.cacheDirectory + audioFileName;\n            var audioBuffer = yield response.arrayBuffer();\n            var audioBase64 = Buffer.from(audioBuffer).toString('base64');\n            yield FileSystem.writeAsStringAsync(audioUri, audioBase64, {\n              encoding: FileSystem.EncodingType.Base64\n            });\n            return audioUri;\n          } catch (error) {\n            console.warn('TTS error:', error);\n            return null; // Non-critical, continue without audio\n          }\n        });\n        function tts(_x3) {\n          return _tts.apply(this, arguments);\n        }\n        return tts;\n      }()\n    }, {\n      key: \"play\",\n      value: function () {\n        var _play = (0, _asyncToGenerator.default)(function* (audioUri) {\n          if (!audioUri) return;\n          try {\n            // Unload previous sound if exists\n            if (this.sound) {\n              yield this.sound.unloadAsync();\n            }\n\n            // Load and play new sound\n            var _yield$Audio$Sound$cr = yield _expoAv.Audio.Sound.createAsync({\n                uri: audioUri\n              }, {\n                shouldPlay: true,\n                volume: 1.0\n              }),\n              sound = _yield$Audio$Sound$cr.sound;\n            this.sound = sound;\n\n            // Set up playback status update\n            this.sound.setOnPlaybackStatusUpdate(status => {\n              if (status.isLoaded && status.didJustFinish) {\n                this.sound?.unloadAsync();\n                this.sound = null;\n              }\n            });\n          } catch (error) {\n            console.warn('Audio playback error:', error);\n            // Non-critical, continue without audio playback\n          }\n        });\n        function play(_x4) {\n          return _play.apply(this, arguments);\n        }\n        return play;\n      }()\n    }, {\n      key: \"stop\",\n      value: function () {\n        var _stop = (0, _asyncToGenerator.default)(function* () {\n          try {\n            // Stop recording if active\n            if (this.recording && this.isRecording) {\n              yield this.stopRecording();\n            }\n\n            // Stop audio playback if active\n            if (this.sound) {\n              yield this.sound.stopAsync();\n              yield this.sound.unloadAsync();\n              this.sound = null;\n            }\n          } catch (error) {\n            console.warn('Stop operation error:', error);\n          }\n        });\n        function stop() {\n          return _stop.apply(this, arguments);\n        }\n        return stop;\n      }()\n    }, {\n      key: \"stopRecording\",\n      value: function () {\n        var _stopRecording = (0, _asyncToGenerator.default)(function* () {\n          if (this.recording && this.isRecording) {\n            try {\n              yield this.recording.stopAndUnloadAsync();\n              this.isRecording = false;\n            } catch (error) {\n              console.warn('Stop recording error:', error);\n              this.isRecording = false;\n            }\n          }\n        });\n        function stopRecording() {\n          return _stopRecording.apply(this, arguments);\n        }\n        return stopRecording;\n      }() // Cleanup method\n    }, {\n      key: \"cleanup\",\n      value: function () {\n        var _cleanup = (0, _asyncToGenerator.default)(function* () {\n          yield this.stop();\n          this.recording = null;\n        });\n        function cleanup() {\n          return _cleanup.apply(this, arguments);\n        }\n        return cleanup;\n      }()\n    }]);\n  }();\n});","lineCount":353,"map":[[27,2,11,0,"Object"],[27,8,11,0],[27,9,11,0,"defineProperty"],[27,23,11,0],[27,24,11,0,"exports"],[27,31,11,0],[28,4,11,0,"enumerable"],[28,14,11,0],[29,4,11,0,"get"],[29,7,11,0],[29,18,11,0,"get"],[29,19,11,0],[30,6,11,0],[30,13,11,0,"OpenAIVoiceAdapter"],[30,31,11,0],[31,4,11,0],[32,2,11,0],[33,2,263,1],[33,6,263,1,"_babelRuntimeHelpersAsyncToGenerator"],[33,42,263,1],[33,45,263,1,"require"],[33,52,263,1],[33,53,263,1,"_dependencyMap"],[33,67,263,1],[34,2,263,1],[34,6,263,1,"_asyncToGenerator"],[34,23,263,1],[34,26,263,1,"_interopDefault"],[34,41,263,1],[34,42,263,1,"_babelRuntimeHelpersAsyncToGenerator"],[34,78,263,1],[35,2,263,1],[35,6,263,1,"_babelRuntimeHelpersClassCallCheck"],[35,40,263,1],[35,43,263,1,"require"],[35,50,263,1],[35,51,263,1,"_dependencyMap"],[35,65,263,1],[36,2,263,1],[36,6,263,1,"_classCallCheck"],[36,21,263,1],[36,24,263,1,"_interopDefault"],[36,39,263,1],[36,40,263,1,"_babelRuntimeHelpersClassCallCheck"],[36,74,263,1],[37,2,263,1],[37,6,263,1,"_babelRuntimeHelpersCreateClass"],[37,37,263,1],[37,40,263,1,"require"],[37,47,263,1],[37,48,263,1,"_dependencyMap"],[37,62,263,1],[38,2,263,1],[38,6,263,1,"_createClass"],[38,18,263,1],[38,21,263,1,"_interopDefault"],[38,36,263,1],[38,37,263,1,"_babelRuntimeHelpersCreateClass"],[38,68,263,1],[39,2,1,0],[39,6,1,0,"_expoFileSystem"],[39,21,1,0],[39,24,1,0,"require"],[39,31,1,0],[39,32,1,0,"_dependencyMap"],[39,46,1,0],[40,2,1,0],[40,6,1,0,"FileSystem"],[40,16,1,0],[40,19,1,0,"_interopNamespace"],[40,36,1,0],[40,37,1,0,"_expoFileSystem"],[40,52,1,0],[41,2,2,0],[41,6,2,0,"_expoAv"],[41,13,2,0],[41,16,2,0,"require"],[41,23,2,0],[41,24,2,0,"_dependencyMap"],[41,38,2,0],[42,2,3,0],[42,6,3,0,"_configVoice"],[42,18,3,0],[42,21,3,0,"require"],[42,28,3,0],[42,29,3,0,"_dependencyMap"],[42,43,3,0],[43,2,3,40],[43,6,11,13,"OpenAIVoiceAdapter"],[43,24,11,31],[44,4,11,31],[44,13,11,31,"OpenAIVoiceAdapter"],[44,32,11,31],[45,6,11,31],[45,10,11,31,"_classCallCheck"],[45,25,11,31],[45,26,11,31,"default"],[45,33,11,31],[45,41,11,31,"OpenAIVoiceAdapter"],[45,59,11,31],[46,6,11,31],[46,11,12,10,"recording"],[46,20,12,19],[46,23,12,46],[46,27,12,50],[47,6,12,50],[47,11,13,10,"sound"],[47,16,13,15],[47,19,13,38],[47,23,13,42],[48,6,13,42],[48,11,14,10,"isRecording"],[48,22,14,21],[48,25,14,24],[48,30,14,29],[49,6,16,2],[50,6,16,2],[50,11,17,19,"apiKey"],[50,17,17,25],[50,20,17,28],[50,52,17,60],[51,4,17,60],[52,4,17,60],[52,15,17,60,"_createClass"],[52,27,17,60],[52,28,17,60,"default"],[52,35,17,60],[52,37,17,60,"OpenAIVoiceAdapter"],[52,55,17,60],[53,6,17,60,"key"],[53,9,17,60],[54,6,17,60,"value"],[54,11,17,60],[55,8,17,60],[55,12,17,60,"_startConversation"],[55,30,17,60],[55,37,17,60,"_asyncToGenerator"],[55,54,17,60],[55,55,17,60,"default"],[55,62,17,60],[55,64,19,2],[55,77,19,52],[56,10,20,4],[56,14,20,8],[57,12,21,6],[58,12,22,6],[58,16,22,12,"transcript"],[58,26,22,22],[58,35,22,31],[58,39,22,35],[58,40,22,36,"recordAndTranscribe"],[58,59,22,55],[58,60,22,56],[58,61,22,57],[60,12,24,6],[61,12,25,6],[61,16,25,12,"reply"],[61,21,25,17],[61,30,25,26],[61,34,25,30],[61,35,25,31,"chat"],[61,39,25,35],[61,40,25,36,"transcript"],[61,50,25,46],[61,51,25,47],[63,12,27,6],[64,12,28,6],[64,16,28,12,"audioUri"],[64,24,28,20],[64,33,28,29],[64,37,28,33],[64,38,28,34,"tts"],[64,41,28,37],[64,42,28,38,"reply"],[64,47,28,43],[64,48,28,44],[65,12,30,6],[65,19,30,13],[66,14,30,15,"transcript"],[66,24,30,25],[67,14,30,27,"reply"],[67,19,30,32],[68,14,30,34,"audioUri"],[69,12,30,43],[69,13,30,44],[70,10,31,4],[70,11,31,5],[70,12,31,6],[70,19,31,13,"error"],[70,24,31,18],[70,26,31,20],[71,12,32,6,"console"],[71,19,32,13],[71,20,32,14,"error"],[71,25,32,19],[71,26,32,20],[71,53,32,47],[71,55,32,49,"error"],[71,60,32,54],[71,61,32,55],[72,12,33,6],[72,18,33,12,"error"],[72,23,33,17],[73,10,34,4],[74,8,35,2],[74,9,35,3],[75,8,35,3],[75,17,19,8,"startConversation"],[75,34,19,25,"startConversation"],[75,35,19,25],[76,10,19,25],[76,17,19,25,"_startConversation"],[76,35,19,25],[76,36,19,25,"apply"],[76,41,19,25],[76,48,19,25,"arguments"],[76,57,19,25],[77,8,19,25],[78,8,19,25],[78,15,19,8,"startConversation"],[78,32,19,25],[79,6,19,25],[80,4,19,25],[81,6,19,25,"key"],[81,9,19,25],[82,6,19,25,"value"],[82,11,19,25],[83,8,19,25],[83,12,19,25,"_recordAndTranscribe"],[83,32,19,25],[83,39,19,25,"_asyncToGenerator"],[83,56,19,25],[83,57,19,25,"default"],[83,64,19,25],[83,66,37,2],[83,79,37,47],[84,10,38,4],[84,14,38,8],[85,12,39,6],[86,12,40,6],[86,16,40,6,"_yield$Audio$requestP"],[86,37,40,6],[86,46,40,31,"Audio"],[86,53,40,36],[86,54,40,36,"Audio"],[86,59,40,36],[86,60,40,37,"requestPermissionsAsync"],[86,83,40,60],[86,84,40,61],[86,85,40,62],[87,14,40,14,"status"],[87,20,40,20],[87,23,40,20,"_yield$Audio$requestP"],[87,44,40,20],[87,45,40,14,"status"],[87,51,40,20],[88,12,41,6],[88,16,41,10,"status"],[88,22,41,16],[88,27,41,21],[88,36,41,30],[88,38,41,32],[89,14,42,8],[89,20,42,14],[89,24,42,18,"Error"],[89,29,42,23],[89,30,42,24],[89,60,42,54],[89,61,42,55],[90,12,43,6],[92,12,45,6],[93,12,46,6],[93,18,46,12,"Audio"],[93,25,46,17],[93,26,46,17,"Audio"],[93,31,46,17],[93,32,46,18,"setAudioModeAsync"],[93,49,46,35],[93,50,46,36],[94,14,47,8,"allowsRecordingIOS"],[94,32,47,26],[94,34,47,28],[94,38,47,32],[95,14,48,8,"playsInSilentModeIOS"],[95,34,48,28],[95,36,48,30],[95,40,48,34],[96,14,49,8,"playThroughEarpieceAndroid"],[96,40,49,34],[96,42,49,36],[96,47,49,41],[97,14,50,8,"staysActiveInBackground"],[97,37,50,31],[97,39,50,33],[98,12,51,6],[98,13,51,7],[98,14,51,8],[100,12,53,6],[101,12,54,6],[101,16,54,10],[101,17,54,11,"recording"],[101,26,54,20],[101,29,54,23],[101,33,54,27,"Audio"],[101,40,54,32],[101,41,54,32,"Audio"],[101,46,54,32],[101,47,54,33,"Recording"],[101,56,54,42],[101,57,54,43],[101,58,54,44],[102,12,55,6],[102,18,55,12],[102,22,55,16],[102,23,55,17,"recording"],[102,32,55,26],[102,33,55,27,"prepareToRecordAsync"],[102,53,55,47],[102,54,55,48,"Audio"],[102,61,55,53],[102,62,55,53,"Audio"],[102,67,55,53],[102,68,55,54,"RecordingOptionsPresets"],[102,91,55,77],[102,92,55,78,"HIGH_QUALITY"],[102,104,55,90],[102,105,55,91],[103,12,56,6],[103,18,56,12],[103,22,56,16],[103,23,56,17,"recording"],[103,32,56,26],[103,33,56,27,"startAsync"],[103,43,56,37],[103,44,56,38],[103,45,56,39],[104,12,57,6],[104,16,57,10],[104,17,57,11,"isRecording"],[104,28,57,22],[104,31,57,25],[104,35,57,29],[106,12,59,6],[107,12,60,6],[107,18,60,12],[107,22,60,16,"Promise"],[107,29,60,23],[107,30,60,24,"resolve"],[107,37,60,31],[107,41,60,35,"setTimeout"],[107,51,60,45],[107,52,60,46,"resolve"],[107,59,60,53],[107,61,60,55],[107,65,60,59],[107,66,60,60],[107,67,60,61],[108,12,62,6],[108,18,62,12],[108,22,62,16],[108,23,62,17,"stopRecording"],[108,36,62,30],[108,37,62,31],[108,38,62,32],[109,12,64,6],[109,16,64,12,"uri"],[109,19,64,15],[109,22,64,18],[109,26,64,22],[109,27,64,23,"recording"],[109,36,64,32],[109,37,64,33,"getURI"],[109,43,64,39],[109,44,64,40],[109,45,64,41],[110,12,65,6],[110,16,65,10],[110,17,65,11,"uri"],[110,20,65,14],[110,22,65,16],[111,14,66,8],[111,20,66,14],[111,24,66,18,"Error"],[111,29,66,23],[111,30,66,24],[111,72,66,66],[111,73,66,67],[112,12,67,6],[114,12,69,6],[115,12,70,6],[115,25,70,19],[115,29,70,23],[115,30,70,24,"transcribeAudio"],[115,45,70,39],[115,46,70,40,"uri"],[115,49,70,43],[115,50,70,44],[116,10,71,4],[116,11,71,5],[116,12,71,6],[116,19,71,13,"error"],[116,24,71,18],[116,26,71,20],[117,12,72,6],[117,16,72,10],[117,17,72,11,"isRecording"],[117,28,72,22],[117,31,72,25],[117,36,72,30],[118,12,73,6],[118,18,73,12,"error"],[118,23,73,17],[119,10,74,4],[120,8,75,2],[120,9,75,3],[121,8,75,3],[121,17,37,8,"recordAndTranscribe"],[121,36,37,27,"recordAndTranscribe"],[121,37,37,27],[122,10,37,27],[122,17,37,27,"_recordAndTranscribe"],[122,37,37,27],[122,38,37,27,"apply"],[122,43,37,27],[122,50,37,27,"arguments"],[122,59,37,27],[123,8,37,27],[124,8,37,27],[124,15,37,8,"recordAndTranscribe"],[124,34,37,27],[125,6,37,27],[126,4,37,27],[127,6,37,27,"key"],[127,9,37,27],[128,6,37,27,"value"],[128,11,37,27],[129,8,37,27],[129,12,37,27,"_transcribeAudio"],[129,28,37,27],[129,35,37,27,"_asyncToGenerator"],[129,52,37,27],[129,53,37,27,"default"],[129,60,37,27],[129,62,77,2],[129,73,77,32,"audioUri"],[129,81,77,48],[129,83,77,67],[130,10,78,4],[130,14,78,8],[131,12,79,6],[132,12,80,6],[132,16,80,12,"formData"],[132,24,80,20],[132,27,80,23],[132,31,80,27,"FormData"],[132,39,80,35],[132,40,80,36],[132,41,80,37],[134,12,82,6],[135,12,83,6],[135,16,83,12,"audioInfo"],[135,25,83,21],[135,34,83,30,"FileSystem"],[135,44,83,40],[135,45,83,41,"getInfoAsync"],[135,57,83,53],[135,58,83,54,"audioUri"],[135,66,83,62],[135,67,83,63],[136,12,84,6],[136,16,84,10],[136,17,84,11,"audioInfo"],[136,26,84,20],[136,27,84,21,"exists"],[136,33,84,27],[136,35,84,29],[137,14,85,8],[137,20,85,14],[137,24,85,18,"Error"],[137,29,85,23],[137,30,85,24],[137,57,85,51],[137,58,85,52],[138,12,86,6],[139,12,88,6,"formData"],[139,20,88,14],[139,21,88,15,"append"],[139,27,88,21],[139,28,88,22],[139,34,88,28],[139,36,88,30],[140,14,89,8,"uri"],[140,17,89,11],[140,19,89,13,"audioUri"],[140,27,89,21],[141,14,90,8,"name"],[141,18,90,12],[141,20,90,14],[141,31,90,25],[142,14,91,8,"type"],[142,18,91,12],[142,20,91,14],[143,12,92,6],[143,13,92,14],[143,14,92,15],[144,12,93,6,"formData"],[144,20,93,14],[144,21,93,15,"append"],[144,27,93,21],[144,28,93,22],[144,35,93,29],[144,37,93,31,"VOICE"],[144,49,93,36],[144,50,93,36,"VOICE"],[144,55,93,36],[144,56,93,37,"openai"],[144,62,93,43],[144,63,93,44,"sttModel"],[144,71,93,52],[144,72,93,53],[145,12,94,6,"formData"],[145,20,94,14],[145,21,94,15,"append"],[145,27,94,21],[145,28,94,22],[145,38,94,32],[145,40,94,34],[145,44,94,38],[145,45,94,39],[145,46,94,40],[145,47,94,41],[147,12,96,6],[147,16,96,12,"response"],[147,24,96,20],[147,33,96,29,"fetch"],[147,38,96,34],[147,39,96,35],[147,87,96,83],[147,89,96,85],[148,14,97,8,"method"],[148,20,97,14],[148,22,97,16],[148,28,97,22],[149,14,98,8,"headers"],[149,21,98,15],[149,23,98,17],[150,16,99,10],[150,31,99,25],[150,33,99,27],[150,43,99,37],[150,47,99,41],[150,48,99,42,"apiKey"],[150,54,99,48],[151,14,100,8],[151,15,100,9],[152,14,101,8,"body"],[152,18,101,12],[152,20,101,14,"formData"],[153,12,102,6],[153,13,102,7],[153,14,102,8],[154,12,104,6],[154,16,104,10],[154,17,104,11,"response"],[154,25,104,19],[154,26,104,20,"ok"],[154,28,104,22],[154,30,104,24],[155,14,105,8],[155,18,105,14,"error"],[155,23,105,19],[155,32,105,28,"response"],[155,40,105,36],[155,41,105,37,"json"],[155,45,105,41],[155,46,105,42],[155,47,105,43],[156,14,106,8],[156,20,106,14],[156,24,106,18,"Error"],[156,29,106,23],[156,30,106,24,"error"],[156,35,106,29],[156,37,106,31,"error"],[156,42,106,36],[156,44,106,38,"message"],[156,51,106,45],[156,55,106,49],[156,80,106,74,"response"],[156,88,106,82],[156,89,106,83,"status"],[156,95,106,89],[156,97,106,91],[156,98,106,92],[157,12,107,6],[158,12,109,6],[158,16,109,12,"result"],[158,22,109,18],[158,31,109,27,"response"],[158,39,109,35],[158,40,109,36,"json"],[158,44,109,40],[158,45,109,41],[158,46,109,42],[159,12,110,6],[159,19,110,13,"result"],[159,25,110,19],[159,26,110,20,"text"],[159,30,110,24],[159,34,110,28],[159,36,110,30],[160,10,111,4],[160,11,111,5],[160,12,111,6],[160,19,111,13,"error"],[160,24,111,18],[160,26,111,20],[161,12,112,6,"console"],[161,19,112,13],[161,20,112,14,"error"],[161,25,112,19],[161,26,112,20],[161,48,112,42],[161,50,112,44,"error"],[161,55,112,49],[161,56,112,50],[162,12,113,6],[162,18,113,12],[162,22,113,16,"Error"],[162,27,113,21],[162,28,113,22],[162,56,113,50],[162,57,113,51],[163,10,114,4],[164,8,115,2],[164,9,115,3],[165,8,115,3],[165,17,77,16,"transcribeAudio"],[165,32,77,31,"transcribeAudio"],[165,33,77,31,"_x"],[165,35,77,31],[166,10,77,31],[166,17,77,31,"_transcribeAudio"],[166,33,77,31],[166,34,77,31,"apply"],[166,39,77,31],[166,46,77,31,"arguments"],[166,55,77,31],[167,8,77,31],[168,8,77,31],[168,15,77,16,"transcribeAudio"],[168,30,77,31],[169,6,77,31],[170,4,77,31],[171,6,77,31,"key"],[171,9,77,31],[172,6,77,31,"value"],[172,11,77,31],[173,8,77,31],[173,12,77,31,"_chat"],[173,17,77,31],[173,24,77,31,"_asyncToGenerator"],[173,41,77,31],[173,42,77,31,"default"],[173,49,77,31],[173,51,117,2],[173,62,117,13,"prompt"],[173,68,117,27],[173,70,117,46],[174,10,118,4],[174,14,118,8],[175,12,119,6],[175,16,119,12,"response"],[175,24,119,20],[175,33,119,29,"fetch"],[175,38,119,34],[175,39,119,35],[175,83,119,79],[175,85,119,81],[176,14,120,8,"method"],[176,20,120,14],[176,22,120,16],[176,28,120,22],[177,14,121,8,"headers"],[177,21,121,15],[177,23,121,17],[178,16,122,10],[178,31,122,25],[178,33,122,27],[178,43,122,37],[178,47,122,41],[178,48,122,42,"apiKey"],[178,54,122,48],[178,56,122,50],[179,16,123,10],[179,30,123,24],[179,32,123,26],[180,14,124,8],[180,15,124,9],[181,14,125,8,"body"],[181,18,125,12],[181,20,125,14,"JSON"],[181,24,125,18],[181,25,125,19,"stringify"],[181,34,125,28],[181,35,125,29],[182,16,126,10,"model"],[182,21,126,15],[182,23,126,17,"VOICE"],[182,35,126,22],[182,36,126,22,"VOICE"],[182,41,126,22],[182,42,126,23,"openai"],[182,48,126,29],[182,49,126,30,"chatModel"],[182,58,126,39],[183,16,127,10,"messages"],[183,24,127,18],[183,26,127,20],[183,27,128,12],[184,18,129,14,"role"],[184,22,129,18],[184,24,129,20],[184,32,129,28],[185,18,130,14,"content"],[185,25,130,21],[185,27,130,23],[186,16,131,12],[186,17,131,13],[186,19,132,12],[187,18,133,14,"role"],[187,22,133,18],[187,24,133,20],[187,30,133,26],[188,18,134,14,"content"],[188,25,134,21],[188,27,134,23,"prompt"],[189,16,135,12],[189,17,135,13],[189,18,136,11],[190,16,137,10,"max_tokens"],[190,26,137,20],[190,28,137,22],[190,31,137,25],[191,16,137,27],[192,16,138,10,"temperature"],[192,27,138,21],[192,29,138,23],[193,14,139,8],[193,15,139,9],[194,12,140,6],[194,13,140,7],[194,14,140,8],[195,12,142,6],[195,16,142,10],[195,17,142,11,"response"],[195,25,142,19],[195,26,142,20,"ok"],[195,28,142,22],[195,30,142,24],[196,14,143,8],[196,18,143,14,"error"],[196,23,143,19],[196,32,143,28,"response"],[196,40,143,36],[196,41,143,37,"json"],[196,45,143,41],[196,46,143,42],[196,47,143,43],[197,14,144,8],[197,20,144,14],[197,24,144,18,"Error"],[197,29,144,23],[197,30,144,24,"error"],[197,35,144,29],[197,37,144,31,"error"],[197,42,144,36],[197,44,144,38,"message"],[197,51,144,45],[197,55,144,49],[197,71,144,65,"response"],[197,79,144,73],[197,80,144,74,"status"],[197,86,144,80],[197,88,144,82],[197,89,144,83],[198,12,145,6],[199,12,147,6],[199,16,147,12,"result"],[199,22,147,18],[199,31,147,27,"response"],[199,39,147,35],[199,40,147,36,"json"],[199,44,147,40],[199,45,147,41],[199,46,147,42],[200,12,148,6],[200,19,148,13,"result"],[200,25,148,19],[200,26,148,20,"choices"],[200,33,148,27],[200,36,148,30],[200,37,148,31],[200,38,148,32],[200,40,148,34,"message"],[200,47,148,41],[200,49,148,43,"content"],[200,56,148,50],[200,60,148,54],[200,108,148,102],[201,10,149,4],[201,11,149,5],[201,12,149,6],[201,19,149,13,"error"],[201,24,149,18],[201,26,149,20],[202,12,150,6,"console"],[202,19,150,13],[202,20,150,14,"error"],[202,25,150,19],[202,26,150,20],[202,39,150,33],[202,41,150,35,"error"],[202,46,150,40],[202,47,150,41],[203,12,151,6],[203,18,151,12],[203,22,151,16,"Error"],[203,27,151,21],[203,28,151,22],[203,55,151,49],[203,56,151,50],[204,10,152,4],[205,8,153,2],[205,9,153,3],[206,8,153,3],[206,17,117,8,"chat"],[206,21,117,12,"chat"],[206,22,117,12,"_x2"],[206,25,117,12],[207,10,117,12],[207,17,117,12,"_chat"],[207,22,117,12],[207,23,117,12,"apply"],[207,28,117,12],[207,35,117,12,"arguments"],[207,44,117,12],[208,8,117,12],[209,8,117,12],[209,15,117,8,"chat"],[209,19,117,12],[210,6,117,12],[211,4,117,12],[212,6,117,12,"key"],[212,9,117,12],[213,6,117,12,"value"],[213,11,117,12],[214,8,117,12],[214,12,117,12,"_tts"],[214,16,117,12],[214,23,117,12,"_asyncToGenerator"],[214,40,117,12],[214,41,117,12,"default"],[214,48,117,12],[214,50,155,2],[214,61,155,12,"text"],[214,65,155,24],[214,67,155,50],[215,10,156,4],[215,14,156,8],[215,15,156,9,"text"],[215,19,156,13],[215,23,156,17,"text"],[215,27,156,21],[215,28,156,22,"trim"],[215,32,156,26],[215,33,156,27],[215,34,156,28],[215,35,156,29,"length"],[215,41,156,35],[215,46,156,40],[215,47,156,41],[215,49,156,43],[216,12,157,6],[216,19,157,13],[216,23,157,17],[217,10,158,4],[218,10,160,4],[218,14,160,8],[219,12,161,6],[219,16,161,12,"response"],[219,24,161,20],[219,33,161,29,"fetch"],[219,38,161,34],[219,39,161,35],[219,79,161,75],[219,81,161,77],[220,14,162,8,"method"],[220,20,162,14],[220,22,162,16],[220,28,162,22],[221,14,163,8,"headers"],[221,21,163,15],[221,23,163,17],[222,16,164,10],[222,31,164,25],[222,33,164,27],[222,43,164,37],[222,47,164,41],[222,48,164,42,"apiKey"],[222,54,164,48],[222,56,164,50],[223,16,165,10],[223,30,165,24],[223,32,165,26],[224,14,166,8],[224,15,166,9],[225,14,167,8,"body"],[225,18,167,12],[225,20,167,14,"JSON"],[225,24,167,18],[225,25,167,19,"stringify"],[225,34,167,28],[225,35,167,29],[226,16,168,10,"model"],[226,21,168,15],[226,23,168,17],[226,30,168,24],[227,16,168,26],[228,16,169,10,"voice"],[228,21,169,15],[228,23,169,17,"VOICE"],[228,35,169,22],[228,36,169,22,"VOICE"],[228,41,169,22],[228,42,169,23,"openai"],[228,48,169,29],[228,49,169,30,"ttsVoice"],[228,57,169,38],[229,16,170,10,"input"],[229,21,170,15],[229,23,170,17,"text"],[229,27,170,21],[230,16,171,10,"response_format"],[230,31,171,25],[230,33,171,27],[231,14,172,8],[231,15,172,9],[232,12,173,6],[232,13,173,7],[232,14,173,8],[233,12,175,6],[233,16,175,10],[233,17,175,11,"response"],[233,25,175,19],[233,26,175,20,"ok"],[233,28,175,22],[233,30,175,24],[234,14,176,8,"console"],[234,21,176,15],[234,22,176,16,"warn"],[234,26,176,20],[234,27,176,21],[234,65,176,59],[234,66,176,60],[235,14,177,8],[235,21,177,15],[235,25,177,19],[236,12,178,6],[238,12,180,6],[239,12,181,6],[239,16,181,12,"audioFileName"],[239,29,181,25],[239,32,181,28],[239,45,181,41,"Date"],[239,49,181,45],[239,50,181,46,"now"],[239,53,181,49],[239,54,181,50],[239,55,181,51],[239,61,181,57],[240,12,182,6],[240,16,182,12,"audioUri"],[240,24,182,20],[240,27,182,23,"FileSystem"],[240,37,182,33],[240,38,182,34,"cacheDirectory"],[240,52,182,48],[240,55,182,51,"audioFileName"],[240,68,182,64],[241,12,184,6],[241,16,184,12,"audioBuffer"],[241,27,184,23],[241,36,184,32,"response"],[241,44,184,40],[241,45,184,41,"arrayBuffer"],[241,56,184,52],[241,57,184,53],[241,58,184,54],[242,12,185,6],[242,16,185,12,"audioBase64"],[242,27,185,23],[242,30,185,26,"Buffer"],[242,36,185,32],[242,37,185,33,"from"],[242,41,185,37],[242,42,185,38,"audioBuffer"],[242,53,185,49],[242,54,185,50],[242,55,185,51,"toString"],[242,63,185,59],[242,64,185,60],[242,72,185,68],[242,73,185,69],[243,12,187,6],[243,18,187,12,"FileSystem"],[243,28,187,22],[243,29,187,23,"writeAsStringAsync"],[243,47,187,41],[243,48,187,42,"audioUri"],[243,56,187,50],[243,58,187,52,"audioBase64"],[243,69,187,63],[243,71,187,65],[244,14,188,8,"encoding"],[244,22,188,16],[244,24,188,18,"FileSystem"],[244,34,188,28],[244,35,188,29,"EncodingType"],[244,47,188,41],[244,48,188,42,"Base64"],[245,12,189,6],[245,13,189,7],[245,14,189,8],[246,12,191,6],[246,19,191,13,"audioUri"],[246,27,191,21],[247,10,192,4],[247,11,192,5],[247,12,192,6],[247,19,192,13,"error"],[247,24,192,18],[247,26,192,20],[248,12,193,6,"console"],[248,19,193,13],[248,20,193,14,"warn"],[248,24,193,18],[248,25,193,19],[248,37,193,31],[248,39,193,33,"error"],[248,44,193,38],[248,45,193,39],[249,12,194,6],[249,19,194,13],[249,23,194,17],[249,24,194,18],[249,25,194,19],[250,10,195,4],[251,8,196,2],[251,9,196,3],[252,8,196,3],[252,17,155,8,"tts"],[252,20,155,11,"tts"],[252,21,155,11,"_x3"],[252,24,155,11],[253,10,155,11],[253,17,155,11,"_tts"],[253,21,155,11],[253,22,155,11,"apply"],[253,27,155,11],[253,34,155,11,"arguments"],[253,43,155,11],[254,8,155,11],[255,8,155,11],[255,15,155,8,"tts"],[255,18,155,11],[256,6,155,11],[257,4,155,11],[258,6,155,11,"key"],[258,9,155,11],[259,6,155,11,"value"],[259,11,155,11],[260,8,155,11],[260,12,155,11,"_play"],[260,17,155,11],[260,24,155,11,"_asyncToGenerator"],[260,41,155,11],[260,42,155,11,"default"],[260,49,155,11],[260,51,198,2],[260,62,198,13,"audioUri"],[260,70,198,29],[260,72,198,46],[261,10,199,4],[261,14,199,8],[261,15,199,9,"audioUri"],[261,23,199,17],[261,25,199,19],[262,10,201,4],[262,14,201,8],[263,12,202,6],[264,12,203,6],[264,16,203,10],[264,20,203,14],[264,21,203,15,"sound"],[264,26,203,20],[264,28,203,22],[265,14,204,8],[265,20,204,14],[265,24,204,18],[265,25,204,19,"sound"],[265,30,204,24],[265,31,204,25,"unloadAsync"],[265,42,204,36],[265,43,204,37],[265,44,204,38],[266,12,205,6],[268,12,207,6],[269,12,208,6],[269,16,208,6,"_yield$Audio$Sound$cr"],[269,37,208,6],[269,46,208,30,"Audio"],[269,53,208,35],[269,54,208,35,"Audio"],[269,59,208,35],[269,60,208,36,"Sound"],[269,65,208,41],[269,66,208,42,"createAsync"],[269,77,208,53],[269,78,209,8],[270,16,209,10,"uri"],[270,19,209,13],[270,21,209,15,"audioUri"],[271,14,209,24],[271,15,209,25],[271,17,210,8],[272,16,210,10,"shouldPlay"],[272,26,210,20],[272,28,210,22],[272,32,210,26],[273,16,210,28,"volume"],[273,22,210,34],[273,24,210,36],[274,14,210,40],[274,15,211,6],[274,16,211,7],[275,14,208,14,"sound"],[275,19,208,19],[275,22,208,19,"_yield$Audio$Sound$cr"],[275,43,208,19],[275,44,208,14,"sound"],[275,49,208,19],[276,12,213,6],[276,16,213,10],[276,17,213,11,"sound"],[276,22,213,16],[276,25,213,19,"sound"],[276,30,213,24],[278,12,215,6],[279,12,216,6],[279,16,216,10],[279,17,216,11,"sound"],[279,22,216,16],[279,23,216,17,"setOnPlaybackStatusUpdate"],[279,48,216,42],[279,49,216,44,"status"],[279,55,216,50],[279,59,216,55],[280,14,217,8],[280,18,217,12,"status"],[280,24,217,18],[280,25,217,19,"isLoaded"],[280,33,217,27],[280,37,217,31,"status"],[280,43,217,37],[280,44,217,38,"didJustFinish"],[280,57,217,51],[280,59,217,53],[281,16,218,10],[281,20,218,14],[281,21,218,15,"sound"],[281,26,218,20],[281,28,218,22,"unloadAsync"],[281,39,218,33],[281,40,218,34],[281,41,218,35],[282,16,219,10],[282,20,219,14],[282,21,219,15,"sound"],[282,26,219,20],[282,29,219,23],[282,33,219,27],[283,14,220,8],[284,12,221,6],[284,13,221,7],[284,14,221,8],[285,10,222,4],[285,11,222,5],[285,12,222,6],[285,19,222,13,"error"],[285,24,222,18],[285,26,222,20],[286,12,223,6,"console"],[286,19,223,13],[286,20,223,14,"warn"],[286,24,223,18],[286,25,223,19],[286,48,223,42],[286,50,223,44,"error"],[286,55,223,49],[286,56,223,50],[287,12,224,6],[288,10,225,4],[289,8,226,2],[289,9,226,3],[290,8,226,3],[290,17,198,8,"play"],[290,21,198,12,"play"],[290,22,198,12,"_x4"],[290,25,198,12],[291,10,198,12],[291,17,198,12,"_play"],[291,22,198,12],[291,23,198,12,"apply"],[291,28,198,12],[291,35,198,12,"arguments"],[291,44,198,12],[292,8,198,12],[293,8,198,12],[293,15,198,8,"play"],[293,19,198,12],[294,6,198,12],[295,4,198,12],[296,6,198,12,"key"],[296,9,198,12],[297,6,198,12,"value"],[297,11,198,12],[298,8,198,12],[298,12,198,12,"_stop"],[298,17,198,12],[298,24,198,12,"_asyncToGenerator"],[298,41,198,12],[298,42,198,12,"default"],[298,49,198,12],[298,51,228,2],[298,64,228,30],[299,10,229,4],[299,14,229,8],[300,12,230,6],[301,12,231,6],[301,16,231,10],[301,20,231,14],[301,21,231,15,"recording"],[301,30,231,24],[301,34,231,28],[301,38,231,32],[301,39,231,33,"isRecording"],[301,50,231,44],[301,52,231,46],[302,14,232,8],[302,20,232,14],[302,24,232,18],[302,25,232,19,"stopRecording"],[302,38,232,32],[302,39,232,33],[302,40,232,34],[303,12,233,6],[305,12,235,6],[306,12,236,6],[306,16,236,10],[306,20,236,14],[306,21,236,15,"sound"],[306,26,236,20],[306,28,236,22],[307,14,237,8],[307,20,237,14],[307,24,237,18],[307,25,237,19,"sound"],[307,30,237,24],[307,31,237,25,"stopAsync"],[307,40,237,34],[307,41,237,35],[307,42,237,36],[308,14,238,8],[308,20,238,14],[308,24,238,18],[308,25,238,19,"sound"],[308,30,238,24],[308,31,238,25,"unloadAsync"],[308,42,238,36],[308,43,238,37],[308,44,238,38],[309,14,239,8],[309,18,239,12],[309,19,239,13,"sound"],[309,24,239,18],[309,27,239,21],[309,31,239,25],[310,12,240,6],[311,10,241,4],[311,11,241,5],[311,12,241,6],[311,19,241,13,"error"],[311,24,241,18],[311,26,241,20],[312,12,242,6,"console"],[312,19,242,13],[312,20,242,14,"warn"],[312,24,242,18],[312,25,242,19],[312,48,242,42],[312,50,242,44,"error"],[312,55,242,49],[312,56,242,50],[313,10,243,4],[314,8,244,2],[314,9,244,3],[315,8,244,3],[315,17,228,8,"stop"],[315,21,228,12,"stop"],[315,22,228,12],[316,10,228,12],[316,17,228,12,"_stop"],[316,22,228,12],[316,23,228,12,"apply"],[316,28,228,12],[316,35,228,12,"arguments"],[316,44,228,12],[317,8,228,12],[318,8,228,12],[318,15,228,8,"stop"],[318,19,228,12],[319,6,228,12],[320,4,228,12],[321,6,228,12,"key"],[321,9,228,12],[322,6,228,12,"value"],[322,11,228,12],[323,8,228,12],[323,12,228,12,"_stopRecording"],[323,26,228,12],[323,33,228,12,"_asyncToGenerator"],[323,50,228,12],[323,51,228,12,"default"],[323,58,228,12],[323,60,246,2],[323,73,246,47],[324,10,247,4],[324,14,247,8],[324,18,247,12],[324,19,247,13,"recording"],[324,28,247,22],[324,32,247,26],[324,36,247,30],[324,37,247,31,"isRecording"],[324,48,247,42],[324,50,247,44],[325,12,248,6],[325,16,248,10],[326,14,249,8],[326,20,249,14],[326,24,249,18],[326,25,249,19,"recording"],[326,34,249,28],[326,35,249,29,"stopAndUnloadAsync"],[326,53,249,47],[326,54,249,48],[326,55,249,49],[327,14,250,8],[327,18,250,12],[327,19,250,13,"isRecording"],[327,30,250,24],[327,33,250,27],[327,38,250,32],[328,12,251,6],[328,13,251,7],[328,14,251,8],[328,21,251,15,"error"],[328,26,251,20],[328,28,251,22],[329,14,252,8,"console"],[329,21,252,15],[329,22,252,16,"warn"],[329,26,252,20],[329,27,252,21],[329,50,252,44],[329,52,252,46,"error"],[329,57,252,51],[329,58,252,52],[330,14,253,8],[330,18,253,12],[330,19,253,13,"isRecording"],[330,30,253,24],[330,33,253,27],[330,38,253,32],[331,12,254,6],[332,10,255,4],[333,8,256,2],[333,9,256,3],[334,8,256,3],[334,17,246,16,"stopRecording"],[334,30,246,29,"stopRecording"],[334,31,246,29],[335,10,246,29],[335,17,246,29,"_stopRecording"],[335,31,246,29],[335,32,246,29,"apply"],[335,37,246,29],[335,44,246,29,"arguments"],[335,53,246,29],[336,8,246,29],[337,8,246,29],[337,15,246,16,"stopRecording"],[337,28,246,29],[338,6,246,29],[338,10,258,2],[339,4,258,2],[340,6,258,2,"key"],[340,9,258,2],[341,6,258,2,"value"],[341,11,258,2],[342,8,258,2],[342,12,258,2,"_cleanup"],[342,20,258,2],[342,27,258,2,"_asyncToGenerator"],[342,44,258,2],[342,45,258,2,"default"],[342,52,258,2],[342,54,259,2],[342,67,259,33],[343,10,260,4],[343,16,260,10],[343,20,260,14],[343,21,260,15,"stop"],[343,25,260,19],[343,26,260,20],[343,27,260,21],[344,10,261,4],[344,14,261,8],[344,15,261,9,"recording"],[344,24,261,18],[344,27,261,21],[344,31,261,25],[345,8,262,2],[345,9,262,3],[346,8,262,3],[346,17,259,8,"cleanup"],[346,24,259,15,"cleanup"],[346,25,259,15],[347,10,259,15],[347,17,259,15,"_cleanup"],[347,25,259,15],[347,26,259,15,"apply"],[347,31,259,15],[347,38,259,15,"arguments"],[347,47,259,15],[348,8,259,15],[349,8,259,15],[349,15,259,8,"cleanup"],[349,22,259,15],[350,6,259,15],[351,4,259,15],[352,2,259,15],[353,0,259,15],[353,3]],"functionMap":{"names":["<global>","OpenAIVoiceAdapter","startConversation","recordAndTranscribe","Promise$argument_0","transcribeAudio","chat","tts","play","sound.setOnPlaybackStatusUpdate$argument_0","stop","stopRecording","cleanup"],"mappings":"AAA;OCU;ECQ;GDgB;EEE;wBCuB,oCD;GFe;EIE;GJsC;EKE;GLoC;EME;GNyC;EOE;2CCkB;ODK;GPK;ESE;GTgB;EUE;GVU;EWG;GXG"},"hasCjsExports":false},"type":"js/module"}]}