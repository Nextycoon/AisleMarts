{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getFx = getFx;\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  let memoryCache = {};\n  async function fetchRates(sourceBase) {\n    // Get backend URL from environment\n    const backendUrl = Constants.default.expoConfig?.extra?.EXPO_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n    const url = `${backendUrl}/api/currency/rates?base=${encodeURIComponent(sourceBase)}`;\n    console.log(`🌍 Currency-Infinity Engine: Fetching rates for ${sourceBase} from ${url}`);\n    try {\n      const res = await fetch(url, {\n        cache: 'no-store',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!res.ok) {\n        throw new Error(`FX fetch failed: ${res.status} ${res.statusText}`);\n      }\n      const data = await res.json();\n      console.log(`💱 Received rates for ${sourceBase}:`, Object.keys(data.rates || {}).length, 'currencies');\n      return data;\n    } catch (error) {\n      console.warn('🔄 FX API failed, using fallback rates:', error);\n      // Fallback to static rates if API fails\n      return getFallbackRates(sourceBase);\n    }\n  }\n  function getFallbackRates(base) {\n    // Static fallback rates for demo (updated June 2025)\n    const fallbackRates = {\n      'USD': 1.0,\n      // Base currency\n      'EUR': 0.85,\n      'GBP': 0.73,\n      'JPY': 110.0,\n      'CNY': 6.45,\n      'CAD': 1.25,\n      'AUD': 1.35,\n      'CHF': 0.92,\n      'SEK': 8.60,\n      'NOK': 8.50,\n      'DKK': 6.30,\n      'PLN': 3.90,\n      'CZK': 21.50,\n      'HUF': 290.0,\n      'RUB': 75.0,\n      'BRL': 5.20,\n      'MXN': 20.0,\n      'ARS': 98.0,\n      'COP': 3800.0,\n      'CLP': 720.0,\n      'PEN': 3.60,\n      'KRW': 1180.0,\n      'INR': 74.0,\n      'IDR': 14200.0,\n      'THB': 31.0,\n      'SGD': 1.35,\n      'MYR': 4.15,\n      'PHP': 50.0,\n      'VND': 23000.0,\n      'HKD': 7.80,\n      'TWD': 28.0,\n      'LKR': 180.0,\n      'BDT': 85.0,\n      'PKR': 160.0,\n      'AED': 3.67,\n      'SAR': 3.75,\n      'QAR': 3.64,\n      'KWD': 0.30,\n      'BHD': 0.38,\n      'ILS': 3.20,\n      'TRY': 8.50,\n      'EGP': 15.7,\n      'ZAR': 14.5,\n      'NGN': 410.0,\n      'KES': 108.0,\n      'MAD': 9.0\n    };\n\n    // Convert rates relative to base currency\n    const baseRate = fallbackRates[base] || 1;\n    const rates = Object.fromEntries(Object.entries(fallbackRates).map(([k, v]) => [k, v / baseRate]));\n    return {\n      base,\n      ts: Date.now(),\n      rates\n    };\n  }\n  async function getFx(base) {\n    // Serve cached if fresh (<5 min)\n    const now = Date.now();\n    if (memoryCache.quote && now - (memoryCache.quote.ts || 0) < 5 * 60 * 1000) {\n      if (memoryCache.quote.base === base) {\n        console.log(`⚡ Using cached rates for ${base}`);\n        return memoryCache.quote;\n      }\n    }\n    const q = await fetchRates(base);\n    memoryCache.quote = q;\n    return q;\n  }\n});","lineCount":115,"map":[[12,2,66,0,"exports"],[12,9,66,0],[12,10,66,0,"getFx"],[12,15,66,0],[12,18,66,0,"getFx"],[12,23,66,0],[13,2,79,1],[13,6,79,1,"_expoVirtualEnv"],[13,21,79,1],[13,24,79,1,"require"],[13,31,79,1],[13,32,79,1,"_dependencyMap"],[13,46,79,1],[14,2,1,0],[14,6,1,0,"_expoConstants"],[14,20,1,0],[14,23,1,0,"require"],[14,30,1,0],[14,31,1,0,"_dependencyMap"],[14,45,1,0],[15,2,1,0],[15,6,1,0,"Constants"],[15,15,1,0],[15,18,1,0,"_interopDefault"],[15,33,1,0],[15,34,1,0,"_expoConstants"],[15,48,1,0],[16,2,4,0],[16,6,4,4,"memoryCache"],[16,17,4,36],[16,20,4,39],[16,21,4,40],[16,22,4,41],[17,2,6,0],[17,17,6,15,"fetchRates"],[17,27,6,25,"fetchRates"],[17,28,6,26,"sourceBase"],[17,38,6,44],[17,40,6,64],[18,4,7,2],[19,4,8,2],[19,10,8,8,"backendUrl"],[19,20,8,18],[19,23,8,21,"Constants"],[19,32,8,30],[19,33,8,30,"default"],[19,40,8,30],[19,41,8,31,"expoConfig"],[19,51,8,41],[19,53,8,43,"extra"],[19,58,8,48],[19,60,8,50,"EXPO_BACKEND_URL"],[19,76,8,66],[19,80,8,66,"_expoVirtualEnv"],[19,95,8,66],[19,96,8,66,"env"],[19,99,8,66],[19,100,8,66,"EXPO_PUBLIC_BACKEND_URL"],[19,123,8,105],[19,127,8,109],[19,129,8,111],[20,4,9,2],[20,10,9,8,"url"],[20,13,9,11],[20,16,9,14],[20,19,9,17,"backendUrl"],[20,29,9,27],[20,57,9,55,"encodeURIComponent"],[20,75,9,73],[20,76,9,74,"sourceBase"],[20,86,9,84],[20,87,9,85],[20,89,9,87],[21,4,11,2,"console"],[21,11,11,9],[21,12,11,10,"log"],[21,15,11,13],[21,16,11,14],[21,67,11,65,"sourceBase"],[21,77,11,75],[21,86,11,84,"url"],[21,89,11,87],[21,91,11,89],[21,92,11,90],[22,4,13,2],[22,8,13,6],[23,6,14,4],[23,12,14,10,"res"],[23,15,14,13],[23,18,14,16],[23,24,14,22,"fetch"],[23,29,14,27],[23,30,14,28,"url"],[23,33,14,31],[23,35,14,33],[24,8,15,6,"cache"],[24,13,15,11],[24,15,15,13],[24,25,15,23],[25,8,16,6,"headers"],[25,15,16,13],[25,17,16,15],[26,10,17,8],[26,24,17,22],[26,26,17,24],[27,8,18,6],[28,6,19,4],[28,7,19,5],[28,8,19,6],[29,6,21,4],[29,10,21,8],[29,11,21,9,"res"],[29,14,21,12],[29,15,21,13,"ok"],[29,17,21,15],[29,19,21,17],[30,8,22,6],[30,14,22,12],[30,18,22,16,"Error"],[30,23,22,21],[30,24,22,22],[30,44,22,42,"res"],[30,47,22,45],[30,48,22,46,"status"],[30,54,22,52],[30,58,22,56,"res"],[30,61,22,59],[30,62,22,60,"statusText"],[30,72,22,70],[30,74,22,72],[30,75,22,73],[31,6,23,4],[32,6,25,4],[32,12,25,10,"data"],[32,16,25,14],[32,19,25,17],[32,25,25,23,"res"],[32,28,25,26],[32,29,25,27,"json"],[32,33,25,31],[32,34,25,32],[32,35,25,33],[33,6,26,4,"console"],[33,13,26,11],[33,14,26,12,"log"],[33,17,26,15],[33,18,26,16],[33,43,26,41,"sourceBase"],[33,53,26,51],[33,56,26,54],[33,58,26,56,"Object"],[33,64,26,62],[33,65,26,63,"keys"],[33,69,26,67],[33,70,26,68,"data"],[33,74,26,72],[33,75,26,73,"rates"],[33,80,26,78],[33,84,26,82],[33,85,26,83],[33,86,26,84],[33,87,26,85],[33,88,26,86,"length"],[33,94,26,92],[33,96,26,94],[33,108,26,106],[33,109,26,107],[34,6,27,4],[34,13,27,11,"data"],[34,17,27,15],[35,4,28,2],[35,5,28,3],[35,6,28,4],[35,13,28,11,"error"],[35,18,28,16],[35,20,28,18],[36,6,29,4,"console"],[36,13,29,11],[36,14,29,12,"warn"],[36,18,29,16],[36,19,29,17],[36,60,29,58],[36,62,29,60,"error"],[36,67,29,65],[36,68,29,66],[37,6,30,4],[38,6,31,4],[38,13,31,11,"getFallbackRates"],[38,29,31,27],[38,30,31,28,"sourceBase"],[38,40,31,38],[38,41,31,39],[39,4,32,2],[40,2,33,0],[41,2,35,0],[41,11,35,9,"getFallbackRates"],[41,27,35,25,"getFallbackRates"],[41,28,35,26,"base"],[41,32,35,38],[41,34,35,49],[42,4,36,2],[43,4,37,2],[43,10,37,8,"fallbackRates"],[43,23,37,45],[43,26,37,48],[44,6,38,4],[44,11,38,9],[44,13,38,11],[44,16,38,14],[45,6,38,21],[46,6,39,4],[46,11,39,9],[46,13,39,11],[46,17,39,15],[47,6,39,21],[47,11,39,26],[47,13,39,28],[47,17,39,32],[48,6,39,38],[48,11,39,43],[48,13,39,45],[48,18,39,50],[49,6,39,55],[49,11,39,60],[49,13,39,62],[49,17,39,66],[50,6,40,4],[50,11,40,9],[50,13,40,11],[50,17,40,15],[51,6,40,21],[51,11,40,26],[51,13,40,28],[51,17,40,32],[52,6,40,38],[52,11,40,43],[52,13,40,45],[52,17,40,49],[53,6,40,55],[53,11,40,60],[53,13,40,62],[53,17,40,66],[54,6,41,4],[54,11,41,9],[54,13,41,11],[54,17,41,15],[55,6,41,21],[55,11,41,26],[55,13,41,28],[55,17,41,32],[56,6,41,38],[56,11,41,43],[56,13,41,45],[56,17,41,49],[57,6,41,55],[57,11,41,60],[57,13,41,62],[57,18,41,67],[58,6,42,4],[58,11,42,9],[58,13,42,11],[58,18,42,16],[59,6,42,21],[59,11,42,26],[59,13,42,28],[59,17,42,32],[60,6,42,38],[60,11,42,43],[60,13,42,45],[60,17,42,49],[61,6,42,55],[61,11,42,60],[61,13,42,62],[61,17,42,66],[62,6,43,4],[62,11,43,9],[62,13,43,11],[62,17,43,15],[63,6,43,21],[63,11,43,26],[63,13,43,28],[63,19,43,34],[64,6,43,38],[64,11,43,43],[64,13,43,45],[64,18,43,50],[65,6,43,55],[65,11,43,60],[65,13,43,62],[65,17,43,66],[66,6,44,4],[66,11,44,9],[66,13,44,11],[66,19,44,17],[67,6,44,21],[67,11,44,26],[67,13,44,28],[67,17,44,32],[68,6,44,38],[68,11,44,43],[68,13,44,45],[68,20,44,52],[69,6,44,55],[69,11,44,60],[69,13,44,62],[69,17,44,66],[70,6,45,4],[70,11,45,9],[70,13,45,11],[70,17,45,15],[71,6,45,21],[71,11,45,26],[71,13,45,28],[71,17,45,32],[72,6,45,38],[72,11,45,43],[72,13,45,45],[72,17,45,49],[73,6,45,55],[73,11,45,60],[73,13,45,62],[73,20,45,69],[74,6,46,4],[74,11,46,9],[74,13,46,11],[74,17,46,15],[75,6,46,21],[75,11,46,26],[75,13,46,28],[75,17,46,32],[76,6,46,38],[76,11,46,43],[76,13,46,45],[76,18,46,50],[77,6,46,55],[77,11,46,60],[77,13,46,62],[77,17,46,66],[78,6,47,4],[78,11,47,9],[78,13,47,11],[78,18,47,16],[79,6,47,21],[79,11,47,26],[79,13,47,28],[79,17,47,32],[80,6,47,38],[80,11,47,43],[80,13,47,45],[80,17,47,49],[81,6,47,55],[81,11,47,60],[81,13,47,62],[81,17,47,66],[82,6,48,4],[82,11,48,9],[82,13,48,11],[82,17,48,15],[83,6,48,21],[83,11,48,26],[83,13,48,28],[83,17,48,32],[84,6,48,38],[84,11,48,43],[84,13,48,45],[84,17,48,49],[85,6,48,55],[85,11,48,60],[85,13,48,62],[85,17,48,66],[86,6,49,4],[86,11,49,9],[86,13,49,11],[86,17,49,15],[87,6,49,21],[87,11,49,26],[87,13,49,28],[87,17,49,32],[88,6,49,38],[88,11,49,43],[88,13,49,45],[88,18,49,50],[89,6,49,55],[89,11,49,60],[89,13,49,62],[89,18,49,67],[90,6,50,4],[90,11,50,9],[90,13,50,11],[91,4,51,2],[91,5,51,3],[93,4,53,2],[94,4,54,2],[94,10,54,8,"baseRate"],[94,18,54,16],[94,21,54,19,"fallbackRates"],[94,34,54,32],[94,35,54,33,"base"],[94,39,54,37],[94,40,54,38],[94,44,54,42],[94,45,54,43],[95,4,55,2],[95,10,55,8,"rates"],[95,15,55,13],[95,18,55,16,"Object"],[95,24,55,22],[95,25,55,23,"fromEntries"],[95,36,55,34],[95,37,56,4,"Object"],[95,43,56,10],[95,44,56,11,"entries"],[95,51,56,18],[95,52,56,19,"fallbackRates"],[95,65,56,32],[95,66,56,33],[95,67,56,34,"map"],[95,70,56,37],[95,71,56,38],[95,72,56,39],[95,73,56,40,"k"],[95,74,56,41],[95,76,56,43,"v"],[95,77,56,44],[95,78,56,45],[95,83,56,50],[95,84,56,51,"k"],[95,85,56,52],[95,87,56,54,"v"],[95,88,56,55],[95,91,56,58,"baseRate"],[95,99,56,66],[95,100,56,67],[95,101,57,2],[95,102,57,3],[96,4,59,2],[96,11,59,9],[97,6,60,4,"base"],[97,10,60,8],[98,6,61,4,"ts"],[98,8,61,6],[98,10,61,8,"Date"],[98,14,61,12],[98,15,61,13,"now"],[98,18,61,16],[98,19,61,17],[98,20,61,18],[99,6,62,4,"rates"],[100,4,63,2],[100,5,63,3],[101,2,64,0],[102,2,66,7],[102,17,66,22,"getFx"],[102,22,66,27,"getFx"],[102,23,66,28,"base"],[102,27,66,40],[102,29,66,60],[103,4,67,2],[104,4,68,2],[104,10,68,8,"now"],[104,13,68,11],[104,16,68,14,"Date"],[104,20,68,18],[104,21,68,19,"now"],[104,24,68,22],[104,25,68,23],[104,26,68,24],[105,4,69,2],[105,8,69,6,"memoryCache"],[105,19,69,17],[105,20,69,18,"quote"],[105,25,69,23],[105,29,69,27,"now"],[105,32,69,30],[105,36,69,34,"memoryCache"],[105,47,69,45],[105,48,69,46,"quote"],[105,53,69,51],[105,54,69,52,"ts"],[105,56,69,54],[105,60,69,58],[105,61,69,59],[105,62,69,60],[105,65,69,63],[105,66,69,64],[105,69,69,67],[105,71,69,69],[105,74,69,72],[105,78,69,76],[105,80,69,78],[106,6,70,4],[106,10,70,8,"memoryCache"],[106,21,70,19],[106,22,70,20,"quote"],[106,27,70,25],[106,28,70,26,"base"],[106,32,70,30],[106,37,70,35,"base"],[106,41,70,39],[106,43,70,41],[107,8,71,6,"console"],[107,15,71,13],[107,16,71,14,"log"],[107,19,71,17],[107,20,71,18],[107,48,71,46,"base"],[107,52,71,50],[107,54,71,52],[107,55,71,53],[108,8,72,6],[108,15,72,13,"memoryCache"],[108,26,72,24],[108,27,72,25,"quote"],[108,32,72,30],[109,6,73,4],[110,4,74,2],[111,4,76,2],[111,10,76,8,"q"],[111,11,76,9],[111,14,76,12],[111,20,76,18,"fetchRates"],[111,30,76,28],[111,31,76,29,"base"],[111,35,76,33],[111,36,76,34],[112,4,77,2,"memoryCache"],[112,15,77,13],[112,16,77,14,"quote"],[112,21,77,19],[112,24,77,22,"q"],[112,25,77,23],[113,4,78,2],[113,11,78,9,"q"],[113,12,78,10],[114,2,79,0],[115,0,79,1],[115,3]],"functionMap":{"names":["<global>","fetchRates","getFallbackRates","Object.entries.map$argument_0","getFx"],"mappings":"AAA;ACK;CD2B;AEE;sCCqB,6BD;CFQ;OIE"},"hasCjsExports":false},"type":"js/module"}]}