{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"html-parse-stringify","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":40,"index":129}}],"key":"Dz5mG5jCySHyZi3eazCTCPjnQDg=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":64,"index":194}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}},{"name":"./defaults.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":195},"end":{"line":4,"column":44,"index":239}}],"key":"XCWKIxVkGmzpUvwhJx9c42EufEI=","exportNames":["*"],"imports":1}},{"name":"./i18nInstance.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":240},"end":{"line":5,"column":44,"index":284}}],"key":"2DjoKlYcMulm3L6r09aRNQJwnCE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"nodesToString\", {\n    enumerable: true,\n    get: function () {\n      return nodesToString;\n    }\n  });\n  exports.Trans = Trans;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _htmlParseStringify = require(_dependencyMap[1], \"html-parse-stringify\");\n  var HTML = _interopDefault(_htmlParseStringify);\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  var _defaultsJs = require(_dependencyMap[3], \"./defaults.js\");\n  var _i18nInstanceJs = require(_dependencyMap[4], \"./i18nInstance.js\");\n  const hasChildren = (node, checkLength) => {\n    if (!node) return false;\n    const base = node.props?.children ?? node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  };\n  const getChildren = node => {\n    if (!node) return [];\n    const children = node.props?.children ?? node.children;\n    return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n  };\n  const hasValidReactChildren = children => Array.isArray(children) && children.every(_react.isValidElement);\n  const getAsArray = data => Array.isArray(data) ? data : [data];\n  const mergeProps = (source, target) => {\n    const newTarget = {\n      ...target\n    };\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  };\n  const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n    if (!children) return '';\n    let stringNode = '';\n    const childrenArray = getAsArray(children);\n    const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n    childrenArray.forEach((child, childIndex) => {\n      if ((0, _utilsJs.isString)(child)) {\n        stringNode += `${child}`;\n        return;\n      }\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) {\n        const {\n          props,\n          type\n        } = child;\n        const childPropsCount = Object.keys(props).length;\n        const shouldKeepChild = keepArray.indexOf(type) > -1;\n        const childChildren = props.children;\n        if (!childChildren && shouldKeepChild && !childPropsCount) {\n          stringNode += `<${type}/>`;\n          return;\n        }\n        if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n          stringNode += `<${childIndex}></${childIndex}>`;\n          return;\n        }\n        if (shouldKeepChild && childPropsCount === 1 && (0, _utilsJs.isString)(childChildren)) {\n          stringNode += `<${type}>${childChildren}</${type}>`;\n          return;\n        }\n        const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n        return;\n      }\n      if (child === null) {\n        (0, _utilsJs.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n          i18nKey\n        });\n        return;\n      }\n      if ((0, _utilsJs.isObject)(child)) {\n        const {\n          format,\n          ...clone\n        } = child;\n        const keys = Object.keys(clone);\n        if (keys.length === 1) {\n          const value = format ? `${keys[0]}, ${format}` : keys[0];\n          stringNode += `{{${value}}}`;\n          return;\n        }\n        (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n          i18nKey,\n          child\n        });\n        return;\n      }\n      (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n        i18nKey,\n        child\n      });\n    });\n    return stringNode;\n  };\n  const renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n    if (targetString === '') return [];\n    const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n    if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n    const data = knownComponentsMap ?? {};\n    const getData = childs => {\n      const childrenArray = getAsArray(childs);\n      childrenArray.forEach(child => {\n        if ((0, _utilsJs.isString)(child)) return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _utilsJs.isObject)(child) && ! /*#__PURE__*/(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    };\n    getData(children);\n    const ast = HTML.default.parse(`<0>${targetString}</0>`);\n    const opts = {\n      ...data,\n      ...combinedTOpts\n    };\n    const renderInner = (child, node, rootReactNode) => {\n      const childs = getChildren(child);\n      const mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n    };\n    const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n      if (child.dummy) {\n        child.children = inner;\n        mem.push(/*#__PURE__*/(0, _react.cloneElement)(child, {\n          key: i\n        }, isVoid ? undefined : inner));\n      } else {\n        mem.push(..._react.Children.map([child], c => {\n          const props = {\n            ...c.props\n          };\n          delete props.i18nIsDynamicList;\n          return /*#__PURE__*/(0, _react.createElement)(c.type, {\n            ...props,\n            key: i,\n            ref: c.props.ref ?? c.ref\n          }, isVoid ? null : inner);\n        }));\n      }\n    };\n    const mapAST = (reactNode, astNode, rootReactNode) => {\n      const reactNodes = getAsArray(reactNode);\n      const astNodes = getAsArray(astNode);\n      return astNodes.reduce((mem, node, i) => {\n        const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          let tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n          if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          const isElement = /*#__PURE__*/(0, _react.isValidElement)(child);\n          const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _utilsJs.isObject)(child) && child.dummy && !isElement;\n          const isKnownComponent = (0, _utilsJs.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n          if ((0, _utilsJs.isString)(child)) {\n            const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              const inner = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }));\n              } else {\n                const inner = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }, inner));\n              }\n            } else if (node.voidElement) {\n              mem.push(`<${node.name} />`);\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(`<${node.name}>${inner}</${node.name}>`);\n            }\n          } else if ((0, _utilsJs.isObject)(child) && !isElement) {\n            const content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else {\n            pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n          }\n        } else if (node.type === 'text') {\n          const wrapTextNodes = i18nOptions.transWrapTextNodes;\n          const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push(/*#__PURE__*/(0, _react.createElement)(wrapTextNodes, {\n              key: `${node.name}-${i}`\n            }, content));\n          } else {\n            mem.push(content);\n          }\n        }\n        return mem;\n      }, []);\n    };\n    const result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  };\n  const fixComponentProps = (component, index, translation) => {\n    const componentKey = component.key || index;\n    const comp = /*#__PURE__*/(0, _react.cloneElement)(component, {\n      key: componentKey\n    });\n    if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n      return comp;\n    }\n    function Componentized() {\n      return /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, comp);\n    }\n    return /*#__PURE__*/(0, _react.createElement)(Componentized, {\n      key: componentKey\n    });\n  };\n  const generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n  const generateObjectComponents = (components, translation) => {\n    const componentMap = {};\n    Object.keys(components).forEach(c => {\n      Object.assign(componentMap, {\n        [c]: fixComponentProps(components[c], c, translation)\n      });\n    });\n    return componentMap;\n  };\n  const generateComponents = (components, translation, i18n, i18nKey) => {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      return generateArrayComponents(components, translation);\n    }\n    if ((0, _utilsJs.isObject)(components)) {\n      return generateObjectComponents(components, translation);\n    }\n    (0, _utilsJs.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n      i18nKey\n    });\n    return null;\n  };\n  const isComponentsMap = object => {\n    if (!(0, _utilsJs.isObject)(object)) return false;\n    if (Array.isArray(object)) return false;\n    return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n  };\n  function Trans({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  }) {\n    const i18n = i18nFromProps || (0, _i18nInstanceJs.getI18n)();\n    if (!i18n) {\n      (0, _utilsJs.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n        i18nKey\n      });\n      return children;\n    }\n    const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n    const reactI18nextOptions = {\n      ...(0, _defaultsJs.getDefaults)(),\n      ...i18n.options?.react\n    };\n    let namespaces = ns || t.ns || i18n.options?.defaultNS;\n    namespaces = (0, _utilsJs.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n    const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n    const {\n      hashTransKey\n    } = reactI18nextOptions;\n    const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n    if (i18n.options?.interpolation?.defaultVariables) {\n      values = values && Object.keys(values).length > 0 ? {\n        ...values,\n        ...i18n.options.interpolation.defaultVariables\n      } : {\n        ...i18n.options.interpolation.defaultVariables\n      };\n    }\n    const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n      interpolation: {\n        ...tOptions.interpolation,\n        prefix: '#$?',\n        suffix: '?$#'\n      }\n    };\n    const combinedTOpts = {\n      ...tOptions,\n      context: context || tOptions.context,\n      count,\n      ...values,\n      ...interpolationOverride,\n      defaultValue,\n      ns: namespaces\n    };\n    const translation = key ? t(key, combinedTOpts) : defaultValue;\n    const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n    let indexedChildren = generatedComponents || children;\n    let componentsMap = null;\n    if (isComponentsMap(generatedComponents)) {\n      componentsMap = generatedComponents;\n      indexedChildren = children;\n    }\n    const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n    return useAsParent ? /*#__PURE__*/(0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":341,"map":[[12,2,26,0,"Object"],[12,8,26,0],[12,9,26,0,"defineProperty"],[12,23,26,0],[12,24,26,0,"exports"],[12,31,26,0],[13,4,26,0,"enumerable"],[13,14,26,0],[14,4,26,0,"get"],[14,7,26,0],[14,18,26,0,"get"],[14,19,26,0],[15,6,26,0],[15,13,26,0,"nodesToString"],[15,26,26,0],[16,4,26,0],[17,2,26,0],[18,2,250,0,"exports"],[18,9,250,0],[18,10,250,0,"Trans"],[18,15,250,0],[18,18,250,0,"Trans"],[18,23,250,0],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,2,0],[20,6,2,0,"_htmlParseStringify"],[20,25,2,0],[20,28,2,0,"require"],[20,35,2,0],[20,36,2,0,"_dependencyMap"],[20,50,2,0],[21,2,2,0],[21,6,2,0,"HTML"],[21,10,2,0],[21,13,2,0,"_interopDefault"],[21,28,2,0],[21,29,2,0,"_htmlParseStringify"],[21,48,2,0],[22,2,3,0],[22,6,3,0,"_utilsJs"],[22,14,3,0],[22,17,3,0,"require"],[22,24,3,0],[22,25,3,0,"_dependencyMap"],[22,39,3,0],[23,2,4,0],[23,6,4,0,"_defaultsJs"],[23,17,4,0],[23,20,4,0,"require"],[23,27,4,0],[23,28,4,0,"_dependencyMap"],[23,42,4,0],[24,2,5,0],[24,6,5,0,"_i18nInstanceJs"],[24,21,5,0],[24,24,5,0,"require"],[24,31,5,0],[24,32,5,0,"_dependencyMap"],[24,46,5,0],[25,2,6,0],[25,8,6,6,"hasChildren"],[25,19,6,17],[25,22,6,20,"hasChildren"],[25,23,6,21,"node"],[25,27,6,25],[25,29,6,27,"checkLength"],[25,40,6,38],[25,45,6,43],[26,4,7,2],[26,8,7,6],[26,9,7,7,"node"],[26,13,7,11],[26,15,7,13],[26,22,7,20],[26,27,7,25],[27,4,8,2],[27,10,8,8,"base"],[27,14,8,12],[27,17,8,15,"node"],[27,21,8,19],[27,22,8,20,"props"],[27,27,8,25],[27,29,8,27,"children"],[27,37,8,35],[27,41,8,39,"node"],[27,45,8,43],[27,46,8,44,"children"],[27,54,8,52],[28,4,9,2],[28,8,9,6,"checkLength"],[28,19,9,17],[28,21,9,19],[28,28,9,26,"base"],[28,32,9,30],[28,33,9,31,"length"],[28,39,9,37],[28,42,9,40],[28,43,9,41],[29,4,10,2],[29,11,10,9],[29,12,10,10],[29,13,10,11,"base"],[29,17,10,15],[30,2,11,0],[30,3,11,1],[31,2,12,0],[31,8,12,6,"getChildren"],[31,19,12,17],[31,22,12,20,"node"],[31,26,12,24],[31,30,12,28],[32,4,13,2],[32,8,13,6],[32,9,13,7,"node"],[32,13,13,11],[32,15,13,13],[32,22,13,20],[32,24,13,22],[33,4,14,2],[33,10,14,8,"children"],[33,18,14,16],[33,21,14,19,"node"],[33,25,14,23],[33,26,14,24,"props"],[33,31,14,29],[33,33,14,31,"children"],[33,41,14,39],[33,45,14,43,"node"],[33,49,14,47],[33,50,14,48,"children"],[33,58,14,56],[34,4,15,2],[34,11,15,9,"node"],[34,15,15,13],[34,16,15,14,"props"],[34,21,15,19],[34,23,15,21,"i18nIsDynamicList"],[34,40,15,38],[34,43,15,41,"getAsArray"],[34,53,15,51],[34,54,15,52,"children"],[34,62,15,60],[34,63,15,61],[34,66,15,64,"children"],[34,74,15,72],[35,2,16,0],[35,3,16,1],[36,2,17,0],[36,8,17,6,"hasValidReactChildren"],[36,29,17,27],[36,32,17,30,"children"],[36,40,17,38],[36,44,17,42,"Array"],[36,49,17,47],[36,50,17,48,"isArray"],[36,57,17,55],[36,58,17,56,"children"],[36,66,17,64],[36,67,17,65],[36,71,17,69,"children"],[36,79,17,77],[36,80,17,78,"every"],[36,85,17,83],[36,86,17,84,"isValidElement"],[36,92,17,98],[36,93,17,98,"isValidElement"],[36,107,17,98],[36,108,17,99],[37,2,18,0],[37,8,18,6,"getAsArray"],[37,18,18,16],[37,21,18,19,"data"],[37,25,18,23],[37,29,18,27,"Array"],[37,34,18,32],[37,35,18,33,"isArray"],[37,42,18,40],[37,43,18,41,"data"],[37,47,18,45],[37,48,18,46],[37,51,18,49,"data"],[37,55,18,53],[37,58,18,56],[37,59,18,57,"data"],[37,63,18,61],[37,64,18,62],[38,2,19,0],[38,8,19,6,"mergeProps"],[38,18,19,16],[38,21,19,19,"mergeProps"],[38,22,19,20,"source"],[38,28,19,26],[38,30,19,28,"target"],[38,36,19,34],[38,41,19,39],[39,4,20,2],[39,10,20,8,"newTarget"],[39,19,20,17],[39,22,20,20],[40,6,21,4],[40,9,21,7,"target"],[41,4,22,2],[41,5,22,3],[42,4,23,2,"newTarget"],[42,13,23,11],[42,14,23,12,"props"],[42,19,23,17],[42,22,23,20,"Object"],[42,28,23,26],[42,29,23,27,"assign"],[42,35,23,33],[42,36,23,34,"source"],[42,42,23,40],[42,43,23,41,"props"],[42,48,23,46],[42,50,23,48,"target"],[42,56,23,54],[42,57,23,55,"props"],[42,62,23,60],[42,63,23,61],[43,4,24,2],[43,11,24,9,"newTarget"],[43,20,24,18],[44,2,25,0],[44,3,25,1],[45,2,26,7],[45,8,26,13,"nodesToString"],[45,21,26,26],[45,24,26,29,"nodesToString"],[45,25,26,30,"children"],[45,33,26,38],[45,35,26,40,"i18nOptions"],[45,46,26,51],[45,48,26,53,"i18n"],[45,52,26,57],[45,54,26,59,"i18nKey"],[45,61,26,66],[45,66,26,71],[46,4,27,2],[46,8,27,6],[46,9,27,7,"children"],[46,17,27,15],[46,19,27,17],[46,26,27,24],[46,28,27,26],[47,4,28,2],[47,8,28,6,"stringNode"],[47,18,28,16],[47,21,28,19],[47,23,28,21],[48,4,29,2],[48,10,29,8,"childrenArray"],[48,23,29,21],[48,26,29,24,"getAsArray"],[48,36,29,34],[48,37,29,35,"children"],[48,45,29,43],[48,46,29,44],[49,4,30,2],[49,10,30,8,"keepArray"],[49,19,30,17],[49,22,30,20,"i18nOptions"],[49,33,30,31],[49,35,30,33,"transSupportBasicHtmlNodes"],[49,61,30,59],[49,64,30,62,"i18nOptions"],[49,75,30,73],[49,76,30,74,"transKeepBasicHtmlNodesFor"],[49,102,30,100],[49,106,30,104],[49,108,30,106],[49,111,30,109],[49,113,30,111],[50,4,31,2,"childrenArray"],[50,17,31,15],[50,18,31,16,"forEach"],[50,25,31,23],[50,26,31,24],[50,27,31,25,"child"],[50,32,31,30],[50,34,31,32,"childIndex"],[50,44,31,42],[50,49,31,47],[51,6,32,4],[51,10,32,8],[51,14,32,8,"isString"],[51,22,32,16],[51,23,32,16,"isString"],[51,31,32,16],[51,33,32,17,"child"],[51,38,32,22],[51,39,32,23],[51,41,32,25],[52,8,33,6,"stringNode"],[52,18,33,16],[52,22,33,20],[52,25,33,23,"child"],[52,30,33,28],[52,32,33,30],[53,8,34,6],[54,6,35,4],[55,6,36,4],[55,23,36,8],[55,27,36,8,"isValidElement"],[55,33,36,22],[55,34,36,22,"isValidElement"],[55,48,36,22],[55,50,36,23,"child"],[55,55,36,28],[55,56,36,29],[55,58,36,31],[56,8,37,6],[56,14,37,12],[57,10,38,8,"props"],[57,15,38,13],[58,10,39,8,"type"],[59,8,40,6],[59,9,40,7],[59,12,40,10,"child"],[59,17,40,15],[60,8,41,6],[60,14,41,12,"childPropsCount"],[60,29,41,27],[60,32,41,30,"Object"],[60,38,41,36],[60,39,41,37,"keys"],[60,43,41,41],[60,44,41,42,"props"],[60,49,41,47],[60,50,41,48],[60,51,41,49,"length"],[60,57,41,55],[61,8,42,6],[61,14,42,12,"shouldKeepChild"],[61,29,42,27],[61,32,42,30,"keepArray"],[61,41,42,39],[61,42,42,40,"indexOf"],[61,49,42,47],[61,50,42,48,"type"],[61,54,42,52],[61,55,42,53],[61,58,42,56],[61,59,42,57],[61,60,42,58],[62,8,43,6],[62,14,43,12,"childChildren"],[62,27,43,25],[62,30,43,28,"props"],[62,35,43,33],[62,36,43,34,"children"],[62,44,43,42],[63,8,44,6],[63,12,44,10],[63,13,44,11,"childChildren"],[63,26,44,24],[63,30,44,28,"shouldKeepChild"],[63,45,44,43],[63,49,44,47],[63,50,44,48,"childPropsCount"],[63,65,44,63],[63,67,44,65],[64,10,45,8,"stringNode"],[64,20,45,18],[64,24,45,22],[64,28,45,26,"type"],[64,32,45,30],[64,36,45,34],[65,10,46,8],[66,8,47,6],[67,8,48,6],[67,12,48,10],[67,13,48,11,"childChildren"],[67,26,48,24],[67,31,48,29],[67,32,48,30,"shouldKeepChild"],[67,47,48,45],[67,51,48,49,"childPropsCount"],[67,66,48,64],[67,67,48,65],[67,71,48,69,"props"],[67,76,48,74],[67,77,48,75,"i18nIsDynamicList"],[67,94,48,92],[67,96,48,94],[68,10,49,8,"stringNode"],[68,20,49,18],[68,24,49,22],[68,28,49,26,"childIndex"],[68,38,49,36],[68,44,49,42,"childIndex"],[68,54,49,52],[68,57,49,55],[69,10,50,8],[70,8,51,6],[71,8,52,6],[71,12,52,10,"shouldKeepChild"],[71,27,52,25],[71,31,52,29,"childPropsCount"],[71,46,52,44],[71,51,52,49],[71,52,52,50],[71,56,52,54],[71,60,52,54,"isString"],[71,68,52,62],[71,69,52,62,"isString"],[71,77,52,62],[71,79,52,63,"childChildren"],[71,92,52,76],[71,93,52,77],[71,95,52,79],[72,10,53,8,"stringNode"],[72,20,53,18],[72,24,53,22],[72,28,53,26,"type"],[72,32,53,30],[72,36,53,34,"childChildren"],[72,49,53,47],[72,54,53,52,"type"],[72,58,53,56],[72,61,53,59],[73,10,54,8],[74,8,55,6],[75,8,56,6],[75,14,56,12,"content"],[75,21,56,19],[75,24,56,22,"nodesToString"],[75,37,56,35],[75,38,56,36,"childChildren"],[75,51,56,49],[75,53,56,51,"i18nOptions"],[75,64,56,62],[75,66,56,64,"i18n"],[75,70,56,68],[75,72,56,70,"i18nKey"],[75,79,56,77],[75,80,56,78],[76,8,57,6,"stringNode"],[76,18,57,16],[76,22,57,20],[76,26,57,24,"childIndex"],[76,36,57,34],[76,40,57,38,"content"],[76,47,57,45],[76,52,57,50,"childIndex"],[76,62,57,60],[76,65,57,63],[77,8,58,6],[78,6,59,4],[79,6,60,4],[79,10,60,8,"child"],[79,15,60,13],[79,20,60,18],[79,24,60,22],[79,26,60,24],[80,8,61,6],[80,12,61,6,"warn"],[80,20,61,10],[80,21,61,10,"warn"],[80,25,61,10],[80,27,61,11,"i18n"],[80,31,61,15],[80,33,61,17],[80,51,61,35],[80,53,61,37],[80,86,61,70],[80,88,61,72],[81,10,62,8,"i18nKey"],[82,8,63,6],[82,9,63,7],[82,10,63,8],[83,8,64,6],[84,6,65,4],[85,6,66,4],[85,10,66,8],[85,14,66,8,"isObject"],[85,22,66,16],[85,23,66,16,"isObject"],[85,31,66,16],[85,33,66,17,"child"],[85,38,66,22],[85,39,66,23],[85,41,66,25],[86,8,67,6],[86,14,67,12],[87,10,68,8,"format"],[87,16,68,14],[88,10,69,8],[88,13,69,11,"clone"],[89,8,70,6],[89,9,70,7],[89,12,70,10,"child"],[89,17,70,15],[90,8,71,6],[90,14,71,12,"keys"],[90,18,71,16],[90,21,71,19,"Object"],[90,27,71,25],[90,28,71,26,"keys"],[90,32,71,30],[90,33,71,31,"clone"],[90,38,71,36],[90,39,71,37],[91,8,72,6],[91,12,72,10,"keys"],[91,16,72,14],[91,17,72,15,"length"],[91,23,72,21],[91,28,72,26],[91,29,72,27],[91,31,72,29],[92,10,73,8],[92,16,73,14,"value"],[92,21,73,19],[92,24,73,22,"format"],[92,30,73,28],[92,33,73,31],[92,36,73,34,"keys"],[92,40,73,38],[92,41,73,39],[92,42,73,40],[92,43,73,41],[92,48,73,46,"format"],[92,54,73,52],[92,56,73,54],[92,59,73,57,"keys"],[92,63,73,61],[92,64,73,62],[92,65,73,63],[92,66,73,64],[93,10,74,8,"stringNode"],[93,20,74,18],[93,24,74,22],[93,29,74,27,"value"],[93,34,74,32],[93,38,74,36],[94,10,75,8],[95,8,76,6],[96,8,77,6],[96,12,77,6,"warn"],[96,20,77,10],[96,21,77,10,"warn"],[96,25,77,10],[96,27,77,11,"i18n"],[96,31,77,15],[96,33,77,17],[96,52,77,36],[96,54,77,38],[96,142,77,126],[96,144,77,128],[97,10,78,8,"i18nKey"],[97,17,78,15],[98,10,79,8,"child"],[99,8,80,6],[99,9,80,7],[99,10,80,8],[100,8,81,6],[101,6,82,4],[102,6,83,4],[102,10,83,4,"warn"],[102,18,83,8],[102,19,83,8,"warn"],[102,23,83,8],[102,25,83,9,"i18n"],[102,29,83,13],[102,31,83,15],[102,50,83,34],[102,52,83,36],[102,156,83,140],[102,158,83,142],[103,8,84,6,"i18nKey"],[103,15,84,13],[104,8,85,6,"child"],[105,6,86,4],[105,7,86,5],[105,8,86,6],[106,4,87,2],[106,5,87,3],[106,6,87,4],[107,4,88,2],[107,11,88,9,"stringNode"],[107,21,88,19],[108,2,89,0],[108,3,89,1],[109,2,90,0],[109,8,90,6,"renderNodes"],[109,19,90,17],[109,22,90,20,"renderNodes"],[109,23,90,21,"children"],[109,31,90,29],[109,33,90,31,"knownComponentsMap"],[109,51,90,49],[109,53,90,51,"targetString"],[109,65,90,63],[109,67,90,65,"i18n"],[109,71,90,69],[109,73,90,71,"i18nOptions"],[109,84,90,82],[109,86,90,84,"combinedTOpts"],[109,99,90,97],[109,101,90,99,"shouldUnescape"],[109,115,90,113],[109,120,90,118],[110,4,91,2],[110,8,91,6,"targetString"],[110,20,91,18],[110,25,91,23],[110,27,91,25],[110,29,91,27],[110,36,91,34],[110,38,91,36],[111,4,92,2],[111,10,92,8,"keepArray"],[111,19,92,17],[111,22,92,20,"i18nOptions"],[111,33,92,31],[111,34,92,32,"transKeepBasicHtmlNodesFor"],[111,60,92,58],[111,64,92,62],[111,66,92,64],[112,4,93,2],[112,10,93,8,"emptyChildrenButNeedsHandling"],[112,39,93,37],[112,42,93,40,"targetString"],[112,54,93,52],[112,58,93,56],[112,62,93,60,"RegExp"],[112,68,93,66],[112,69,93,67,"keepArray"],[112,78,93,76],[112,79,93,77,"map"],[112,82,93,80],[112,83,93,81,"keep"],[112,87,93,85],[112,91,93,89],[112,95,93,93,"keep"],[112,99,93,97],[112,101,93,99],[112,102,93,100],[112,103,93,101,"join"],[112,107,93,105],[112,108,93,106],[112,111,93,109],[112,112,93,110],[112,113,93,111],[112,114,93,112,"test"],[112,118,93,116],[112,119,93,117,"targetString"],[112,131,93,129],[112,132,93,130],[113,4,94,2],[113,8,94,6],[113,9,94,7,"children"],[113,17,94,15],[113,21,94,19],[113,22,94,20,"knownComponentsMap"],[113,40,94,38],[113,44,94,42],[113,45,94,43,"emptyChildrenButNeedsHandling"],[113,74,94,72],[113,78,94,76],[113,79,94,77,"shouldUnescape"],[113,93,94,91],[113,95,94,93],[113,102,94,100],[113,103,94,101,"targetString"],[113,115,94,113],[113,116,94,114],[114,4,95,2],[114,10,95,8,"data"],[114,14,95,12],[114,17,95,15,"knownComponentsMap"],[114,35,95,33],[114,39,95,37],[114,40,95,38],[114,41,95,39],[115,4,96,2],[115,10,96,8,"getData"],[115,17,96,15],[115,20,96,18,"childs"],[115,26,96,24],[115,30,96,28],[116,6,97,4],[116,12,97,10,"childrenArray"],[116,25,97,23],[116,28,97,26,"getAsArray"],[116,38,97,36],[116,39,97,37,"childs"],[116,45,97,43],[116,46,97,44],[117,6,98,4,"childrenArray"],[117,19,98,17],[117,20,98,18,"forEach"],[117,27,98,25],[117,28,98,26,"child"],[117,33,98,31],[117,37,98,35],[118,8,99,6],[118,12,99,10],[118,16,99,10,"isString"],[118,24,99,18],[118,25,99,18,"isString"],[118,33,99,18],[118,35,99,19,"child"],[118,40,99,24],[118,41,99,25],[118,43,99,27],[119,8,100,6],[119,12,100,10,"hasChildren"],[119,23,100,21],[119,24,100,22,"child"],[119,29,100,27],[119,30,100,28],[119,32,100,30,"getData"],[119,39,100,37],[119,40,100,38,"getChildren"],[119,51,100,49],[119,52,100,50,"child"],[119,57,100,55],[119,58,100,56],[119,59,100,57],[119,60,100,58],[119,65,100,63],[119,69,100,67],[119,73,100,67,"isObject"],[119,81,100,75],[119,82,100,75,"isObject"],[119,90,100,75],[119,92,100,76,"child"],[119,97,100,81],[119,98,100,82],[119,102,100,86],[119,117,100,87],[119,121,100,87,"isValidElement"],[119,127,100,101],[119,128,100,101,"isValidElement"],[119,142,100,101],[119,144,100,102,"child"],[119,149,100,107],[119,150,100,108],[119,152,100,110,"Object"],[119,158,100,116],[119,159,100,117,"assign"],[119,165,100,123],[119,166,100,124,"data"],[119,170,100,128],[119,172,100,130,"child"],[119,177,100,135],[119,178,100,136],[120,6,101,4],[120,7,101,5],[120,8,101,6],[121,4,102,2],[121,5,102,3],[122,4,103,2,"getData"],[122,11,103,9],[122,12,103,10,"children"],[122,20,103,18],[122,21,103,19],[123,4,104,2],[123,10,104,8,"ast"],[123,13,104,11],[123,16,104,14,"HTML"],[123,20,104,18],[123,21,104,18,"default"],[123,28,104,18],[123,29,104,19,"parse"],[123,34,104,24],[123,35,104,25],[123,41,104,31,"targetString"],[123,53,104,43],[123,59,104,49],[123,60,104,50],[124,4,105,2],[124,10,105,8,"opts"],[124,14,105,12],[124,17,105,15],[125,6,106,4],[125,9,106,7,"data"],[125,13,106,11],[126,6,107,4],[126,9,107,7,"combinedTOpts"],[127,4,108,2],[127,5,108,3],[128,4,109,2],[128,10,109,8,"renderInner"],[128,21,109,19],[128,24,109,22,"renderInner"],[128,25,109,23,"child"],[128,30,109,28],[128,32,109,30,"node"],[128,36,109,34],[128,38,109,36,"rootReactNode"],[128,51,109,49],[128,56,109,54],[129,6,110,4],[129,12,110,10,"childs"],[129,18,110,16],[129,21,110,19,"getChildren"],[129,32,110,30],[129,33,110,31,"child"],[129,38,110,36],[129,39,110,37],[130,6,111,4],[130,12,111,10,"mappedChildren"],[130,26,111,24],[130,29,111,27,"mapAST"],[130,35,111,33],[130,36,111,34,"childs"],[130,42,111,40],[130,44,111,42,"node"],[130,48,111,46],[130,49,111,47,"children"],[130,57,111,55],[130,59,111,57,"rootReactNode"],[130,72,111,70],[130,73,111,71],[131,6,112,4],[131,13,112,11,"hasValidReactChildren"],[131,34,112,32],[131,35,112,33,"childs"],[131,41,112,39],[131,42,112,40],[131,46,112,44,"mappedChildren"],[131,60,112,58],[131,61,112,59,"length"],[131,67,112,65],[131,72,112,70],[131,73,112,71],[131,77,112,75,"child"],[131,82,112,80],[131,83,112,81,"props"],[131,88,112,86],[131,90,112,88,"i18nIsDynamicList"],[131,107,112,105],[131,110,112,108,"childs"],[131,116,112,114],[131,119,112,117,"mappedChildren"],[131,133,112,131],[132,4,113,2],[132,5,113,3],[133,4,114,2],[133,10,114,8,"pushTranslatedJSX"],[133,27,114,25],[133,30,114,28,"pushTranslatedJSX"],[133,31,114,29,"child"],[133,36,114,34],[133,38,114,36,"inner"],[133,43,114,41],[133,45,114,43,"mem"],[133,48,114,46],[133,50,114,48,"i"],[133,51,114,49],[133,53,114,51,"isVoid"],[133,59,114,57],[133,64,114,62],[134,6,115,4],[134,10,115,8,"child"],[134,15,115,13],[134,16,115,14,"dummy"],[134,21,115,19],[134,23,115,21],[135,8,116,6,"child"],[135,13,116,11],[135,14,116,12,"children"],[135,22,116,20],[135,25,116,23,"inner"],[135,30,116,28],[136,8,117,6,"mem"],[136,11,117,9],[136,12,117,10,"push"],[136,16,117,14],[136,30,117,15],[136,34,117,15,"cloneElement"],[136,40,117,27],[136,41,117,27,"cloneElement"],[136,53,117,27],[136,55,117,28,"child"],[136,60,117,33],[136,62,117,35],[137,10,118,8,"key"],[137,13,118,11],[137,15,118,13,"i"],[138,8,119,6],[138,9,119,7],[138,11,119,9,"isVoid"],[138,17,119,15],[138,20,119,18,"undefined"],[138,29,119,27],[138,32,119,30,"inner"],[138,37,119,35],[138,38,119,36],[138,39,119,37],[139,6,120,4],[139,7,120,5],[139,13,120,11],[140,8,121,6,"mem"],[140,11,121,9],[140,12,121,10,"push"],[140,16,121,14],[140,17,121,15],[140,20,121,18,"Children"],[140,26,121,26],[140,27,121,26,"Children"],[140,35,121,26],[140,36,121,27,"map"],[140,39,121,30],[140,40,121,31],[140,41,121,32,"child"],[140,46,121,37],[140,47,121,38],[140,49,121,40,"c"],[140,50,121,41],[140,54,121,45],[141,10,122,8],[141,16,122,14,"props"],[141,21,122,19],[141,24,122,22],[142,12,123,10],[142,15,123,13,"c"],[142,16,123,14],[142,17,123,15,"props"],[143,10,124,8],[143,11,124,9],[144,10,125,8],[144,17,125,15,"props"],[144,22,125,20],[144,23,125,21,"i18nIsDynamicList"],[144,40,125,38],[145,10,126,8],[145,30,126,15],[145,34,126,15,"createElement"],[145,40,126,28],[145,41,126,28,"createElement"],[145,54,126,28],[145,56,126,29,"c"],[145,57,126,30],[145,58,126,31,"type"],[145,62,126,35],[145,64,126,37],[146,12,127,10],[146,15,127,13,"props"],[146,20,127,18],[147,12,128,10,"key"],[147,15,128,13],[147,17,128,15,"i"],[147,18,128,16],[148,12,129,10,"ref"],[148,15,129,13],[148,17,129,15,"c"],[148,18,129,16],[148,19,129,17,"props"],[148,24,129,22],[148,25,129,23,"ref"],[148,28,129,26],[148,32,129,30,"c"],[148,33,129,31],[148,34,129,32,"ref"],[149,10,130,8],[149,11,130,9],[149,13,130,11,"isVoid"],[149,19,130,17],[149,22,130,20],[149,26,130,24],[149,29,130,27,"inner"],[149,34,130,32],[149,35,130,33],[150,8,131,6],[150,9,131,7],[150,10,131,8],[150,11,131,9],[151,6,132,4],[152,4,133,2],[152,5,133,3],[153,4,134,2],[153,10,134,8,"mapAST"],[153,16,134,14],[153,19,134,17,"mapAST"],[153,20,134,18,"reactNode"],[153,29,134,27],[153,31,134,29,"astNode"],[153,38,134,36],[153,40,134,38,"rootReactNode"],[153,53,134,51],[153,58,134,56],[154,6,135,4],[154,12,135,10,"reactNodes"],[154,22,135,20],[154,25,135,23,"getAsArray"],[154,35,135,33],[154,36,135,34,"reactNode"],[154,45,135,43],[154,46,135,44],[155,6,136,4],[155,12,136,10,"astNodes"],[155,20,136,18],[155,23,136,21,"getAsArray"],[155,33,136,31],[155,34,136,32,"astNode"],[155,41,136,39],[155,42,136,40],[156,6,137,4],[156,13,137,11,"astNodes"],[156,21,137,19],[156,22,137,20,"reduce"],[156,28,137,26],[156,29,137,27],[156,30,137,28,"mem"],[156,33,137,31],[156,35,137,33,"node"],[156,39,137,37],[156,41,137,39,"i"],[156,42,137,40],[156,47,137,45],[157,8,138,6],[157,14,138,12,"translationContent"],[157,32,138,30],[157,35,138,33,"node"],[157,39,138,37],[157,40,138,38,"children"],[157,48,138,46],[157,51,138,49],[157,52,138,50],[157,53,138,51],[157,55,138,53,"content"],[157,62,138,60],[157,66,138,64,"i18n"],[157,70,138,68],[157,71,138,69,"services"],[157,79,138,77],[157,80,138,78,"interpolator"],[157,92,138,90],[157,93,138,91,"interpolate"],[157,104,138,102],[157,105,138,103,"node"],[157,109,138,107],[157,110,138,108,"children"],[157,118,138,116],[157,119,138,117],[157,120,138,118],[157,121,138,119],[157,122,138,120,"content"],[157,129,138,127],[157,131,138,129,"opts"],[157,135,138,133],[157,137,138,135,"i18n"],[157,141,138,139],[157,142,138,140,"language"],[157,150,138,148],[157,151,138,149],[158,8,139,6],[158,12,139,10,"node"],[158,16,139,14],[158,17,139,15,"type"],[158,21,139,19],[158,26,139,24],[158,31,139,29],[158,33,139,31],[159,10,140,8],[159,14,140,12,"tmp"],[159,17,140,15],[159,20,140,18,"reactNodes"],[159,30,140,28],[159,31,140,29,"parseInt"],[159,39,140,37],[159,40,140,38,"node"],[159,44,140,42],[159,45,140,43,"name"],[159,49,140,47],[159,51,140,49],[159,53,140,51],[159,54,140,52],[159,55,140,53],[160,10,141,8],[160,14,141,12],[160,15,141,13,"tmp"],[160,18,141,16],[160,22,141,20,"knownComponentsMap"],[160,40,141,38],[160,42,141,40,"tmp"],[160,45,141,43],[160,48,141,46,"knownComponentsMap"],[160,66,141,64],[160,67,141,65,"node"],[160,71,141,69],[160,72,141,70,"name"],[160,76,141,74],[160,77,141,75],[161,10,142,8],[161,14,142,12,"rootReactNode"],[161,27,142,25],[161,28,142,26,"length"],[161,34,142,32],[161,39,142,37],[161,40,142,38],[161,44,142,42],[161,45,142,43,"tmp"],[161,48,142,46],[161,50,142,48,"tmp"],[161,53,142,51],[161,56,142,54,"rootReactNode"],[161,69,142,67],[161,70,142,68],[161,71,142,69],[161,72,142,70],[161,73,142,71,"node"],[161,77,142,75],[161,78,142,76,"name"],[161,82,142,80],[161,83,142,81],[162,10,143,8],[162,14,143,12],[162,15,143,13,"tmp"],[162,18,143,16],[162,20,143,18,"tmp"],[162,23,143,21],[162,26,143,24],[162,27,143,25],[162,28,143,26],[163,10,144,8],[163,16,144,14,"child"],[163,21,144,19],[163,24,144,22,"Object"],[163,30,144,28],[163,31,144,29,"keys"],[163,35,144,33],[163,36,144,34,"node"],[163,40,144,38],[163,41,144,39,"attrs"],[163,46,144,44],[163,47,144,45],[163,48,144,46,"length"],[163,54,144,52],[163,59,144,57],[163,60,144,58],[163,63,144,61,"mergeProps"],[163,73,144,71],[163,74,144,72],[164,12,145,10,"props"],[164,17,145,15],[164,19,145,17,"node"],[164,23,145,21],[164,24,145,22,"attrs"],[165,10,146,8],[165,11,146,9],[165,13,146,11,"tmp"],[165,16,146,14],[165,17,146,15],[165,20,146,18,"tmp"],[165,23,146,21],[166,10,147,8],[166,16,147,14,"isElement"],[166,25,147,23],[166,41,147,26],[166,45,147,26,"isValidElement"],[166,51,147,40],[166,52,147,40,"isValidElement"],[166,66,147,40],[166,68,147,41,"child"],[166,73,147,46],[166,74,147,47],[167,10,148,8],[167,16,148,14,"isValidTranslationWithChildren"],[167,46,148,44],[167,49,148,47,"isElement"],[167,58,148,56],[167,62,148,60,"hasChildren"],[167,73,148,71],[167,74,148,72,"node"],[167,78,148,76],[167,80,148,78],[167,84,148,82],[167,85,148,83],[167,89,148,87],[167,90,148,88,"node"],[167,94,148,92],[167,95,148,93,"voidElement"],[167,106,148,104],[168,10,149,8],[168,16,149,14,"isEmptyTransWithHTML"],[168,36,149,34],[168,39,149,37,"emptyChildrenButNeedsHandling"],[168,68,149,66],[168,72,149,70],[168,76,149,70,"isObject"],[168,84,149,78],[168,85,149,78,"isObject"],[168,93,149,78],[168,95,149,79,"child"],[168,100,149,84],[168,101,149,85],[168,105,149,89,"child"],[168,110,149,94],[168,111,149,95,"dummy"],[168,116,149,100],[168,120,149,104],[168,121,149,105,"isElement"],[168,130,149,114],[169,10,150,8],[169,16,150,14,"isKnownComponent"],[169,32,150,30],[169,35,150,33],[169,39,150,33,"isObject"],[169,47,150,41],[169,48,150,41,"isObject"],[169,56,150,41],[169,58,150,42,"knownComponentsMap"],[169,76,150,60],[169,77,150,61],[169,81,150,65,"Object"],[169,87,150,71],[169,88,150,72,"hasOwnProperty"],[169,102,150,86],[169,103,150,87,"call"],[169,107,150,91],[169,108,150,92,"knownComponentsMap"],[169,126,150,110],[169,128,150,112,"node"],[169,132,150,116],[169,133,150,117,"name"],[169,137,150,121],[169,138,150,122],[170,10,151,8],[170,14,151,12],[170,18,151,12,"isString"],[170,26,151,20],[170,27,151,20,"isString"],[170,35,151,20],[170,37,151,21,"child"],[170,42,151,26],[170,43,151,27],[170,45,151,29],[171,12,152,10],[171,18,152,16,"value"],[171,23,152,21],[171,26,152,24,"i18n"],[171,30,152,28],[171,31,152,29,"services"],[171,39,152,37],[171,40,152,38,"interpolator"],[171,52,152,50],[171,53,152,51,"interpolate"],[171,64,152,62],[171,65,152,63,"child"],[171,70,152,68],[171,72,152,70,"opts"],[171,76,152,74],[171,78,152,76,"i18n"],[171,82,152,80],[171,83,152,81,"language"],[171,91,152,89],[171,92,152,90],[172,12,153,10,"mem"],[172,15,153,13],[172,16,153,14,"push"],[172,20,153,18],[172,21,153,19,"value"],[172,26,153,24],[172,27,153,25],[173,10,154,8],[173,11,154,9],[173,17,154,15],[173,21,154,19,"hasChildren"],[173,32,154,30],[173,33,154,31,"child"],[173,38,154,36],[173,39,154,37],[173,43,154,41,"isValidTranslationWithChildren"],[173,73,154,71],[173,75,154,73],[174,12,155,10],[174,18,155,16,"inner"],[174,23,155,21],[174,26,155,24,"renderInner"],[174,37,155,35],[174,38,155,36,"child"],[174,43,155,41],[174,45,155,43,"node"],[174,49,155,47],[174,51,155,49,"rootReactNode"],[174,64,155,62],[174,65,155,63],[175,12,156,10,"pushTranslatedJSX"],[175,29,156,27],[175,30,156,28,"child"],[175,35,156,33],[175,37,156,35,"inner"],[175,42,156,40],[175,44,156,42,"mem"],[175,47,156,45],[175,49,156,47,"i"],[175,50,156,48],[175,51,156,49],[176,10,157,8],[176,11,157,9],[176,17,157,15],[176,21,157,19,"isEmptyTransWithHTML"],[176,41,157,39],[176,43,157,41],[177,12,158,10],[177,18,158,16,"inner"],[177,23,158,21],[177,26,158,24,"mapAST"],[177,32,158,30],[177,33,158,31,"reactNodes"],[177,43,158,41],[177,45,158,43,"node"],[177,49,158,47],[177,50,158,48,"children"],[177,58,158,56],[177,60,158,58,"rootReactNode"],[177,73,158,71],[177,74,158,72],[178,12,159,10,"pushTranslatedJSX"],[178,29,159,27],[178,30,159,28,"child"],[178,35,159,33],[178,37,159,35,"inner"],[178,42,159,40],[178,44,159,42,"mem"],[178,47,159,45],[178,49,159,47,"i"],[178,50,159,48],[178,51,159,49],[179,10,160,8],[179,11,160,9],[179,17,160,15],[179,21,160,19,"Number"],[179,27,160,25],[179,28,160,26,"isNaN"],[179,33,160,31],[179,34,160,32,"parseFloat"],[179,44,160,42],[179,45,160,43,"node"],[179,49,160,47],[179,50,160,48,"name"],[179,54,160,52],[179,55,160,53],[179,56,160,54],[179,58,160,56],[180,12,161,10],[180,16,161,14,"isKnownComponent"],[180,32,161,30],[180,34,161,32],[181,14,162,12],[181,20,162,18,"inner"],[181,25,162,23],[181,28,162,26,"renderInner"],[181,39,162,37],[181,40,162,38,"child"],[181,45,162,43],[181,47,162,45,"node"],[181,51,162,49],[181,53,162,51,"rootReactNode"],[181,66,162,64],[181,67,162,65],[182,14,163,12,"pushTranslatedJSX"],[182,31,163,29],[182,32,163,30,"child"],[182,37,163,35],[182,39,163,37,"inner"],[182,44,163,42],[182,46,163,44,"mem"],[182,49,163,47],[182,51,163,49,"i"],[182,52,163,50],[182,54,163,52,"node"],[182,58,163,56],[182,59,163,57,"voidElement"],[182,70,163,68],[182,71,163,69],[183,12,164,10],[183,13,164,11],[183,19,164,17],[183,23,164,21,"i18nOptions"],[183,34,164,32],[183,35,164,33,"transSupportBasicHtmlNodes"],[183,61,164,59],[183,65,164,63,"keepArray"],[183,74,164,72],[183,75,164,73,"indexOf"],[183,82,164,80],[183,83,164,81,"node"],[183,87,164,85],[183,88,164,86,"name"],[183,92,164,90],[183,93,164,91],[183,96,164,94],[183,97,164,95],[183,98,164,96],[183,100,164,98],[184,14,165,12],[184,18,165,16,"node"],[184,22,165,20],[184,23,165,21,"voidElement"],[184,34,165,32],[184,36,165,34],[185,16,166,14,"mem"],[185,19,166,17],[185,20,166,18,"push"],[185,24,166,22],[185,38,166,23],[185,42,166,23,"createElement"],[185,48,166,36],[185,49,166,36,"createElement"],[185,62,166,36],[185,64,166,37,"node"],[185,68,166,41],[185,69,166,42,"name"],[185,73,166,46],[185,75,166,48],[186,18,167,16,"key"],[186,21,167,19],[186,23,167,21],[186,26,167,24,"node"],[186,30,167,28],[186,31,167,29,"name"],[186,35,167,33],[186,39,167,37,"i"],[186,40,167,38],[187,16,168,14],[187,17,168,15],[187,18,168,16],[187,19,168,17],[188,14,169,12],[188,15,169,13],[188,21,169,19],[189,16,170,14],[189,22,170,20,"inner"],[189,27,170,25],[189,30,170,28,"mapAST"],[189,36,170,34],[189,37,170,35,"reactNodes"],[189,47,170,45],[189,49,170,47,"node"],[189,53,170,51],[189,54,170,52,"children"],[189,62,170,60],[189,64,170,62,"rootReactNode"],[189,77,170,75],[189,78,170,76],[190,16,171,14,"mem"],[190,19,171,17],[190,20,171,18,"push"],[190,24,171,22],[190,38,171,23],[190,42,171,23,"createElement"],[190,48,171,36],[190,49,171,36,"createElement"],[190,62,171,36],[190,64,171,37,"node"],[190,68,171,41],[190,69,171,42,"name"],[190,73,171,46],[190,75,171,48],[191,18,172,16,"key"],[191,21,172,19],[191,23,172,21],[191,26,172,24,"node"],[191,30,172,28],[191,31,172,29,"name"],[191,35,172,33],[191,39,172,37,"i"],[191,40,172,38],[192,16,173,14],[192,17,173,15],[192,19,173,17,"inner"],[192,24,173,22],[192,25,173,23],[192,26,173,24],[193,14,174,12],[194,12,175,10],[194,13,175,11],[194,19,175,17],[194,23,175,21,"node"],[194,27,175,25],[194,28,175,26,"voidElement"],[194,39,175,37],[194,41,175,39],[195,14,176,12,"mem"],[195,17,176,15],[195,18,176,16,"push"],[195,22,176,20],[195,23,176,21],[195,27,176,25,"node"],[195,31,176,29],[195,32,176,30,"name"],[195,36,176,34],[195,41,176,39],[195,42,176,40],[196,12,177,10],[196,13,177,11],[196,19,177,17],[197,14,178,12],[197,20,178,18,"inner"],[197,25,178,23],[197,28,178,26,"mapAST"],[197,34,178,32],[197,35,178,33,"reactNodes"],[197,45,178,43],[197,47,178,45,"node"],[197,51,178,49],[197,52,178,50,"children"],[197,60,178,58],[197,62,178,60,"rootReactNode"],[197,75,178,73],[197,76,178,74],[198,14,179,12,"mem"],[198,17,179,15],[198,18,179,16,"push"],[198,22,179,20],[198,23,179,21],[198,27,179,25,"node"],[198,31,179,29],[198,32,179,30,"name"],[198,36,179,34],[198,40,179,38,"inner"],[198,45,179,43],[198,50,179,48,"node"],[198,54,179,52],[198,55,179,53,"name"],[198,59,179,57],[198,62,179,60],[198,63,179,61],[199,12,180,10],[200,10,181,8],[200,11,181,9],[200,17,181,15],[200,21,181,19],[200,25,181,19,"isObject"],[200,33,181,27],[200,34,181,27,"isObject"],[200,42,181,27],[200,44,181,28,"child"],[200,49,181,33],[200,50,181,34],[200,54,181,38],[200,55,181,39,"isElement"],[200,64,181,48],[200,66,181,50],[201,12,182,10],[201,18,182,16,"content"],[201,25,182,23],[201,28,182,26,"node"],[201,32,182,30],[201,33,182,31,"children"],[201,41,182,39],[201,42,182,40],[201,43,182,41],[201,44,182,42],[201,47,182,45,"translationContent"],[201,65,182,63],[201,68,182,66],[201,72,182,70],[202,12,183,10],[202,16,183,14,"content"],[202,23,183,21],[202,25,183,23,"mem"],[202,28,183,26],[202,29,183,27,"push"],[202,33,183,31],[202,34,183,32,"content"],[202,41,183,39],[202,42,183,40],[203,10,184,8],[203,11,184,9],[203,17,184,15],[204,12,185,10,"pushTranslatedJSX"],[204,29,185,27],[204,30,185,28,"child"],[204,35,185,33],[204,37,185,35,"translationContent"],[204,55,185,53],[204,57,185,55,"mem"],[204,60,185,58],[204,62,185,60,"i"],[204,63,185,61],[204,65,185,63,"node"],[204,69,185,67],[204,70,185,68,"children"],[204,78,185,76],[204,79,185,77,"length"],[204,85,185,83],[204,90,185,88],[204,91,185,89],[204,95,185,93],[204,96,185,94,"translationContent"],[204,114,185,112],[204,115,185,113],[205,10,186,8],[206,8,187,6],[206,9,187,7],[206,15,187,13],[206,19,187,17,"node"],[206,23,187,21],[206,24,187,22,"type"],[206,28,187,26],[206,33,187,31],[206,39,187,37],[206,41,187,39],[207,10,188,8],[207,16,188,14,"wrapTextNodes"],[207,29,188,27],[207,32,188,30,"i18nOptions"],[207,43,188,41],[207,44,188,42,"transWrapTextNodes"],[207,62,188,60],[208,10,189,8],[208,16,189,14,"content"],[208,23,189,21],[208,26,189,24,"shouldUnescape"],[208,40,189,38],[208,43,189,41,"i18nOptions"],[208,54,189,52],[208,55,189,53,"unescape"],[208,63,189,61],[208,64,189,62,"i18n"],[208,68,189,66],[208,69,189,67,"services"],[208,77,189,75],[208,78,189,76,"interpolator"],[208,90,189,88],[208,91,189,89,"interpolate"],[208,102,189,100],[208,103,189,101,"node"],[208,107,189,105],[208,108,189,106,"content"],[208,115,189,113],[208,117,189,115,"opts"],[208,121,189,119],[208,123,189,121,"i18n"],[208,127,189,125],[208,128,189,126,"language"],[208,136,189,134],[208,137,189,135],[208,138,189,136],[208,141,189,139,"i18n"],[208,145,189,143],[208,146,189,144,"services"],[208,154,189,152],[208,155,189,153,"interpolator"],[208,167,189,165],[208,168,189,166,"interpolate"],[208,179,189,177],[208,180,189,178,"node"],[208,184,189,182],[208,185,189,183,"content"],[208,192,189,190],[208,194,189,192,"opts"],[208,198,189,196],[208,200,189,198,"i18n"],[208,204,189,202],[208,205,189,203,"language"],[208,213,189,211],[208,214,189,212],[209,10,190,8],[209,14,190,12,"wrapTextNodes"],[209,27,190,25],[209,29,190,27],[210,12,191,10,"mem"],[210,15,191,13],[210,16,191,14,"push"],[210,20,191,18],[210,34,191,19],[210,38,191,19,"createElement"],[210,44,191,32],[210,45,191,32,"createElement"],[210,58,191,32],[210,60,191,33,"wrapTextNodes"],[210,73,191,46],[210,75,191,48],[211,14,192,12,"key"],[211,17,192,15],[211,19,192,17],[211,22,192,20,"node"],[211,26,192,24],[211,27,192,25,"name"],[211,31,192,29],[211,35,192,33,"i"],[211,36,192,34],[212,12,193,10],[212,13,193,11],[212,15,193,13,"content"],[212,22,193,20],[212,23,193,21],[212,24,193,22],[213,10,194,8],[213,11,194,9],[213,17,194,15],[214,12,195,10,"mem"],[214,15,195,13],[214,16,195,14,"push"],[214,20,195,18],[214,21,195,19,"content"],[214,28,195,26],[214,29,195,27],[215,10,196,8],[216,8,197,6],[217,8,198,6],[217,15,198,13,"mem"],[217,18,198,16],[218,6,199,4],[218,7,199,5],[218,9,199,7],[218,11,199,9],[218,12,199,10],[219,4,200,2],[219,5,200,3],[220,4,201,2],[220,10,201,8,"result"],[220,16,201,14],[220,19,201,17,"mapAST"],[220,25,201,23],[220,26,201,24],[220,27,201,25],[221,6,202,4,"dummy"],[221,11,202,9],[221,13,202,11],[221,17,202,15],[222,6,203,4,"children"],[222,14,203,12],[222,16,203,14,"children"],[222,24,203,22],[222,28,203,26],[223,4,204,2],[223,5,204,3],[223,6,204,4],[223,8,204,6,"ast"],[223,11,204,9],[223,13,204,11,"getAsArray"],[223,23,204,21],[223,24,204,22,"children"],[223,32,204,30],[223,36,204,34],[223,38,204,36],[223,39,204,37],[223,40,204,38],[224,4,205,2],[224,11,205,9,"getChildren"],[224,22,205,20],[224,23,205,21,"result"],[224,29,205,27],[224,30,205,28],[224,31,205,29],[224,32,205,30],[224,33,205,31],[225,2,206,0],[225,3,206,1],[226,2,207,0],[226,8,207,6,"fixComponentProps"],[226,25,207,23],[226,28,207,26,"fixComponentProps"],[226,29,207,27,"component"],[226,38,207,36],[226,40,207,38,"index"],[226,45,207,43],[226,47,207,45,"translation"],[226,58,207,56],[226,63,207,61],[227,4,208,2],[227,10,208,8,"componentKey"],[227,22,208,20],[227,25,208,23,"component"],[227,34,208,32],[227,35,208,33,"key"],[227,38,208,36],[227,42,208,40,"index"],[227,47,208,45],[228,4,209,2],[228,10,209,8,"comp"],[228,14,209,12],[228,30,209,15],[228,34,209,15,"cloneElement"],[228,40,209,27],[228,41,209,27,"cloneElement"],[228,53,209,27],[228,55,209,28,"component"],[228,64,209,37],[228,66,209,39],[229,6,210,4,"key"],[229,9,210,7],[229,11,210,9,"componentKey"],[230,4,211,2],[230,5,211,3],[230,6,211,4],[231,4,212,2],[231,8,212,6],[231,9,212,7,"comp"],[231,13,212,11],[231,14,212,12,"props"],[231,19,212,17],[231,23,212,21],[231,24,212,22,"comp"],[231,28,212,26],[231,29,212,27,"props"],[231,34,212,32],[231,35,212,33,"children"],[231,43,212,41],[231,47,212,45,"translation"],[231,58,212,56],[231,59,212,57,"indexOf"],[231,66,212,64],[231,67,212,65],[231,70,212,68,"index"],[231,75,212,73],[231,79,212,77],[231,80,212,78],[231,83,212,81],[231,84,212,82],[231,88,212,86,"translation"],[231,99,212,97],[231,100,212,98,"indexOf"],[231,107,212,105],[231,108,212,106],[231,111,212,109,"index"],[231,116,212,114],[231,121,212,119],[231,122,212,120],[231,125,212,123],[231,126,212,124],[231,128,212,126],[232,6,213,4],[232,13,213,11,"comp"],[232,17,213,15],[233,4,214,2],[234,4,215,2],[234,13,215,11,"Componentized"],[234,26,215,24,"Componentized"],[234,27,215,24],[234,29,215,27],[235,6,216,4],[235,26,216,11],[235,30,216,11,"createElement"],[235,36,216,24],[235,37,216,24,"createElement"],[235,50,216,24],[235,52,216,25,"Fragment"],[235,58,216,33],[235,59,216,33,"Fragment"],[235,67,216,33],[235,69,216,35],[235,73,216,39],[235,75,216,41,"comp"],[235,79,216,45],[235,80,216,46],[236,4,217,2],[237,4,218,2],[237,24,218,9],[237,28,218,9,"createElement"],[237,34,218,22],[237,35,218,22,"createElement"],[237,48,218,22],[237,50,218,23,"Componentized"],[237,63,218,36],[237,65,218,38],[238,6,219,4,"key"],[238,9,219,7],[238,11,219,9,"componentKey"],[239,4,220,2],[239,5,220,3],[239,6,220,4],[240,2,221,0],[240,3,221,1],[241,2,222,0],[241,8,222,6,"generateArrayComponents"],[241,31,222,29],[241,34,222,32,"generateArrayComponents"],[241,35,222,33,"components"],[241,45,222,43],[241,47,222,45,"translation"],[241,58,222,56],[241,63,222,61,"components"],[241,73,222,71],[241,74,222,72,"map"],[241,77,222,75],[241,78,222,76],[241,79,222,77,"c"],[241,80,222,78],[241,82,222,80,"index"],[241,87,222,85],[241,92,222,90,"fixComponentProps"],[241,109,222,107],[241,110,222,108,"c"],[241,111,222,109],[241,113,222,111,"index"],[241,118,222,116],[241,120,222,118,"translation"],[241,131,222,129],[241,132,222,130],[241,133,222,131],[242,2,223,0],[242,8,223,6,"generateObjectComponents"],[242,32,223,30],[242,35,223,33,"generateObjectComponents"],[242,36,223,34,"components"],[242,46,223,44],[242,48,223,46,"translation"],[242,59,223,57],[242,64,223,62],[243,4,224,2],[243,10,224,8,"componentMap"],[243,22,224,20],[243,25,224,23],[243,26,224,24],[243,27,224,25],[244,4,225,2,"Object"],[244,10,225,8],[244,11,225,9,"keys"],[244,15,225,13],[244,16,225,14,"components"],[244,26,225,24],[244,27,225,25],[244,28,225,26,"forEach"],[244,35,225,33],[244,36,225,34,"c"],[244,37,225,35],[244,41,225,39],[245,6,226,4,"Object"],[245,12,226,10],[245,13,226,11,"assign"],[245,19,226,17],[245,20,226,18,"componentMap"],[245,32,226,30],[245,34,226,32],[246,8,227,6],[246,9,227,7,"c"],[246,10,227,8],[246,13,227,11,"fixComponentProps"],[246,30,227,28],[246,31,227,29,"components"],[246,41,227,39],[246,42,227,40,"c"],[246,43,227,41],[246,44,227,42],[246,46,227,44,"c"],[246,47,227,45],[246,49,227,47,"translation"],[246,60,227,58],[247,6,228,4],[247,7,228,5],[247,8,228,6],[248,4,229,2],[248,5,229,3],[248,6,229,4],[249,4,230,2],[249,11,230,9,"componentMap"],[249,23,230,21],[250,2,231,0],[250,3,231,1],[251,2,232,0],[251,8,232,6,"generateComponents"],[251,26,232,24],[251,29,232,27,"generateComponents"],[251,30,232,28,"components"],[251,40,232,38],[251,42,232,40,"translation"],[251,53,232,51],[251,55,232,53,"i18n"],[251,59,232,57],[251,61,232,59,"i18nKey"],[251,68,232,66],[251,73,232,71],[252,4,233,2],[252,8,233,6],[252,9,233,7,"components"],[252,19,233,17],[252,21,233,19],[252,28,233,26],[252,32,233,30],[253,4,234,2],[253,8,234,6,"Array"],[253,13,234,11],[253,14,234,12,"isArray"],[253,21,234,19],[253,22,234,20,"components"],[253,32,234,30],[253,33,234,31],[253,35,234,33],[254,6,235,4],[254,13,235,11,"generateArrayComponents"],[254,36,235,34],[254,37,235,35,"components"],[254,47,235,45],[254,49,235,47,"translation"],[254,60,235,58],[254,61,235,59],[255,4,236,2],[256,4,237,2],[256,8,237,6],[256,12,237,6,"isObject"],[256,20,237,14],[256,21,237,14,"isObject"],[256,29,237,14],[256,31,237,15,"components"],[256,41,237,25],[256,42,237,26],[256,44,237,28],[257,6,238,4],[257,13,238,11,"generateObjectComponents"],[257,37,238,35],[257,38,238,36,"components"],[257,48,238,46],[257,50,238,48,"translation"],[257,61,238,59],[257,62,238,60],[258,4,239,2],[259,4,240,2],[259,8,240,2,"warnOnce"],[259,16,240,10],[259,17,240,10,"warnOnce"],[259,25,240,10],[259,27,240,11,"i18n"],[259,31,240,15],[259,33,240,17],[259,59,240,43],[259,61,240,45],[259,117,240,101],[259,119,240,103],[260,6,241,4,"i18nKey"],[261,4,242,2],[261,5,242,3],[261,6,242,4],[262,4,243,2],[262,11,243,9],[262,15,243,13],[263,2,244,0],[263,3,244,1],[264,2,245,0],[264,8,245,6,"isComponentsMap"],[264,23,245,21],[264,26,245,24,"object"],[264,32,245,30],[264,36,245,34],[265,4,246,2],[265,8,246,6],[265,9,246,7],[265,13,246,7,"isObject"],[265,21,246,15],[265,22,246,15,"isObject"],[265,30,246,15],[265,32,246,16,"object"],[265,38,246,22],[265,39,246,23],[265,41,246,25],[265,48,246,32],[265,53,246,37],[266,4,247,2],[266,8,247,6,"Array"],[266,13,247,11],[266,14,247,12,"isArray"],[266,21,247,19],[266,22,247,20,"object"],[266,28,247,26],[266,29,247,27],[266,31,247,29],[266,38,247,36],[266,43,247,41],[267,4,248,2],[267,11,248,9,"Object"],[267,17,248,15],[267,18,248,16,"keys"],[267,22,248,20],[267,23,248,21,"object"],[267,29,248,27],[267,30,248,28],[267,31,248,29,"reduce"],[267,37,248,35],[267,38,248,36],[267,39,248,37,"acc"],[267,42,248,40],[267,44,248,42,"key"],[267,47,248,45],[267,52,248,50,"acc"],[267,55,248,53],[267,59,248,57,"Number"],[267,65,248,63],[267,66,248,64,"isNaN"],[267,71,248,69],[267,72,248,70,"Number"],[267,78,248,76],[267,79,248,77,"parseFloat"],[267,89,248,87],[267,90,248,88,"key"],[267,93,248,91],[267,94,248,92],[267,95,248,93],[267,97,248,95],[267,101,248,99],[267,102,248,100],[268,2,249,0],[268,3,249,1],[269,2,250,7],[269,11,250,16,"Trans"],[269,16,250,21,"Trans"],[269,17,250,22],[270,4,251,2,"children"],[270,12,251,10],[271,4,252,2,"count"],[271,9,252,7],[272,4,253,2,"parent"],[272,10,253,8],[273,4,254,2,"i18nKey"],[273,11,254,9],[274,4,255,2,"context"],[274,11,255,9],[275,4,256,2,"tOptions"],[275,12,256,10],[275,15,256,13],[275,16,256,14],[275,17,256,15],[276,4,257,2,"values"],[276,10,257,8],[277,4,258,2,"defaults"],[277,12,258,10],[278,4,259,2,"components"],[278,14,259,12],[279,4,260,2,"ns"],[279,6,260,4],[280,4,261,2,"i18n"],[280,8,261,6],[280,10,261,8,"i18nFromProps"],[280,23,261,21],[281,4,262,2,"t"],[281,5,262,3],[281,7,262,5,"tFromProps"],[281,17,262,15],[282,4,263,2,"shouldUnescape"],[282,18,263,16],[283,4,264,2],[283,7,264,5,"additionalProps"],[284,2,265,0],[284,3,265,1],[284,5,265,3],[285,4,266,2],[285,10,266,8,"i18n"],[285,14,266,12],[285,17,266,15,"i18nFromProps"],[285,30,266,28],[285,34,266,32],[285,38,266,32,"getI18n"],[285,53,266,39],[285,54,266,39,"getI18n"],[285,61,266,39],[285,63,266,40],[285,64,266,41],[286,4,267,2],[286,8,267,6],[286,9,267,7,"i18n"],[286,13,267,11],[286,15,267,13],[287,6,268,4],[287,10,268,4,"warnOnce"],[287,18,268,12],[287,19,268,12,"warnOnce"],[287,27,268,12],[287,29,268,13,"i18n"],[287,33,268,17],[287,35,268,19],[287,56,268,40],[287,58,268,42],[287,131,268,115],[287,133,268,117],[288,8,269,6,"i18nKey"],[289,6,270,4],[289,7,270,5],[289,8,270,6],[290,6,271,4],[290,13,271,11,"children"],[290,21,271,19],[291,4,272,2],[292,4,273,2],[292,10,273,8,"t"],[292,11,273,9],[292,14,273,12,"tFromProps"],[292,24,273,22],[292,28,273,26,"i18n"],[292,32,273,30],[292,33,273,31,"t"],[292,34,273,32],[292,35,273,33,"bind"],[292,39,273,37],[292,40,273,38,"i18n"],[292,44,273,42],[292,45,273,43],[292,50,273,48,"k"],[292,51,273,49],[292,55,273,53,"k"],[292,56,273,54],[292,57,273,55],[293,4,274,2],[293,10,274,8,"reactI18nextOptions"],[293,29,274,27],[293,32,274,30],[294,6,275,4],[294,9,275,7],[294,13,275,7,"getDefaults"],[294,24,275,18],[294,25,275,18,"getDefaults"],[294,36,275,18],[294,38,275,19],[294,39,275,20],[295,6,276,4],[295,9,276,7,"i18n"],[295,13,276,11],[295,14,276,12,"options"],[295,21,276,19],[295,23,276,21,"react"],[296,4,277,2],[296,5,277,3],[297,4,278,2],[297,8,278,6,"namespaces"],[297,18,278,16],[297,21,278,19,"ns"],[297,23,278,21],[297,27,278,25,"t"],[297,28,278,26],[297,29,278,27,"ns"],[297,31,278,29],[297,35,278,33,"i18n"],[297,39,278,37],[297,40,278,38,"options"],[297,47,278,45],[297,49,278,47,"defaultNS"],[297,58,278,56],[298,4,279,2,"namespaces"],[298,14,279,12],[298,17,279,15],[298,21,279,15,"isString"],[298,29,279,23],[298,30,279,23,"isString"],[298,38,279,23],[298,40,279,24,"namespaces"],[298,50,279,34],[298,51,279,35],[298,54,279,38],[298,55,279,39,"namespaces"],[298,65,279,49],[298,66,279,50],[298,69,279,53,"namespaces"],[298,79,279,63],[298,83,279,67],[298,84,279,68],[298,97,279,81],[298,98,279,82],[299,4,280,2],[299,10,280,8,"nodeAsString"],[299,22,280,20],[299,25,280,23,"nodesToString"],[299,38,280,36],[299,39,280,37,"children"],[299,47,280,45],[299,49,280,47,"reactI18nextOptions"],[299,68,280,66],[299,70,280,68,"i18n"],[299,74,280,72],[299,76,280,74,"i18nKey"],[299,83,280,81],[299,84,280,82],[300,4,281,2],[300,10,281,8,"defaultValue"],[300,22,281,20],[300,25,281,23,"defaults"],[300,33,281,31],[300,37,281,35,"nodeAsString"],[300,49,281,47],[300,53,281,51,"reactI18nextOptions"],[300,72,281,70],[300,73,281,71,"transEmptyNodeValue"],[300,92,281,90],[300,96,281,94,"i18nKey"],[300,103,281,101],[301,4,282,2],[301,10,282,8],[302,6,283,4,"hashTransKey"],[303,4,284,2],[303,5,284,3],[303,8,284,6,"reactI18nextOptions"],[303,27,284,25],[304,4,285,2],[304,10,285,8,"key"],[304,13,285,11],[304,16,285,14,"i18nKey"],[304,23,285,21],[304,28,285,26,"hashTransKey"],[304,40,285,38],[304,43,285,41,"hashTransKey"],[304,55,285,53],[304,56,285,54,"nodeAsString"],[304,68,285,66],[304,72,285,70,"defaultValue"],[304,84,285,82],[304,85,285,83],[304,88,285,86,"nodeAsString"],[304,100,285,98],[304,104,285,102,"defaultValue"],[304,116,285,114],[304,117,285,115],[305,4,286,2],[305,8,286,6,"i18n"],[305,12,286,10],[305,13,286,11,"options"],[305,20,286,18],[305,22,286,20,"interpolation"],[305,35,286,33],[305,37,286,35,"defaultVariables"],[305,53,286,51],[305,55,286,53],[306,6,287,4,"values"],[306,12,287,10],[306,15,287,13,"values"],[306,21,287,19],[306,25,287,23,"Object"],[306,31,287,29],[306,32,287,30,"keys"],[306,36,287,34],[306,37,287,35,"values"],[306,43,287,41],[306,44,287,42],[306,45,287,43,"length"],[306,51,287,49],[306,54,287,52],[306,55,287,53],[306,58,287,56],[307,8,288,6],[307,11,288,9,"values"],[307,17,288,15],[308,8,289,6],[308,11,289,9,"i18n"],[308,15,289,13],[308,16,289,14,"options"],[308,23,289,21],[308,24,289,22,"interpolation"],[308,37,289,35],[308,38,289,36,"defaultVariables"],[309,6,290,4],[309,7,290,5],[309,10,290,8],[310,8,291,6],[310,11,291,9,"i18n"],[310,15,291,13],[310,16,291,14,"options"],[310,23,291,21],[310,24,291,22,"interpolation"],[310,37,291,35],[310,38,291,36,"defaultVariables"],[311,6,292,4],[311,7,292,5],[312,4,293,2],[313,4,294,2],[313,10,294,8,"interpolationOverride"],[313,31,294,29],[313,34,294,32,"values"],[313,40,294,38],[313,44,294,42,"count"],[313,49,294,47],[313,54,294,52,"undefined"],[313,63,294,61],[313,67,294,65],[313,68,294,66,"i18n"],[313,72,294,70],[313,73,294,71,"options"],[313,80,294,78],[313,82,294,80,"interpolation"],[313,95,294,93],[313,97,294,95,"alwaysFormat"],[313,109,294,107],[313,113,294,111],[313,114,294,112,"children"],[313,122,294,120],[313,125,294,123,"tOptions"],[313,133,294,131],[313,134,294,132,"interpolation"],[313,147,294,145],[313,150,294,148],[314,6,295,4,"interpolation"],[314,19,295,17],[314,21,295,19],[315,8,296,6],[315,11,296,9,"tOptions"],[315,19,296,17],[315,20,296,18,"interpolation"],[315,33,296,31],[316,8,297,6,"prefix"],[316,14,297,12],[316,16,297,14],[316,21,297,19],[317,8,298,6,"suffix"],[317,14,298,12],[317,16,298,14],[318,6,299,4],[319,4,300,2],[319,5,300,3],[320,4,301,2],[320,10,301,8,"combinedTOpts"],[320,23,301,21],[320,26,301,24],[321,6,302,4],[321,9,302,7,"tOptions"],[321,17,302,15],[322,6,303,4,"context"],[322,13,303,11],[322,15,303,13,"context"],[322,22,303,20],[322,26,303,24,"tOptions"],[322,34,303,32],[322,35,303,33,"context"],[322,42,303,40],[323,6,304,4,"count"],[323,11,304,9],[324,6,305,4],[324,9,305,7,"values"],[324,15,305,13],[325,6,306,4],[325,9,306,7,"interpolationOverride"],[325,30,306,28],[326,6,307,4,"defaultValue"],[326,18,307,16],[327,6,308,4,"ns"],[327,8,308,6],[327,10,308,8,"namespaces"],[328,4,309,2],[328,5,309,3],[329,4,310,2],[329,10,310,8,"translation"],[329,21,310,19],[329,24,310,22,"key"],[329,27,310,25],[329,30,310,28,"t"],[329,31,310,29],[329,32,310,30,"key"],[329,35,310,33],[329,37,310,35,"combinedTOpts"],[329,50,310,48],[329,51,310,49],[329,54,310,52,"defaultValue"],[329,66,310,64],[330,4,311,2],[330,10,311,8,"generatedComponents"],[330,29,311,27],[330,32,311,30,"generateComponents"],[330,50,311,48],[330,51,311,49,"components"],[330,61,311,59],[330,63,311,61,"translation"],[330,74,311,72],[330,76,311,74,"i18n"],[330,80,311,78],[330,82,311,80,"i18nKey"],[330,89,311,87],[330,90,311,88],[331,4,312,2],[331,8,312,6,"indexedChildren"],[331,23,312,21],[331,26,312,24,"generatedComponents"],[331,45,312,43],[331,49,312,47,"children"],[331,57,312,55],[332,4,313,2],[332,8,313,6,"componentsMap"],[332,21,313,19],[332,24,313,22],[332,28,313,26],[333,4,314,2],[333,8,314,6,"isComponentsMap"],[333,23,314,21],[333,24,314,22,"generatedComponents"],[333,43,314,41],[333,44,314,42],[333,46,314,44],[334,6,315,4,"componentsMap"],[334,19,315,17],[334,22,315,20,"generatedComponents"],[334,41,315,39],[335,6,316,4,"indexedChildren"],[335,21,316,19],[335,24,316,22,"children"],[335,32,316,30],[336,4,317,2],[337,4,318,2],[337,10,318,8,"content"],[337,17,318,15],[337,20,318,18,"renderNodes"],[337,31,318,29],[337,32,318,30,"indexedChildren"],[337,47,318,45],[337,49,318,47,"componentsMap"],[337,62,318,60],[337,64,318,62,"translation"],[337,75,318,73],[337,77,318,75,"i18n"],[337,81,318,79],[337,83,318,81,"reactI18nextOptions"],[337,102,318,100],[337,104,318,102,"combinedTOpts"],[337,117,318,115],[337,119,318,117,"shouldUnescape"],[337,133,318,131],[337,134,318,132],[338,4,319,2],[338,10,319,8,"useAsParent"],[338,21,319,19],[338,24,319,22,"parent"],[338,30,319,28],[338,34,319,32,"reactI18nextOptions"],[338,53,319,51],[338,54,319,52,"defaultTransParent"],[338,72,319,70],[339,4,320,2],[339,11,320,9,"useAsParent"],[339,22,320,20],[339,38,320,23],[339,42,320,23,"createElement"],[339,48,320,36],[339,49,320,36,"createElement"],[339,62,320,36],[339,64,320,37,"useAsParent"],[339,75,320,48],[339,77,320,50,"additionalProps"],[339,92,320,65],[339,94,320,67,"content"],[339,101,320,74],[339,102,320,75],[339,105,320,78,"content"],[339,112,320,85],[340,2,321,0],[341,0,321,1],[341,3]],"functionMap":{"names":["<global>","hasChildren","getChildren","hasValidReactChildren","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","keepArray.map$argument_0","getData","renderInner","pushTranslatedJSX","Children.map$argument_1","mapAST","astNodes.reduce$argument_0","fixComponentProps","Componentized","generateArrayComponents","components.map$argument_0","generateObjectComponents","Object.keys.forEach$argument_0","generateComponents","isComponentsMap","Object.keys.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;oBCK;CDK;oBEC;CFI;8BGC,qEH;mBIC,2CJ;mBKC;CLM;6BMC;wBCK;GDwD;CNE;oBQC;iFCG,kBD;kBEG;0BHE;KGG;GFC;sBGO;GHI;4BIC;wCCO;ODU;GJE;iBMC;2BCG;KD8D;GNC;CRM;0BgBC;ECQ;GDE;ChBI;gCkBC,4CC,sDD,ClB;iCoBC;kCCE;GDI;CpBE;2BsBC;CtBY;wBuBC;oCCG,yDD;CvBC;OyBC;gDCuB,MD"},"hasCjsExports":false},"type":"js/module"}]}