{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NotificationsEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":156,"index":207}}],"key":"Qab5cB8LewiAQY57MV0vxh0VKT8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useLastNotificationResponse;\n    }\n  });\n  Object.defineProperty(exports, \"determineNextResponse\", {\n    enumerable: true,\n    get: function () {\n      return determineNextResponse;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _NotificationsEmitter = require(_dependencyMap[1], \"./NotificationsEmitter\");\n  /**\n   * A React hook which returns the notification response that was received most recently\n   * (a notification response designates an interaction with a notification, such as tapping on it).\n   *\n   * To clear the last notification response, use [`clearLastNotificationResponseAsync()`](#notificationsclearlastnotificationresponseasync).\n   *\n   * > If you don't want to use a hook, you can use `Notifications.getLastNotificationResponseAsync()` instead.\n   *\n   * @return The hook may return one of these three types/values:\n   * - `undefined` - until we're sure of what to return,\n   * - `null` - if no notification response has been received yet,\n   * - a [`NotificationResponse`](#notificationresponse) object - if a notification response was received.\n   *\n   * @example\n   * Responding to a notification tap by opening a URL that could be put into the notification's `data`\n   * (opening the URL is your responsibility and is not a part of the `expo-notifications` API):\n   * ```jsx\n   * import * as Notifications from 'expo-notifications';\n   * import { Linking } from 'react-native';\n   *\n   * export default function App() {\n   *   const lastNotificationResponse = Notifications.useLastNotificationResponse();\n   *   React.useEffect(() => {\n   *     if (\n   *       lastNotificationResponse &&\n   *       lastNotificationResponse.notification.request.content.data.url &&\n   *       lastNotificationResponse.actionIdentifier === Notifications.DEFAULT_ACTION_IDENTIFIER\n   *     ) {\n   *       Linking.openURL(lastNotificationResponse.notification.request.content.data.url);\n   *     }\n   *   }, [lastNotificationResponse]);\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   * @header listen\n   */\n  function useLastNotificationResponse() {\n    const [lastNotificationResponse, setLastNotificationResponse] = (0, _react.useState)(undefined);\n    // useLayoutEffect ensures the listener is registered as soon as possible\n    (0, _react.useLayoutEffect)(() => {\n      let isMounted = true;\n      // Get the last response first, in case it was set earlier (even in native code on startup)\n      (0, _NotificationsEmitter.getLastNotificationResponseAsync)().then(response => {\n        if (isMounted) {\n          setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response));\n        }\n      });\n      // Set up listener for responses that come in, and set the last response if needed\n      const subscription = (0, _NotificationsEmitter.addNotificationResponseReceivedListener)(response => setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response)));\n      const clearResponseSubscription = (0, _NotificationsEmitter.addNotificationResponseClearedListener)(() => {\n        setLastNotificationResponse(null);\n      });\n      return () => {\n        isMounted = false;\n        subscription.remove();\n        clearResponseSubscription.remove();\n      };\n    }, []);\n    return lastNotificationResponse;\n  }\n  // returns the new response if it is different from the previous,\n  // also has to return undefined until we're sure of what to return (null or a response)\n  // the transition from response to null is invalid\n  const determineNextResponse = (prevResponse, newResponse) => {\n    if (!newResponse) {\n      return null;\n    }\n    if (!prevResponse) {\n      return newResponse;\n    }\n    return prevResponse.notification.request.identifier !== newResponse.notification.request.identifier ? newResponse : prevResponse;\n  };\n});","lineCount":95,"map":[[7,2,41,15,"Object"],[7,8,41,15],[7,9,41,15,"defineProperty"],[7,23,41,15],[7,24,41,15,"exports"],[7,31,41,15],[8,4,41,15,"enumerable"],[8,14,41,15],[9,4,41,15,"get"],[9,7,41,15],[9,18,41,15,"get"],[9,19,41,15],[10,6,41,15],[10,13,41,15,"useLastNotificationResponse"],[10,40,41,15],[11,4,41,15],[12,2,41,15],[13,2,68,0,"Object"],[13,8,68,0],[13,9,68,0,"defineProperty"],[13,23,68,0],[13,24,68,0,"exports"],[13,31,68,0],[14,4,68,0,"enumerable"],[14,14,68,0],[15,4,68,0,"get"],[15,7,68,0],[15,18,68,0,"get"],[15,19,68,0],[16,6,68,0],[16,13,68,0,"determineNextResponse"],[16,34,68,0],[17,4,68,0],[18,2,68,0],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,2,0],[20,6,2,0,"_NotificationsEmitter"],[20,27,2,0],[20,30,2,0,"require"],[20,37,2,0],[20,38,2,0,"_dependencyMap"],[20,52,2,0],[21,2,3,0],[22,0,4,0],[23,0,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[27,0,9,0],[28,0,10,0],[29,0,11,0],[30,0,12,0],[31,0,13,0],[32,0,14,0],[33,0,15,0],[34,0,16,0],[35,0,17,0],[36,0,18,0],[37,0,19,0],[38,0,20,0],[39,0,21,0],[40,0,22,0],[41,0,23,0],[42,0,24,0],[43,0,25,0],[44,0,26,0],[45,0,27,0],[46,0,28,0],[47,0,29,0],[48,0,30,0],[49,0,31,0],[50,0,32,0],[51,0,33,0],[52,0,34,0],[53,0,35,0],[54,0,36,0],[55,0,37,0],[56,0,38,0],[57,0,39,0],[58,0,40,0],[59,2,41,15],[59,11,41,24,"useLastNotificationResponse"],[59,38,41,51,"useLastNotificationResponse"],[59,39,41,51],[59,41,41,54],[60,4,42,4],[60,10,42,10],[60,11,42,11,"lastNotificationResponse"],[60,35,42,35],[60,37,42,37,"setLastNotificationResponse"],[60,64,42,64],[60,65,42,65],[60,68,42,68],[60,72,42,68,"useState"],[60,78,42,76],[60,79,42,76,"useState"],[60,87,42,76],[60,89,42,77,"undefined"],[60,98,42,86],[60,99,42,87],[61,4,43,4],[62,4,44,4],[62,8,44,4,"useLayoutEffect"],[62,14,44,19],[62,15,44,19,"useLayoutEffect"],[62,30,44,19],[62,32,44,20],[62,38,44,26],[63,6,45,8],[63,10,45,12,"isMounted"],[63,19,45,21],[63,22,45,24],[63,26,45,28],[64,6,46,8],[65,6,47,8],[65,10,47,8,"getLastNotificationResponseAsync"],[65,31,47,40],[65,32,47,40,"getLastNotificationResponseAsync"],[65,64,47,40],[65,66,47,41],[65,67,47,42],[65,68,47,43,"then"],[65,72,47,47],[65,73,47,49,"response"],[65,81,47,57],[65,85,47,62],[66,8,48,12],[66,12,48,16,"isMounted"],[66,21,48,25],[66,23,48,27],[67,10,49,16,"setLastNotificationResponse"],[67,37,49,43],[67,38,49,45,"prevResponse"],[67,50,49,57],[67,54,49,62,"determineNextResponse"],[67,75,49,83],[67,76,49,84,"prevResponse"],[67,88,49,96],[67,90,49,98,"response"],[67,98,49,106],[67,99,49,107],[67,100,49,108],[68,8,50,12],[69,6,51,8],[69,7,51,9],[69,8,51,10],[70,6,52,8],[71,6,53,8],[71,12,53,14,"subscription"],[71,24,53,26],[71,27,53,29],[71,31,53,29,"addNotificationResponseReceivedListener"],[71,52,53,68],[71,53,53,68,"addNotificationResponseReceivedListener"],[71,92,53,68],[71,94,53,70,"response"],[71,102,53,78],[71,106,53,83,"setLastNotificationResponse"],[71,133,53,110],[71,134,53,112,"prevResponse"],[71,146,53,124],[71,150,53,129,"determineNextResponse"],[71,171,53,150],[71,172,53,151,"prevResponse"],[71,184,53,163],[71,186,53,165,"response"],[71,194,53,173],[71,195,53,174],[71,196,53,175],[71,197,53,176],[72,6,54,8],[72,12,54,14,"clearResponseSubscription"],[72,37,54,39],[72,40,54,42],[72,44,54,42,"addNotificationResponseClearedListener"],[72,65,54,80],[72,66,54,80,"addNotificationResponseClearedListener"],[72,104,54,80],[72,106,54,81],[72,112,54,87],[73,8,55,12,"setLastNotificationResponse"],[73,35,55,39],[73,36,55,40],[73,40,55,44],[73,41,55,45],[74,6,56,8],[74,7,56,9],[74,8,56,10],[75,6,57,8],[75,13,57,15],[75,19,57,21],[76,8,58,12,"isMounted"],[76,17,58,21],[76,20,58,24],[76,25,58,29],[77,8,59,12,"subscription"],[77,20,59,24],[77,21,59,25,"remove"],[77,27,59,31],[77,28,59,32],[77,29,59,33],[78,8,60,12,"clearResponseSubscription"],[78,33,60,37],[78,34,60,38,"remove"],[78,40,60,44],[78,41,60,45],[78,42,60,46],[79,6,61,8],[79,7,61,9],[80,4,62,4],[80,5,62,5],[80,7,62,7],[80,9,62,9],[80,10,62,10],[81,4,63,4],[81,11,63,11,"lastNotificationResponse"],[81,35,63,35],[82,2,64,0],[83,2,65,0],[84,2,66,0],[85,2,67,0],[86,2,68,7],[86,8,68,13,"determineNextResponse"],[86,29,68,34],[86,32,68,37,"determineNextResponse"],[86,33,68,38,"prevResponse"],[86,45,68,50],[86,47,68,52,"newResponse"],[86,58,68,63],[86,63,68,68],[87,4,69,4],[87,8,69,8],[87,9,69,9,"newResponse"],[87,20,69,20],[87,22,69,22],[88,6,70,8],[88,13,70,15],[88,17,70,19],[89,4,71,4],[90,4,72,4],[90,8,72,8],[90,9,72,9,"prevResponse"],[90,21,72,21],[90,23,72,23],[91,6,73,8],[91,13,73,15,"newResponse"],[91,24,73,26],[92,4,74,4],[93,4,75,4],[93,11,75,11,"prevResponse"],[93,23,75,23],[93,24,75,24,"notification"],[93,36,75,36],[93,37,75,37,"request"],[93,44,75,44],[93,45,75,45,"identifier"],[93,55,75,55],[93,60,76,8,"newResponse"],[93,71,76,19],[93,72,76,20,"notification"],[93,84,76,32],[93,85,76,33,"request"],[93,92,76,40],[93,93,76,41,"identifier"],[93,103,76,51],[93,106,77,10,"newResponse"],[93,117,77,21],[93,120,78,10,"prevResponse"],[93,132,78,22],[94,2,79,0],[94,3,79,1],[95,0,79,2],[95,3]],"functionMap":{"names":["<global>","useLastNotificationResponse","useLayoutEffect$argument_0","getLastNotificationResponseAsync.then$argument_0","setLastNotificationResponse$argument_0","addNotificationResponseReceivedListener$argument_0","addNotificationResponseClearedListener$argument_0","<anonymous>","determineNextResponse"],"mappings":"AAA;eCwC;oBCG;gDCG;4CCE,+DD;SDE;qEGE,0CD,+DC,CH;iFIC;SJE;eKC;SLI;KDC;CDE;qCQI;CRW"},"hasCjsExports":false},"type":"js/module"}]}