{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-speech","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"oRtXPi6t9Yot/eM8qe4zSiHoBtA=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":80},"end":{"line":3,"column":69,"index":149}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.voiceService = exports.default = void 0;\n  var Speech = _interopRequireWildcard(require(_dependencyMap[1], \"expo-speech\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[3], \"@react-native-async-storage/async-storage\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  class VoiceService {\n    defaultSettings = {\n      enabled: false,\n      // Default off - requires user consent\n      rate: 0.98,\n      // Slightly slower for warmth\n      pitch: 1.02,\n      // Slightly higher for friendliness\n      language: 'en-US',\n      volume: 0.8\n    };\n    currentSettings = Object.assign({}, this.defaultSettings);\n    isInitialized = false;\n    constructor() {\n      this.initializeSettings();\n    }\n    static getInstance() {\n      if (!VoiceService.instance) {\n        VoiceService.instance = new VoiceService();\n      }\n      return VoiceService.instance;\n    }\n    async initializeSettings() {\n      try {\n        const savedSettings = await _asyncStorage.default.getItem('aisle_voice_settings');\n        if (savedSettings) {\n          this.currentSettings = Object.assign({}, this.defaultSettings, JSON.parse(savedSettings));\n        }\n        this.isInitialized = true;\n      } catch (error) {\n        console.error('Failed to load voice settings:', error);\n        this.isInitialized = true;\n      }\n    }\n    async saveSettings() {\n      try {\n        await _asyncStorage.default.setItem('aisle_voice_settings', JSON.stringify(this.currentSettings));\n      } catch (error) {\n        console.error('Failed to save voice settings:', error);\n      }\n    }\n\n    /**\n     * Enable voice mode with user consent\n     */\n    async enableVoice() {\n      if (!this.isInitialized) {\n        await this.initializeSettings();\n      }\n      this.currentSettings.enabled = true;\n      await this.saveSettings();\n      return true;\n    }\n\n    /**\n     * Disable voice mode\n     */\n    async disableVoice() {\n      this.currentSettings.enabled = false;\n      await this.saveSettings();\n      await this.stopSpeaking();\n    }\n\n    /**\n     * Check if voice is enabled\n     */\n    isVoiceEnabled() {\n      return this.currentSettings.enabled;\n    }\n\n    /**\n     * Get current voice settings\n     */\n    getSettings() {\n      return Object.assign({}, this.currentSettings);\n    }\n\n    /**\n     * Update voice settings\n     */\n    async updateSettings(newSettings) {\n      this.currentSettings = Object.assign({}, this.currentSettings, newSettings);\n      await this.saveSettings();\n    }\n\n    /**\n     * Main method to make Aisle speak\n     */\n    async speakAisle(text, options) {\n      const {\n        priority = 'normal',\n        skipIfDisabled = true\n      } = options || {};\n\n      // Check if voice is enabled\n      if (!this.currentSettings.enabled && skipIfDisabled) {\n        return;\n      }\n\n      // Platform check\n      if (_Platform.default.OS === 'web') {\n        console.log('Voice not available on web platform');\n        return;\n      }\n\n      // Check system volume/silent mode (iOS)\n      if (_Platform.default.OS === 'ios') {\n        try {\n          const isSilent = await this.isSystemSilent();\n          if (isSilent && priority !== 'high') {\n            console.log('System is in silent mode, skipping speech');\n            return;\n          }\n        } catch (error) {\n          console.warn('Could not check silent mode:', error);\n        }\n      }\n\n      // Stop any current speech\n      await this.stopSpeaking();\n\n      // Prepare speech options\n      const speechOptions = {\n        language: this.currentSettings.language,\n        pitch: this.currentSettings.pitch,\n        rate: this.currentSettings.rate,\n        volume: this.currentSettings.volume,\n        onStart: () => {\n          console.log('Aisle started speaking');\n        },\n        onDone: () => {\n          console.log('Aisle finished speaking');\n          // Track completion metric\n          this.trackSpeechMetric('completed', text.length);\n        },\n        onStopped: () => {\n          console.log('Aisle speech stopped');\n        },\n        onError: error => {\n          console.error('Aisle speech error:', error);\n          this.trackSpeechMetric('error', text.length);\n        }\n      };\n      try {\n        await Speech.speak(text, speechOptions);\n        this.trackSpeechMetric('started', text.length);\n      } catch (error) {\n        console.error('Speech failed:', error);\n      }\n    }\n\n    /**\n     * Stop current speech\n     */\n    async stopSpeaking() {\n      try {\n        await Speech.stop();\n      } catch (error) {\n        console.error('Failed to stop speech:', error);\n      }\n    }\n\n    /**\n     * Check if Aisle is currently speaking\n     */\n    async isSpeaking() {\n      try {\n        return await Speech.isSpeakingAsync();\n      } catch (error) {\n        console.error('Failed to check speech status:', error);\n        return false;\n      }\n    }\n\n    /**\n     * Get available voices (for advanced settings)\n     */\n    async getAvailableVoices() {\n      try {\n        if (_Platform.default.OS === 'web') return [];\n        return await Speech.getAvailableVoicesAsync();\n      } catch (error) {\n        console.error('Failed to get available voices:', error);\n        return [];\n      }\n    }\n\n    /**\n     * Check if system is in silent mode (iOS only)\n     */\n    async isSystemSilent() {\n      // This would need a native module for proper implementation\n      // For now, we'll assume not silent\n      return false;\n    }\n\n    /**\n     * Track speech metrics\n     */\n    trackSpeechMetric(event, textLength) {\n      // In a real app, this would send analytics\n      console.log(`Voice metric - ${event}: ${textLength} characters`);\n    }\n\n    /**\n     * Aisle-specific greeting with warmth\n     */\n    async speakGreeting(greeting) {\n      const warmGreeting = this.addWarmth(greeting);\n      await this.speakAisle(warmGreeting, {\n        priority: 'normal'\n      });\n    }\n\n    /**\n     * Aisle-specific insight with enthusiasm\n     */\n    async speakInsight(insight) {\n      const enthusiasticInsight = this.addEnthusiasm(insight);\n      await this.speakAisle(enthusiasticInsight, {\n        priority: 'low'\n      });\n    }\n\n    /**\n     * Welcome message with special warmth\n     */\n    async speakWelcome() {\n      const welcomeMessage = \"Hi, I'm Aisle. I'm here to help you succeed today.\";\n      await this.speakAisle(welcomeMessage, {\n        priority: 'high',\n        skipIfDisabled: false\n      });\n    }\n\n    /**\n     * Add warmth to text for speech\n     */\n    addWarmth(text) {\n      // Add natural pauses and warmth cues\n      return text.replace(/\\./g, '... ') // Add pauses after sentences\n      .replace(/!/g, '! ') // Excitement pauses\n      .replace(/\\?/g, '? '); // Question pauses\n    }\n\n    /**\n     * Add enthusiasm to insights\n     */\n    addEnthusiasm(text) {\n      // Make insights sound more conversational\n      const enthusiasticPrefixes = [\"Here's something interesting: \", \"I discovered: \", \"Good news: \", \"Here's what I found: \"];\n      const prefix = enthusiasticPrefixes[Math.floor(Math.random() * enthusiasticPrefixes.length)];\n      return prefix + text;\n    }\n\n    /**\n     * Request voice permission from user\n     */\n    async requestVoicePermission() {\n      // This would typically show a modal or alert\n      // For now, we'll return a structure that the UI can use\n      return {\n        granted: false,\n        // Will be set by UI component\n        message: \"Let Aisle speak? I can provide audio guidance and read insights aloud.\"\n      };\n    }\n  }\n\n  // Export singleton instance\n  const voiceService = exports.voiceService = VoiceService.getInstance();\n  var _default = exports.default = voiceService;\n});","lineCount":283,"map":[[7,2,1,0],[7,6,1,0,"Speech"],[7,12,1,0],[7,15,1,0,"_interopRequireWildcard"],[7,38,1,0],[7,39,1,0,"require"],[7,46,1,0],[7,47,1,0,"_dependencyMap"],[7,61,1,0],[8,2,1,38],[8,6,1,38,"_Platform"],[8,15,1,38],[8,18,1,38,"_interopRequireDefault"],[8,40,1,38],[8,41,1,38,"require"],[8,48,1,38],[8,49,1,38,"_dependencyMap"],[8,63,1,38],[9,2,3,0],[9,6,3,0,"_asyncStorage"],[9,19,3,0],[9,22,3,0,"_interopRequireDefault"],[9,44,3,0],[9,45,3,0,"require"],[9,52,3,0],[9,53,3,0,"_dependencyMap"],[9,67,3,0],[10,2,3,69],[10,11,3,69,"_interopRequireWildcard"],[10,35,3,69,"e"],[10,36,3,69],[10,38,3,69,"t"],[10,39,3,69],[10,68,3,69,"WeakMap"],[10,75,3,69],[10,81,3,69,"r"],[10,82,3,69],[10,89,3,69,"WeakMap"],[10,96,3,69],[10,100,3,69,"n"],[10,101,3,69],[10,108,3,69,"WeakMap"],[10,115,3,69],[10,127,3,69,"_interopRequireWildcard"],[10,150,3,69],[10,162,3,69,"_interopRequireWildcard"],[10,163,3,69,"e"],[10,164,3,69],[10,166,3,69,"t"],[10,167,3,69],[10,176,3,69,"t"],[10,177,3,69],[10,181,3,69,"e"],[10,182,3,69],[10,186,3,69,"e"],[10,187,3,69],[10,188,3,69,"__esModule"],[10,198,3,69],[10,207,3,69,"e"],[10,208,3,69],[10,214,3,69,"o"],[10,215,3,69],[10,217,3,69,"i"],[10,218,3,69],[10,220,3,69,"f"],[10,221,3,69],[10,226,3,69,"__proto__"],[10,235,3,69],[10,243,3,69,"default"],[10,250,3,69],[10,252,3,69,"e"],[10,253,3,69],[10,270,3,69,"e"],[10,271,3,69],[10,294,3,69,"e"],[10,295,3,69],[10,320,3,69,"e"],[10,321,3,69],[10,330,3,69,"f"],[10,331,3,69],[10,337,3,69,"o"],[10,338,3,69],[10,341,3,69,"t"],[10,342,3,69],[10,345,3,69,"n"],[10,346,3,69],[10,349,3,69,"r"],[10,350,3,69],[10,358,3,69,"o"],[10,359,3,69],[10,360,3,69,"has"],[10,363,3,69],[10,364,3,69,"e"],[10,365,3,69],[10,375,3,69,"o"],[10,376,3,69],[10,377,3,69,"get"],[10,380,3,69],[10,381,3,69,"e"],[10,382,3,69],[10,385,3,69,"o"],[10,386,3,69],[10,387,3,69,"set"],[10,390,3,69],[10,391,3,69,"e"],[10,392,3,69],[10,394,3,69,"f"],[10,395,3,69],[10,411,3,69,"t"],[10,412,3,69],[10,416,3,69,"e"],[10,417,3,69],[10,433,3,69,"t"],[10,434,3,69],[10,441,3,69,"hasOwnProperty"],[10,455,3,69],[10,456,3,69,"call"],[10,460,3,69],[10,461,3,69,"e"],[10,462,3,69],[10,464,3,69,"t"],[10,465,3,69],[10,472,3,69,"i"],[10,473,3,69],[10,477,3,69,"o"],[10,478,3,69],[10,481,3,69,"Object"],[10,487,3,69],[10,488,3,69,"defineProperty"],[10,502,3,69],[10,507,3,69,"Object"],[10,513,3,69],[10,514,3,69,"getOwnPropertyDescriptor"],[10,538,3,69],[10,539,3,69,"e"],[10,540,3,69],[10,542,3,69,"t"],[10,543,3,69],[10,550,3,69,"i"],[10,551,3,69],[10,552,3,69,"get"],[10,555,3,69],[10,559,3,69,"i"],[10,560,3,69],[10,561,3,69,"set"],[10,564,3,69],[10,568,3,69,"o"],[10,569,3,69],[10,570,3,69,"f"],[10,571,3,69],[10,573,3,69,"t"],[10,574,3,69],[10,576,3,69,"i"],[10,577,3,69],[10,581,3,69,"f"],[10,582,3,69],[10,583,3,69,"t"],[10,584,3,69],[10,588,3,69,"e"],[10,589,3,69],[10,590,3,69,"t"],[10,591,3,69],[10,602,3,69,"f"],[10,603,3,69],[10,608,3,69,"e"],[10,609,3,69],[10,611,3,69,"t"],[10,612,3,69],[11,2,13,0],[11,8,13,6,"VoiceService"],[11,20,13,18],[11,21,13,19],[12,4,15,10,"defaultSettings"],[12,19,15,25],[12,22,15,43],[13,6,16,4,"enabled"],[13,13,16,11],[13,15,16,13],[13,20,16,18],[14,6,16,20],[15,6,17,4,"rate"],[15,10,17,8],[15,12,17,10],[15,16,17,14],[16,6,17,16],[17,6,18,4,"pitch"],[17,11,18,9],[17,13,18,11],[17,17,18,15],[18,6,18,17],[19,6,19,4,"language"],[19,14,19,12],[19,16,19,14],[19,23,19,21],[20,6,20,4,"volume"],[20,12,20,10],[20,14,20,12],[21,4,21,2],[21,5,21,3],[22,4,23,10,"currentSettings"],[22,19,23,25],[22,22,23,25,"Object"],[22,28,23,25],[22,29,23,25,"assign"],[22,35,23,25],[22,40,23,48],[22,44,23,52],[22,45,23,53,"defaultSettings"],[22,60,23,68],[23,4,24,10,"isInitialized"],[23,17,24,23],[23,20,24,26],[23,25,24,31],[24,4,26,10,"constructor"],[24,15,26,21,"constructor"],[24,16,26,21],[24,18,26,24],[25,6,27,4],[25,10,27,8],[25,11,27,9,"initializeSettings"],[25,29,27,27],[25,30,27,28],[25,31,27,29],[26,4,28,2],[27,4,30,2],[27,11,30,16,"getInstance"],[27,22,30,27,"getInstance"],[27,23,30,27],[27,25,30,44],[28,6,31,4],[28,10,31,8],[28,11,31,9,"VoiceService"],[28,23,31,21],[28,24,31,22,"instance"],[28,32,31,30],[28,34,31,32],[29,8,32,6,"VoiceService"],[29,20,32,18],[29,21,32,19,"instance"],[29,29,32,27],[29,32,32,30],[29,36,32,34,"VoiceService"],[29,48,32,46],[29,49,32,47],[29,50,32,48],[30,6,33,4],[31,6,34,4],[31,13,34,11,"VoiceService"],[31,25,34,23],[31,26,34,24,"instance"],[31,34,34,32],[32,4,35,2],[33,4,37,2],[33,10,37,16,"initializeSettings"],[33,28,37,34,"initializeSettings"],[33,29,37,34],[33,31,37,37],[34,6,38,4],[34,10,38,8],[35,8,39,6],[35,14,39,12,"savedSettings"],[35,27,39,25],[35,30,39,28],[35,36,39,34,"AsyncStorage"],[35,57,39,46],[35,58,39,47,"getItem"],[35,65,39,54],[35,66,39,55],[35,88,39,77],[35,89,39,78],[36,8,40,6],[36,12,40,10,"savedSettings"],[36,25,40,23],[36,27,40,25],[37,10,41,8],[37,14,41,12],[37,15,41,13,"currentSettings"],[37,30,41,28],[37,33,41,28,"Object"],[37,39,41,28],[37,40,41,28,"assign"],[37,46,41,28],[37,51,41,36],[37,55,41,40],[37,56,41,41,"defaultSettings"],[37,71,41,56],[37,73,41,61,"JSON"],[37,77,41,65],[37,78,41,66,"parse"],[37,83,41,71],[37,84,41,72,"savedSettings"],[37,97,41,85],[37,98,41,86],[37,99,41,88],[38,8,42,6],[39,8,43,6],[39,12,43,10],[39,13,43,11,"isInitialized"],[39,26,43,24],[39,29,43,27],[39,33,43,31],[40,6,44,4],[40,7,44,5],[40,8,44,6],[40,15,44,13,"error"],[40,20,44,18],[40,22,44,20],[41,8,45,6,"console"],[41,15,45,13],[41,16,45,14,"error"],[41,21,45,19],[41,22,45,20],[41,54,45,52],[41,56,45,54,"error"],[41,61,45,59],[41,62,45,60],[42,8,46,6],[42,12,46,10],[42,13,46,11,"isInitialized"],[42,26,46,24],[42,29,46,27],[42,33,46,31],[43,6,47,4],[44,4,48,2],[45,4,50,2],[45,10,50,16,"saveSettings"],[45,22,50,28,"saveSettings"],[45,23,50,28],[45,25,50,31],[46,6,51,4],[46,10,51,8],[47,8,52,6],[47,14,52,12,"AsyncStorage"],[47,35,52,24],[47,36,52,25,"setItem"],[47,43,52,32],[47,44,52,33],[47,66,52,55],[47,68,52,57,"JSON"],[47,72,52,61],[47,73,52,62,"stringify"],[47,82,52,71],[47,83,52,72],[47,87,52,76],[47,88,52,77,"currentSettings"],[47,103,52,92],[47,104,52,93],[47,105,52,94],[48,6,53,4],[48,7,53,5],[48,8,53,6],[48,15,53,13,"error"],[48,20,53,18],[48,22,53,20],[49,8,54,6,"console"],[49,15,54,13],[49,16,54,14,"error"],[49,21,54,19],[49,22,54,20],[49,54,54,52],[49,56,54,54,"error"],[49,61,54,59],[49,62,54,60],[50,6,55,4],[51,4,56,2],[53,4,58,2],[54,0,59,0],[55,0,60,0],[56,4,61,2],[56,10,61,8,"enableVoice"],[56,21,61,19,"enableVoice"],[56,22,61,19],[56,24,61,40],[57,6,62,4],[57,10,62,8],[57,11,62,9],[57,15,62,13],[57,16,62,14,"isInitialized"],[57,29,62,27],[57,31,62,29],[58,8,63,6],[58,14,63,12],[58,18,63,16],[58,19,63,17,"initializeSettings"],[58,37,63,35],[58,38,63,36],[58,39,63,37],[59,6,64,4],[60,6,66,4],[60,10,66,8],[60,11,66,9,"currentSettings"],[60,26,66,24],[60,27,66,25,"enabled"],[60,34,66,32],[60,37,66,35],[60,41,66,39],[61,6,67,4],[61,12,67,10],[61,16,67,14],[61,17,67,15,"saveSettings"],[61,29,67,27],[61,30,67,28],[61,31,67,29],[62,6,68,4],[62,13,68,11],[62,17,68,15],[63,4,69,2],[65,4,71,2],[66,0,72,0],[67,0,73,0],[68,4,74,2],[68,10,74,8,"disableVoice"],[68,22,74,20,"disableVoice"],[68,23,74,20],[68,25,74,38],[69,6,75,4],[69,10,75,8],[69,11,75,9,"currentSettings"],[69,26,75,24],[69,27,75,25,"enabled"],[69,34,75,32],[69,37,75,35],[69,42,75,40],[70,6,76,4],[70,12,76,10],[70,16,76,14],[70,17,76,15,"saveSettings"],[70,29,76,27],[70,30,76,28],[70,31,76,29],[71,6,77,4],[71,12,77,10],[71,16,77,14],[71,17,77,15,"stopSpeaking"],[71,29,77,27],[71,30,77,28],[71,31,77,29],[72,4,78,2],[74,4,80,2],[75,0,81,0],[76,0,82,0],[77,4,83,2,"isVoiceEnabled"],[77,18,83,16,"isVoiceEnabled"],[77,19,83,16],[77,21,83,28],[78,6,84,4],[78,13,84,11],[78,17,84,15],[78,18,84,16,"currentSettings"],[78,33,84,31],[78,34,84,32,"enabled"],[78,41,84,39],[79,4,85,2],[81,4,87,2],[82,0,88,0],[83,0,89,0],[84,4,90,2,"getSettings"],[84,15,90,13,"getSettings"],[84,16,90,13],[84,18,90,31],[85,6,91,4],[85,13,91,4,"Object"],[85,19,91,4],[85,20,91,4,"assign"],[85,26,91,4],[85,31,91,16],[85,35,91,20],[85,36,91,21,"currentSettings"],[85,51,91,36],[86,4,92,2],[88,4,94,2],[89,0,95,0],[90,0,96,0],[91,4,97,2],[91,10,97,8,"updateSettings"],[91,24,97,22,"updateSettings"],[91,25,97,23,"newSettings"],[91,36,97,58],[91,38,97,75],[92,6,98,4],[92,10,98,8],[92,11,98,9,"currentSettings"],[92,26,98,24],[92,29,98,24,"Object"],[92,35,98,24],[92,36,98,24,"assign"],[92,42,98,24],[92,47,98,32],[92,51,98,36],[92,52,98,37,"currentSettings"],[92,67,98,52],[92,69,98,57,"newSettings"],[92,80,98,68],[92,81,98,70],[93,6,99,4],[93,12,99,10],[93,16,99,14],[93,17,99,15,"saveSettings"],[93,29,99,27],[93,30,99,28],[93,31,99,29],[94,4,100,2],[96,4,102,2],[97,0,103,0],[98,0,104,0],[99,4,105,2],[99,10,105,8,"speakAisle"],[99,20,105,18,"speakAisle"],[99,21,105,19,"text"],[99,25,105,31],[99,27,105,33,"options"],[99,34,108,3],[99,36,108,20],[100,6,109,4],[100,12,109,10],[101,8,109,12,"priority"],[101,16,109,20],[101,19,109,23],[101,27,109,31],[102,8,109,33,"skipIfDisabled"],[102,22,109,47],[102,25,109,50],[103,6,109,55],[103,7,109,56],[103,10,109,59,"options"],[103,17,109,66],[103,21,109,70],[103,22,109,71],[103,23,109,72],[105,6,111,4],[106,6,112,4],[106,10,112,8],[106,11,112,9],[106,15,112,13],[106,16,112,14,"currentSettings"],[106,31,112,29],[106,32,112,30,"enabled"],[106,39,112,37],[106,43,112,41,"skipIfDisabled"],[106,57,112,55],[106,59,112,57],[107,8,113,6],[108,6,114,4],[110,6,116,4],[111,6,117,4],[111,10,117,8,"Platform"],[111,27,117,16],[111,28,117,17,"OS"],[111,30,117,19],[111,35,117,24],[111,40,117,29],[111,42,117,31],[112,8,118,6,"console"],[112,15,118,13],[112,16,118,14,"log"],[112,19,118,17],[112,20,118,18],[112,57,118,55],[112,58,118,56],[113,8,119,6],[114,6,120,4],[116,6,122,4],[117,6,123,4],[117,10,123,8,"Platform"],[117,27,123,16],[117,28,123,17,"OS"],[117,30,123,19],[117,35,123,24],[117,40,123,29],[117,42,123,31],[118,8,124,6],[118,12,124,10],[119,10,125,8],[119,16,125,14,"isSilent"],[119,24,125,22],[119,27,125,25],[119,33,125,31],[119,37,125,35],[119,38,125,36,"isSystemSilent"],[119,52,125,50],[119,53,125,51],[119,54,125,52],[120,10,126,8],[120,14,126,12,"isSilent"],[120,22,126,20],[120,26,126,24,"priority"],[120,34,126,32],[120,39,126,37],[120,45,126,43],[120,47,126,45],[121,12,127,10,"console"],[121,19,127,17],[121,20,127,18,"log"],[121,23,127,21],[121,24,127,22],[121,67,127,65],[121,68,127,66],[122,12,128,10],[123,10,129,8],[124,8,130,6],[124,9,130,7],[124,10,130,8],[124,17,130,15,"error"],[124,22,130,20],[124,24,130,22],[125,10,131,8,"console"],[125,17,131,15],[125,18,131,16,"warn"],[125,22,131,20],[125,23,131,21],[125,53,131,51],[125,55,131,53,"error"],[125,60,131,58],[125,61,131,59],[126,8,132,6],[127,6,133,4],[129,6,135,4],[130,6,136,4],[130,12,136,10],[130,16,136,14],[130,17,136,15,"stopSpeaking"],[130,29,136,27],[130,30,136,28],[130,31,136,29],[132,6,138,4],[133,6,139,4],[133,12,139,10,"speechOptions"],[133,25,139,45],[133,28,139,48],[134,8,140,6,"language"],[134,16,140,14],[134,18,140,16],[134,22,140,20],[134,23,140,21,"currentSettings"],[134,38,140,36],[134,39,140,37,"language"],[134,47,140,45],[135,8,141,6,"pitch"],[135,13,141,11],[135,15,141,13],[135,19,141,17],[135,20,141,18,"currentSettings"],[135,35,141,33],[135,36,141,34,"pitch"],[135,41,141,39],[136,8,142,6,"rate"],[136,12,142,10],[136,14,142,12],[136,18,142,16],[136,19,142,17,"currentSettings"],[136,34,142,32],[136,35,142,33,"rate"],[136,39,142,37],[137,8,143,6,"volume"],[137,14,143,12],[137,16,143,14],[137,20,143,18],[137,21,143,19,"currentSettings"],[137,36,143,34],[137,37,143,35,"volume"],[137,43,143,41],[138,8,144,6,"onStart"],[138,15,144,13],[138,17,144,15,"onStart"],[138,18,144,15],[138,23,144,21],[139,10,145,8,"console"],[139,17,145,15],[139,18,145,16,"log"],[139,21,145,19],[139,22,145,20],[139,46,145,44],[139,47,145,45],[140,8,146,6],[140,9,146,7],[141,8,147,6,"onDone"],[141,14,147,12],[141,16,147,14,"onDone"],[141,17,147,14],[141,22,147,20],[142,10,148,8,"console"],[142,17,148,15],[142,18,148,16,"log"],[142,21,148,19],[142,22,148,20],[142,47,148,45],[142,48,148,46],[143,10,149,8],[144,10,150,8],[144,14,150,12],[144,15,150,13,"trackSpeechMetric"],[144,32,150,30],[144,33,150,31],[144,44,150,42],[144,46,150,44,"text"],[144,50,150,48],[144,51,150,49,"length"],[144,57,150,55],[144,58,150,56],[145,8,151,6],[145,9,151,7],[146,8,152,6,"onStopped"],[146,17,152,15],[146,19,152,17,"onStopped"],[146,20,152,17],[146,25,152,23],[147,10,153,8,"console"],[147,17,153,15],[147,18,153,16,"log"],[147,21,153,19],[147,22,153,20],[147,44,153,42],[147,45,153,43],[148,8,154,6],[148,9,154,7],[149,8,155,6,"onError"],[149,15,155,13],[149,17,155,16,"error"],[149,22,155,21],[149,26,155,26],[150,10,156,8,"console"],[150,17,156,15],[150,18,156,16,"error"],[150,23,156,21],[150,24,156,22],[150,45,156,43],[150,47,156,45,"error"],[150,52,156,50],[150,53,156,51],[151,10,157,8],[151,14,157,12],[151,15,157,13,"trackSpeechMetric"],[151,32,157,30],[151,33,157,31],[151,40,157,38],[151,42,157,40,"text"],[151,46,157,44],[151,47,157,45,"length"],[151,53,157,51],[151,54,157,52],[152,8,158,6],[153,6,159,4],[153,7,159,5],[154,6,161,4],[154,10,161,8],[155,8,162,6],[155,14,162,12,"Speech"],[155,20,162,18],[155,21,162,19,"speak"],[155,26,162,24],[155,27,162,25,"text"],[155,31,162,29],[155,33,162,31,"speechOptions"],[155,46,162,44],[155,47,162,45],[156,8,163,6],[156,12,163,10],[156,13,163,11,"trackSpeechMetric"],[156,30,163,28],[156,31,163,29],[156,40,163,38],[156,42,163,40,"text"],[156,46,163,44],[156,47,163,45,"length"],[156,53,163,51],[156,54,163,52],[157,6,164,4],[157,7,164,5],[157,8,164,6],[157,15,164,13,"error"],[157,20,164,18],[157,22,164,20],[158,8,165,6,"console"],[158,15,165,13],[158,16,165,14,"error"],[158,21,165,19],[158,22,165,20],[158,38,165,36],[158,40,165,38,"error"],[158,45,165,43],[158,46,165,44],[159,6,166,4],[160,4,167,2],[162,4,169,2],[163,0,170,0],[164,0,171,0],[165,4,172,2],[165,10,172,8,"stopSpeaking"],[165,22,172,20,"stopSpeaking"],[165,23,172,20],[165,25,172,38],[166,6,173,4],[166,10,173,8],[167,8,174,6],[167,14,174,12,"Speech"],[167,20,174,18],[167,21,174,19,"stop"],[167,25,174,23],[167,26,174,24],[167,27,174,25],[168,6,175,4],[168,7,175,5],[168,8,175,6],[168,15,175,13,"error"],[168,20,175,18],[168,22,175,20],[169,8,176,6,"console"],[169,15,176,13],[169,16,176,14,"error"],[169,21,176,19],[169,22,176,20],[169,46,176,44],[169,48,176,46,"error"],[169,53,176,51],[169,54,176,52],[170,6,177,4],[171,4,178,2],[173,4,180,2],[174,0,181,0],[175,0,182,0],[176,4,183,2],[176,10,183,8,"isSpeaking"],[176,20,183,18,"isSpeaking"],[176,21,183,18],[176,23,183,39],[177,6,184,4],[177,10,184,8],[178,8,185,6],[178,15,185,13],[178,21,185,19,"Speech"],[178,27,185,25],[178,28,185,26,"isSpeakingAsync"],[178,43,185,41],[178,44,185,42],[178,45,185,43],[179,6,186,4],[179,7,186,5],[179,8,186,6],[179,15,186,13,"error"],[179,20,186,18],[179,22,186,20],[180,8,187,6,"console"],[180,15,187,13],[180,16,187,14,"error"],[180,21,187,19],[180,22,187,20],[180,54,187,52],[180,56,187,54,"error"],[180,61,187,59],[180,62,187,60],[181,8,188,6],[181,15,188,13],[181,20,188,18],[182,6,189,4],[183,4,190,2],[185,4,192,2],[186,0,193,0],[187,0,194,0],[188,4,195,2],[188,10,195,8,"getAvailableVoices"],[188,28,195,26,"getAvailableVoices"],[188,29,195,26],[188,31,195,54],[189,6,196,4],[189,10,196,8],[190,8,197,6],[190,12,197,10,"Platform"],[190,29,197,18],[190,30,197,19,"OS"],[190,32,197,21],[190,37,197,26],[190,42,197,31],[190,44,197,33],[190,51,197,40],[190,53,197,42],[191,8,198,6],[191,15,198,13],[191,21,198,19,"Speech"],[191,27,198,25],[191,28,198,26,"getAvailableVoicesAsync"],[191,51,198,49],[191,52,198,50],[191,53,198,51],[192,6,199,4],[192,7,199,5],[192,8,199,6],[192,15,199,13,"error"],[192,20,199,18],[192,22,199,20],[193,8,200,6,"console"],[193,15,200,13],[193,16,200,14,"error"],[193,21,200,19],[193,22,200,20],[193,55,200,53],[193,57,200,55,"error"],[193,62,200,60],[193,63,200,61],[194,8,201,6],[194,15,201,13],[194,17,201,15],[195,6,202,4],[196,4,203,2],[198,4,205,2],[199,0,206,0],[200,0,207,0],[201,4,208,2],[201,10,208,16,"isSystemSilent"],[201,24,208,30,"isSystemSilent"],[201,25,208,30],[201,27,208,51],[202,6,209,4],[203,6,210,4],[204,6,211,4],[204,13,211,11],[204,18,211,16],[205,4,212,2],[207,4,214,2],[208,0,215,0],[209,0,216,0],[210,4,217,10,"trackSpeechMetric"],[210,21,217,27,"trackSpeechMetric"],[210,22,217,28,"event"],[210,27,217,68],[210,29,217,70,"textLength"],[210,39,217,88],[210,41,217,90],[211,6,218,4],[212,6,219,4,"console"],[212,13,219,11],[212,14,219,12,"log"],[212,17,219,15],[212,18,219,16],[212,36,219,34,"event"],[212,41,219,39],[212,46,219,44,"textLength"],[212,56,219,54],[212,69,219,67],[212,70,219,68],[213,4,220,2],[215,4,222,2],[216,0,223,0],[217,0,224,0],[218,4,225,2],[218,10,225,8,"speakGreeting"],[218,23,225,21,"speakGreeting"],[218,24,225,22,"greeting"],[218,32,225,38],[218,34,225,55],[219,6,226,4],[219,12,226,10,"warmGreeting"],[219,24,226,22],[219,27,226,25],[219,31,226,29],[219,32,226,30,"addWarmth"],[219,41,226,39],[219,42,226,40,"greeting"],[219,50,226,48],[219,51,226,49],[220,6,227,4],[220,12,227,10],[220,16,227,14],[220,17,227,15,"speakAisle"],[220,27,227,25],[220,28,227,26,"warmGreeting"],[220,40,227,38],[220,42,227,40],[221,8,227,42,"priority"],[221,16,227,50],[221,18,227,52],[222,6,227,61],[222,7,227,62],[222,8,227,63],[223,4,228,2],[225,4,230,2],[226,0,231,0],[227,0,232,0],[228,4,233,2],[228,10,233,8,"speakInsight"],[228,22,233,20,"speakInsight"],[228,23,233,21,"insight"],[228,30,233,36],[228,32,233,53],[229,6,234,4],[229,12,234,10,"enthusiasticInsight"],[229,31,234,29],[229,34,234,32],[229,38,234,36],[229,39,234,37,"addEnthusiasm"],[229,52,234,50],[229,53,234,51,"insight"],[229,60,234,58],[229,61,234,59],[230,6,235,4],[230,12,235,10],[230,16,235,14],[230,17,235,15,"speakAisle"],[230,27,235,25],[230,28,235,26,"enthusiasticInsight"],[230,47,235,45],[230,49,235,47],[231,8,235,49,"priority"],[231,16,235,57],[231,18,235,59],[232,6,235,65],[232,7,235,66],[232,8,235,67],[233,4,236,2],[235,4,238,2],[236,0,239,0],[237,0,240,0],[238,4,241,2],[238,10,241,8,"speakWelcome"],[238,22,241,20,"speakWelcome"],[238,23,241,20],[238,25,241,38],[239,6,242,4],[239,12,242,10,"welcomeMessage"],[239,26,242,24],[239,29,242,27],[239,81,242,79],[240,6,243,4],[240,12,243,10],[240,16,243,14],[240,17,243,15,"speakAisle"],[240,27,243,25],[240,28,243,26,"welcomeMessage"],[240,42,243,40],[240,44,243,42],[241,8,243,44,"priority"],[241,16,243,52],[241,18,243,54],[241,24,243,60],[242,8,243,62,"skipIfDisabled"],[242,22,243,76],[242,24,243,78],[243,6,243,84],[243,7,243,85],[243,8,243,86],[244,4,244,2],[246,4,246,2],[247,0,247,0],[248,0,248,0],[249,4,249,10,"addWarmth"],[249,13,249,19,"addWarmth"],[249,14,249,20,"text"],[249,18,249,32],[249,20,249,42],[250,6,250,4],[251,6,251,4],[251,13,251,11,"text"],[251,17,251,15],[251,18,252,7,"replace"],[251,25,252,14],[251,26,252,15],[251,31,252,20],[251,33,252,22],[251,39,252,28],[251,40,252,29],[251,41,252,30],[252,6,252,30],[252,7,253,7,"replace"],[252,14,253,14],[252,15,253,15],[252,19,253,19],[252,21,253,21],[252,25,253,25],[252,26,253,26],[252,27,253,27],[253,6,253,27],[253,7,254,7,"replace"],[253,14,254,14],[253,15,254,15],[253,20,254,20],[253,22,254,22],[253,26,254,26],[253,27,254,27],[253,28,254,28],[253,29,254,29],[254,4,255,2],[256,4,257,2],[257,0,258,0],[258,0,259,0],[259,4,260,10,"addEnthusiasm"],[259,17,260,23,"addEnthusiasm"],[259,18,260,24,"text"],[259,22,260,36],[259,24,260,46],[260,6,261,4],[261,6,262,4],[261,12,262,10,"enthusiasticPrefixes"],[261,32,262,30],[261,35,262,33],[261,36,263,6],[261,68,263,38],[261,70,264,6],[261,86,264,22],[261,88,265,6],[261,101,265,19],[261,103,266,6],[261,126,266,29],[261,127,267,5],[262,6,269,4],[262,12,269,10,"prefix"],[262,18,269,16],[262,21,269,19,"enthusiasticPrefixes"],[262,41,269,39],[262,42,269,40,"Math"],[262,46,269,44],[262,47,269,45,"floor"],[262,52,269,50],[262,53,269,51,"Math"],[262,57,269,55],[262,58,269,56,"random"],[262,64,269,62],[262,65,269,63],[262,66,269,64],[262,69,269,67,"enthusiasticPrefixes"],[262,89,269,87],[262,90,269,88,"length"],[262,96,269,94],[262,97,269,95],[262,98,269,96],[263,6,270,4],[263,13,270,11,"prefix"],[263,19,270,17],[263,22,270,20,"text"],[263,26,270,24],[264,4,271,2],[266,4,273,2],[267,0,274,0],[268,0,275,0],[269,4,276,2],[269,10,276,8,"requestVoicePermission"],[269,32,276,30,"requestVoicePermission"],[269,33,276,30],[269,35,276,81],[270,6,277,4],[271,6,278,4],[272,6,279,4],[272,13,279,11],[273,8,280,6,"granted"],[273,15,280,13],[273,17,280,15],[273,22,280,20],[274,8,280,22],[275,8,281,6,"message"],[275,15,281,13],[275,17,281,15],[276,6,282,4],[276,7,282,5],[277,4,283,2],[278,2,284,0],[280,2,286,0],[281,2,287,7],[281,8,287,13,"voiceService"],[281,20,287,25],[281,23,287,25,"exports"],[281,30,287,25],[281,31,287,25,"voiceService"],[281,43,287,25],[281,46,287,28,"VoiceService"],[281,58,287,40],[281,59,287,41,"getInstance"],[281,70,287,52],[281,71,287,53],[281,72,287,54],[282,2,287,55],[282,6,287,55,"_default"],[282,14,287,55],[282,17,287,55,"exports"],[282,24,287,55],[282,25,287,55,"default"],[282,32,287,55],[282,35,288,15,"voiceService"],[282,47,288,27],[283,0,288,27],[283,3]],"functionMap":{"names":["<global>","VoiceService","constructor","getInstance","initializeSettings","saveSettings","enableVoice","disableVoice","isVoiceEnabled","getSettings","updateSettings","speakAisle","speechOptions.onStart","speechOptions.onDone","speechOptions.onStopped","speechOptions.onError","stopSpeaking","isSpeaking","getAvailableVoices","isSystemSilent","trackSpeechMetric","speakGreeting","speakInsight","speakWelcome","addWarmth","addEnthusiasm","requestVoicePermission"],"mappings":"AAA;ACY;ECa;GDE;EEE;GFK;EGE;GHW;EIE;GJM;EKK;GLQ;EMK;GNI;EOK;GPE;EQK;GRE;ESK;GTG;EUK;eCuC;ODE;cEC;OFI;iBGC;OHE;eIC;OJG;GVS;EeK;GfM;EgBK;GhBO;EiBK;GjBQ;EkBK;GlBI;EmBK;GnBG;EoBK;GpBG;EqBK;GrBG;EsBK;GtBG;EuBK;GvBM;EwBK;GxBW;EyBK;GzBO;CDC"}},"type":"js/module"}]}