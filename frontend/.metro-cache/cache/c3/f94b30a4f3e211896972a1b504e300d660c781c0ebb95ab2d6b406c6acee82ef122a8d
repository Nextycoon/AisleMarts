{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./AppleAuthentication.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":76,"index":145}}],"key":"hor6J/onRNt/lS52AczKo1xwe4I=","exportNames":["*"]}},{"name":"./ExpoAppleAuthentication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":146},"end":{"line":3,"column":64,"index":210}}],"key":"yW7eeT39HKBl9DAuxfo7qeUSqEg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addRevokeListener = addRevokeListener;\n  exports.formatFullName = formatFullName;\n  exports.getCredentialStateAsync = getCredentialStateAsync;\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.refreshAsync = refreshAsync;\n  exports.signInAsync = signInAsync;\n  exports.signOutAsync = signOutAsync;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _AppleAuthentication = require(_dependencyMap[2], \"./AppleAuthentication.types\");\n  var _ExpoAppleAuthentication = _interopRequireDefault(require(_dependencyMap[3], \"./ExpoAppleAuthentication\"));\n  // @needsAudit\n  /**\n   * Determine if the current device's operating system supports Apple authentication.\n   * @return A promise that fulfills with `true` if the system supports Apple authentication, and `false` otherwise.\n   */\n  async function isAvailableAsync() {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.isAvailableAsync) {\n      return false;\n    }\n    return _ExpoAppleAuthentication.default.isAvailableAsync();\n  }\n  // @needsAudit\n  /**\n   * Sends a request to the operating system to initiate the Apple authentication flow, which will\n   * present a modal to the user over your app and allow them to sign in.\n   *\n   * You can request access to the user's full name and email address in this method, which allows you\n   * to personalize your UI for signed in users. However, users can deny access to either or both\n   * of these options at runtime.\n   *\n   * Additionally, you will only receive Apple Authentication Credentials the first time users sign\n   * into your app, so you must store it for later use. It's best to store this information either\n   * server-side, or using [SecureStore](./securestore), so that the data persists across app installs.\n   * You can use [`AppleAuthenticationCredential.user`](#appleauthenticationcredential) to identify\n   * the user, since this remains the same for apps released by the same developer.\n   *\n   * @param options An optional [`AppleAuthenticationSignInOptions`](#appleauthenticationsigninoptions) object\n   * @return A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\n   * object after a successful authentication, and rejects with `ERR_REQUEST_CANCELED` if the user cancels the\n   * sign-in operation.\n   */\n  async function signInAsync(options) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.requestAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'signInAsync');\n    }\n    const requestOptions = Object.assign({}, options, {\n      requestedOperation: _AppleAuthentication.AppleAuthenticationOperation.LOGIN\n    });\n    const credential = await _ExpoAppleAuthentication.default.requestAsync(requestOptions);\n    if (!credential.authorizationCode || !credential.identityToken || !credential.user) {\n      throw new _expoModulesCore.CodedError('ERR_REQUEST_FAILED', 'The credential returned by `signInAsync` is missing one or more required fields.');\n    }\n    return credential;\n  }\n  // @needsAudit\n  /**\n   * An operation that refreshes the logged-in userâ€™s credentials.\n   * Calling this method will show the sign in modal before actually refreshing the user credentials.\n   *\n   * @param options An [`AppleAuthenticationRefreshOptions`](#appleauthenticationrefreshoptions) object\n   * @returns A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\n   * object after a successful authentication, and rejects with `ERR_REQUEST_CANCELED` if the user cancels the\n   * refresh operation.\n   */\n  async function refreshAsync(options) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.requestAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'refreshAsync');\n    }\n    const requestOptions = Object.assign({}, options, {\n      requestedOperation: _AppleAuthentication.AppleAuthenticationOperation.REFRESH\n    });\n    const credential = await _ExpoAppleAuthentication.default.requestAsync(requestOptions);\n    if (!credential.authorizationCode || !credential.identityToken || !credential.user) {\n      throw new _expoModulesCore.CodedError('ERR_REQUEST_FAILED', 'The credential returned by `refreshAsync` is missing one or more required fields.');\n    }\n    return credential;\n  }\n  // @needsAudit\n  /**\n   * An operation that ends the authenticated session.\n   * Calling this method will show the sign in modal before actually signing the user out.\n   *\n   * It is not recommended to use this method to sign out the user as it works counterintuitively.\n   * Instead of using this method it is recommended to simply clear all the user's data collected\n   * from using [`signInAsync`](#appleauthenticationsigninasyncoptions) or [`refreshAsync`](#appleauthenticationrefreshasyncoptions) methods.\n   *\n   * @param options An [`AppleAuthenticationSignOutOptions`](#appleauthenticationsignoutoptions) object\n   * @returns A promise that fulfills with an [`AppleAuthenticationCredential`](#appleauthenticationcredential)\n   * object after a successful authentication, and rejects with `ERR_REQUEST_CANCELED` if the user cancels the\n   * sign-out operation.\n   */\n  async function signOutAsync(options) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.requestAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'signOutAsync');\n    }\n    const requestOptions = Object.assign({}, options, {\n      requestedOperation: _AppleAuthentication.AppleAuthenticationOperation.LOGOUT\n    });\n    return _ExpoAppleAuthentication.default.requestAsync(requestOptions);\n  }\n  // @needsAudit\n  /**\n   * Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\n   * > **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error.\n   *\n   * @param user The unique identifier for the user whose credential state you'd like to check.\n   * This should come from the user field of an [`AppleAuthenticationCredential`](#appleauthenticationcredentialstate) object.\n   * @return A promise that fulfills with an [`AppleAuthenticationCredentialState`](#appleauthenticationcredentialstate)\n   * value depending on the state of the credential.\n   */\n  async function getCredentialStateAsync(user) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.getCredentialStateAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'getCredentialStateAsync');\n    }\n    return _ExpoAppleAuthentication.default.getCredentialStateAsync(user);\n  }\n  // @needsAudit @docsMissing\n  /**\n   * Creates a locale-aware string representation of a person's name from an object representing the tokenized portions of a user's full name\n   *\n   * @param fullName The full name object with the tokenized portions\n   * @param formatStyle The style in which the name should be formatted\n   * @returns A locale-aware string representation of a person's name\n   */\n  function formatFullName(fullName, formatStyle) {\n    if (!_ExpoAppleAuthentication.default || !_ExpoAppleAuthentication.default.formatFullName) {\n      throw new _expoModulesCore.UnavailabilityError('expo-apple-authentication', 'formatFullName');\n    }\n    return _ExpoAppleAuthentication.default.formatFullName(fullName, formatStyle);\n  }\n  // @docsMissing\n  function addRevokeListener(listener) {\n    return _ExpoAppleAuthentication.default.addListener('Expo.appleIdCredentialRevoked', listener);\n  }\n});","lineCount":140,"map":[[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_AppleAuthentication"],[14,26,2,0],[14,29,2,0,"require"],[14,36,2,0],[14,37,2,0,"_dependencyMap"],[14,51,2,0],[15,2,3,0],[15,6,3,0,"_ExpoAppleAuthentication"],[15,30,3,0],[15,33,3,0,"_interopRequireDefault"],[15,55,3,0],[15,56,3,0,"require"],[15,63,3,0],[15,64,3,0,"_dependencyMap"],[15,78,3,0],[16,2,4,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,2,9,7],[21,17,9,22,"isAvailableAsync"],[21,33,9,38,"isAvailableAsync"],[21,34,9,38],[21,36,9,41],[22,4,10,4],[22,8,10,8],[22,9,10,9,"ExpoAppleAuthentication"],[22,41,10,32],[22,45,10,36],[22,46,10,37,"ExpoAppleAuthentication"],[22,78,10,60],[22,79,10,61,"isAvailableAsync"],[22,95,10,77],[22,97,10,79],[23,6,11,8],[23,13,11,15],[23,18,11,20],[24,4,12,4],[25,4,13,4],[25,11,13,11,"ExpoAppleAuthentication"],[25,43,13,34],[25,44,13,35,"isAvailableAsync"],[25,60,13,51],[25,61,13,52],[25,62,13,53],[26,2,14,0],[27,2,15,0],[28,2,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,2,35,7],[47,17,35,22,"signInAsync"],[47,28,35,33,"signInAsync"],[47,29,35,34,"options"],[47,36,35,41],[47,38,35,43],[48,4,36,4],[48,8,36,8],[48,9,36,9,"ExpoAppleAuthentication"],[48,41,36,32],[48,45,36,36],[48,46,36,37,"ExpoAppleAuthentication"],[48,78,36,60],[48,79,36,61,"requestAsync"],[48,91,36,73],[48,93,36,75],[49,6,37,8],[49,12,37,14],[49,16,37,18,"UnavailabilityError"],[49,52,37,37],[49,53,37,38],[49,80,37,65],[49,82,37,67],[49,95,37,80],[49,96,37,81],[50,4,38,4],[51,4,39,4],[51,10,39,10,"requestOptions"],[51,24,39,24],[51,27,39,24,"Object"],[51,33,39,24],[51,34,39,24,"assign"],[51,40,39,24],[51,45,40,11,"options"],[51,52,40,18],[52,6,41,8,"requestedOperation"],[52,24,41,26],[52,26,41,28,"AppleAuthenticationOperation"],[52,75,41,56],[52,76,41,57,"LOGIN"],[53,4,41,62],[53,6,42,5],[54,4,43,4],[54,10,43,10,"credential"],[54,20,43,20],[54,23,43,23],[54,29,43,29,"ExpoAppleAuthentication"],[54,61,43,52],[54,62,43,53,"requestAsync"],[54,74,43,65],[54,75,43,66,"requestOptions"],[54,89,43,80],[54,90,43,81],[55,4,44,4],[55,8,44,8],[55,9,44,9,"credential"],[55,19,44,19],[55,20,44,20,"authorizationCode"],[55,37,44,37],[55,41,44,41],[55,42,44,42,"credential"],[55,52,44,52],[55,53,44,53,"identityToken"],[55,66,44,66],[55,70,44,70],[55,71,44,71,"credential"],[55,81,44,81],[55,82,44,82,"user"],[55,86,44,86],[55,88,44,88],[56,6,45,8],[56,12,45,14],[56,16,45,18,"CodedError"],[56,43,45,28],[56,44,45,29],[56,64,45,49],[56,66,45,51],[56,148,45,133],[56,149,45,134],[57,4,46,4],[58,4,47,4],[58,11,47,11,"credential"],[58,21,47,21],[59,2,48,0],[60,2,49,0],[61,2,50,0],[62,0,51,0],[63,0,52,0],[64,0,53,0],[65,0,54,0],[66,0,55,0],[67,0,56,0],[68,0,57,0],[69,0,58,0],[70,2,59,7],[70,17,59,22,"refreshAsync"],[70,29,59,34,"refreshAsync"],[70,30,59,35,"options"],[70,37,59,42],[70,39,59,44],[71,4,60,4],[71,8,60,8],[71,9,60,9,"ExpoAppleAuthentication"],[71,41,60,32],[71,45,60,36],[71,46,60,37,"ExpoAppleAuthentication"],[71,78,60,60],[71,79,60,61,"requestAsync"],[71,91,60,73],[71,93,60,75],[72,6,61,8],[72,12,61,14],[72,16,61,18,"UnavailabilityError"],[72,52,61,37],[72,53,61,38],[72,80,61,65],[72,82,61,67],[72,96,61,81],[72,97,61,82],[73,4,62,4],[74,4,63,4],[74,10,63,10,"requestOptions"],[74,24,63,24],[74,27,63,24,"Object"],[74,33,63,24],[74,34,63,24,"assign"],[74,40,63,24],[74,45,64,11,"options"],[74,52,64,18],[75,6,65,8,"requestedOperation"],[75,24,65,26],[75,26,65,28,"AppleAuthenticationOperation"],[75,75,65,56],[75,76,65,57,"REFRESH"],[76,4,65,64],[76,6,66,5],[77,4,67,4],[77,10,67,10,"credential"],[77,20,67,20],[77,23,67,23],[77,29,67,29,"ExpoAppleAuthentication"],[77,61,67,52],[77,62,67,53,"requestAsync"],[77,74,67,65],[77,75,67,66,"requestOptions"],[77,89,67,80],[77,90,67,81],[78,4,68,4],[78,8,68,8],[78,9,68,9,"credential"],[78,19,68,19],[78,20,68,20,"authorizationCode"],[78,37,68,37],[78,41,68,41],[78,42,68,42,"credential"],[78,52,68,52],[78,53,68,53,"identityToken"],[78,66,68,66],[78,70,68,70],[78,71,68,71,"credential"],[78,81,68,81],[78,82,68,82,"user"],[78,86,68,86],[78,88,68,88],[79,6,69,8],[79,12,69,14],[79,16,69,18,"CodedError"],[79,43,69,28],[79,44,69,29],[79,64,69,49],[79,66,69,51],[79,149,69,134],[79,150,69,135],[80,4,70,4],[81,4,71,4],[81,11,71,11,"credential"],[81,21,71,21],[82,2,72,0],[83,2,73,0],[84,2,74,0],[85,0,75,0],[86,0,76,0],[87,0,77,0],[88,0,78,0],[89,0,79,0],[90,0,80,0],[91,0,81,0],[92,0,82,0],[93,0,83,0],[94,0,84,0],[95,0,85,0],[96,0,86,0],[97,2,87,7],[97,17,87,22,"signOutAsync"],[97,29,87,34,"signOutAsync"],[97,30,87,35,"options"],[97,37,87,42],[97,39,87,44],[98,4,88,4],[98,8,88,8],[98,9,88,9,"ExpoAppleAuthentication"],[98,41,88,32],[98,45,88,36],[98,46,88,37,"ExpoAppleAuthentication"],[98,78,88,60],[98,79,88,61,"requestAsync"],[98,91,88,73],[98,93,88,75],[99,6,89,8],[99,12,89,14],[99,16,89,18,"UnavailabilityError"],[99,52,89,37],[99,53,89,38],[99,80,89,65],[99,82,89,67],[99,96,89,81],[99,97,89,82],[100,4,90,4],[101,4,91,4],[101,10,91,10,"requestOptions"],[101,24,91,24],[101,27,91,24,"Object"],[101,33,91,24],[101,34,91,24,"assign"],[101,40,91,24],[101,45,92,11,"options"],[101,52,92,18],[102,6,93,8,"requestedOperation"],[102,24,93,26],[102,26,93,28,"AppleAuthenticationOperation"],[102,75,93,56],[102,76,93,57,"LOGOUT"],[103,4,93,63],[103,6,94,5],[104,4,95,4],[104,11,95,11,"ExpoAppleAuthentication"],[104,43,95,34],[104,44,95,35,"requestAsync"],[104,56,95,47],[104,57,95,48,"requestOptions"],[104,71,95,62],[104,72,95,63],[105,2,96,0],[106,2,97,0],[107,2,98,0],[108,0,99,0],[109,0,100,0],[110,0,101,0],[111,0,102,0],[112,0,103,0],[113,0,104,0],[114,0,105,0],[115,0,106,0],[116,2,107,7],[116,17,107,22,"getCredentialStateAsync"],[116,40,107,45,"getCredentialStateAsync"],[116,41,107,46,"user"],[116,45,107,50],[116,47,107,52],[117,4,108,4],[117,8,108,8],[117,9,108,9,"ExpoAppleAuthentication"],[117,41,108,32],[117,45,108,36],[117,46,108,37,"ExpoAppleAuthentication"],[117,78,108,60],[117,79,108,61,"getCredentialStateAsync"],[117,102,108,84],[117,104,108,86],[118,6,109,8],[118,12,109,14],[118,16,109,18,"UnavailabilityError"],[118,52,109,37],[118,53,109,38],[118,80,109,65],[118,82,109,67],[118,107,109,92],[118,108,109,93],[119,4,110,4],[120,4,111,4],[120,11,111,11,"ExpoAppleAuthentication"],[120,43,111,34],[120,44,111,35,"getCredentialStateAsync"],[120,67,111,58],[120,68,111,59,"user"],[120,72,111,63],[120,73,111,64],[121,2,112,0],[122,2,113,0],[123,2,114,0],[124,0,115,0],[125,0,116,0],[126,0,117,0],[127,0,118,0],[128,0,119,0],[129,0,120,0],[130,2,121,7],[130,11,121,16,"formatFullName"],[130,25,121,30,"formatFullName"],[130,26,121,31,"fullName"],[130,34,121,39],[130,36,121,41,"formatStyle"],[130,47,121,52],[130,49,121,54],[131,4,122,4],[131,8,122,8],[131,9,122,9,"ExpoAppleAuthentication"],[131,41,122,32],[131,45,122,36],[131,46,122,37,"ExpoAppleAuthentication"],[131,78,122,60],[131,79,122,61,"formatFullName"],[131,93,122,75],[131,95,122,77],[132,6,123,8],[132,12,123,14],[132,16,123,18,"UnavailabilityError"],[132,52,123,37],[132,53,123,38],[132,80,123,65],[132,82,123,67],[132,98,123,83],[132,99,123,84],[133,4,124,4],[134,4,125,4],[134,11,125,11,"ExpoAppleAuthentication"],[134,43,125,34],[134,44,125,35,"formatFullName"],[134,58,125,49],[134,59,125,50,"fullName"],[134,67,125,58],[134,69,125,60,"formatStyle"],[134,80,125,71],[134,81,125,72],[135,2,126,0],[136,2,127,0],[137,2,128,7],[137,11,128,16,"addRevokeListener"],[137,28,128,33,"addRevokeListener"],[137,29,128,34,"listener"],[137,37,128,42],[137,39,128,44],[138,4,129,4],[138,11,129,11,"ExpoAppleAuthentication"],[138,43,129,34],[138,44,129,35,"addListener"],[138,55,129,46],[138,56,129,47],[138,87,129,78],[138,89,129,80,"listener"],[138,97,129,88],[138,98,129,89],[139,2,130,0],[140,0,130,1],[140,3]],"functionMap":{"names":["<global>","isAvailableAsync","signInAsync","refreshAsync","signOutAsync","getCredentialStateAsync","formatFullName","addRevokeListener"],"mappings":"AAA;OCQ;CDK;OEqB;CFa;OGW;CHa;OIe;CJS;OKW;CLK;OMS;CNK;OOE;CPE"}},"type":"js/module"}]}