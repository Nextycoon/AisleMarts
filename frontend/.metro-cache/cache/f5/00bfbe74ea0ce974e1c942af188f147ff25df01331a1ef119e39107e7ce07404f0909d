{"dependencies":[{"name":"../api/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"vrY6iF+Nd2CrRu9d6eBxeX1BPiA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"paymentsTaxService\", {\n    enumerable: true,\n    get: function () {\n      return paymentsTaxService;\n    }\n  });\n  var _apiClient = require(_dependencyMap[0], \"../api/client\");\n  class PaymentsTaxService {\n    async initializeData() {\n      try {\n        const response = await _apiClient.API.post('/payments-tax/initialize');\n        return response.data;\n      } catch (error) {\n        console.error('Failed to initialize payments/tax data:', error);\n        throw error;\n      }\n    }\n    async suggestPaymentMethods(country, currency, cartTotal, userType = 'B2C') {\n      try {\n        const response = await _apiClient.API.post('/payments-tax/suggest-methods', {\n          country,\n          currency,\n          cart_total: cartTotal,\n          user_type: userType\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get payment method suggestions:', error);\n        throw error;\n      }\n    }\n    async computeTax(country, items, role = 'B2C') {\n      try {\n        const response = await _apiClient.API.post('/payments-tax/compute-tax', {\n          country,\n          items,\n          role\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to compute tax:', error);\n        throw error;\n      }\n    }\n    async convertCurrency(fromCurrency, toCurrency, amount) {\n      try {\n        const response = await _apiClient.API.post('/payments-tax/convert-currency', {\n          from_currency: fromCurrency,\n          to_currency: toCurrency,\n          amount\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to convert currency:', error);\n        throw error;\n      }\n    }\n    async assessFraudRisk(country, amount, paymentMethod, userHistory = {}) {\n      try {\n        const response = await _apiClient.API.post('/payments-tax/assess-fraud-risk', {\n          country,\n          amount,\n          payment_method: paymentMethod,\n          user_history: userHistory\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to assess fraud risk:', error);\n        throw error;\n      }\n    }\n    async createEnhancedPaymentIntent(items, country, currency, role = 'B2C', paymentMethodPreference, optimizeFor = 'cost') {\n      try {\n        const response = await _apiClient.API.post('/payments-tax/create-enhanced-payment-intent', {\n          items,\n          country,\n          currency,\n          role,\n          payment_method_preference: paymentMethodPreference,\n          optimize_for: optimizeFor\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Failed to create enhanced payment intent:', error);\n        throw error;\n      }\n    }\n    async getPaymentAnalytics(country, days = 30) {\n      try {\n        const params = new URLSearchParams();\n        if (country) params.append('country', country);\n        params.append('days', days.toString());\n        const response = await _apiClient.API.get(`/payments-tax/payment-analytics?${params.toString()}`);\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get payment analytics:', error);\n        throw error;\n      }\n    }\n    async getTaxAnalytics(country, days = 30) {\n      try {\n        const params = new URLSearchParams();\n        if (country) params.append('country', country);\n        params.append('days', days.toString());\n        const response = await _apiClient.API.get(`/payments-tax/tax-analytics?${params.toString()}`);\n        return response.data;\n      } catch (error) {\n        console.error('Failed to get tax analytics:', error);\n        throw error;\n      }\n    }\n    async checkHealth() {\n      try {\n        const response = await _apiClient.API.get('/payments-tax/health');\n        return response.data;\n      } catch (error) {\n        console.error('Payments/Tax service health check failed:', error);\n        throw error;\n      }\n    }\n  }\n  const paymentsTaxService = new PaymentsTaxService();\n});","lineCount":129,"map":[[7,2,253,0,"Object"],[7,8,253,0],[7,9,253,0,"defineProperty"],[7,23,253,0],[7,24,253,0,"exports"],[7,31,253,0],[8,4,253,0,"enumerable"],[8,14,253,0],[9,4,253,0,"get"],[9,7,253,0],[9,18,253,0,"get"],[9,19,253,0],[10,6,253,0],[10,13,253,0,"paymentsTaxService"],[10,31,253,0],[11,4,253,0],[12,2,253,0],[13,2,1,0],[13,6,1,0,"_apiClient"],[13,16,1,0],[13,19,1,0,"require"],[13,26,1,0],[13,27,1,0,"_dependencyMap"],[13,41,1,0],[14,2,93,0],[14,8,93,6,"PaymentsTaxService"],[14,26,93,24],[14,27,93,25],[15,4,94,2],[15,10,94,8,"initializeData"],[15,24,94,22,"initializeData"],[15,25,94,22],[15,27,94,25],[16,6,95,4],[16,10,95,8],[17,8,96,6],[17,14,96,12,"response"],[17,22,96,20],[17,25,96,23],[17,31,96,29,"API"],[17,41,96,32],[17,42,96,32,"API"],[17,45,96,32],[17,46,96,33,"post"],[17,50,96,37],[17,51,96,38],[17,77,96,64],[17,78,96,65],[18,8,97,6],[18,15,97,13,"response"],[18,23,97,21],[18,24,97,22,"data"],[18,28,97,26],[19,6,98,4],[19,7,98,5],[19,8,98,6],[19,15,98,13,"error"],[19,20,98,18],[19,22,98,20],[20,8,99,6,"console"],[20,15,99,13],[20,16,99,14,"error"],[20,21,99,19],[20,22,99,20],[20,63,99,61],[20,65,99,63,"error"],[20,70,99,68],[20,71,99,69],[21,8,100,6],[21,14,100,12,"error"],[21,19,100,17],[22,6,101,4],[23,4,102,2],[24,4,104,2],[24,10,104,8,"suggestPaymentMethods"],[24,31,104,29,"suggestPaymentMethods"],[24,32,105,4,"country"],[24,39,105,19],[24,41,106,4,"currency"],[24,49,106,20],[24,51,107,4,"cartTotal"],[24,60,107,21],[24,62,108,4,"userType"],[24,70,108,27],[24,73,108,30],[24,78,108,35],[24,80,109,38],[25,6,110,4],[25,10,110,8],[26,8,111,6],[26,14,111,12,"response"],[26,22,111,20],[26,25,111,23],[26,31,111,29,"API"],[26,41,111,32],[26,42,111,32,"API"],[26,45,111,32],[26,46,111,33,"post"],[26,50,111,37],[26,51,111,38],[26,82,111,69],[26,84,111,71],[27,10,112,8,"country"],[27,17,112,15],[28,10,113,8,"currency"],[28,18,113,16],[29,10,114,8,"cart_total"],[29,20,114,18],[29,22,114,20,"cartTotal"],[29,31,114,29],[30,10,115,8,"user_type"],[30,19,115,17],[30,21,115,19,"userType"],[31,8,116,6],[31,9,116,7],[31,10,116,8],[32,8,117,6],[32,15,117,13,"response"],[32,23,117,21],[32,24,117,22,"data"],[32,28,117,26],[33,6,118,4],[33,7,118,5],[33,8,118,6],[33,15,118,13,"error"],[33,20,118,18],[33,22,118,20],[34,8,119,6,"console"],[34,15,119,13],[34,16,119,14,"error"],[34,21,119,19],[34,22,119,20],[34,65,119,63],[34,67,119,65,"error"],[34,72,119,70],[34,73,119,71],[35,8,120,6],[35,14,120,12,"error"],[35,19,120,17],[36,6,121,4],[37,4,122,2],[38,4,124,2],[38,10,124,8,"computeTax"],[38,20,124,18,"computeTax"],[38,21,125,4,"country"],[38,28,125,19],[38,30,126,4,"items"],[38,35,131,6],[38,37,132,4,"role"],[38,41,132,23],[38,44,132,26],[38,49,132,31],[38,51,133,29],[39,6,134,4],[39,10,134,8],[40,8,135,6],[40,14,135,12,"response"],[40,22,135,20],[40,25,135,23],[40,31,135,29,"API"],[40,41,135,32],[40,42,135,32,"API"],[40,45,135,32],[40,46,135,33,"post"],[40,50,135,37],[40,51,135,38],[40,78,135,65],[40,80,135,67],[41,10,136,8,"country"],[41,17,136,15],[42,10,137,8,"items"],[42,15,137,13],[43,10,138,8,"role"],[44,8,139,6],[44,9,139,7],[44,10,139,8],[45,8,140,6],[45,15,140,13,"response"],[45,23,140,21],[45,24,140,22,"data"],[45,28,140,26],[46,6,141,4],[46,7,141,5],[46,8,141,6],[46,15,141,13,"error"],[46,20,141,18],[46,22,141,20],[47,8,142,6,"console"],[47,15,142,13],[47,16,142,14,"error"],[47,21,142,19],[47,22,142,20],[47,46,142,44],[47,48,142,46,"error"],[47,53,142,51],[47,54,142,52],[48,8,143,6],[48,14,143,12,"error"],[48,19,143,17],[49,6,144,4],[50,4,145,2],[51,4,147,2],[51,10,147,8,"convertCurrency"],[51,25,147,23,"convertCurrency"],[51,26,148,4,"fromCurrency"],[51,38,148,24],[51,40,149,4,"toCurrency"],[51,50,149,22],[51,52,150,4,"amount"],[51,58,150,18],[51,60,151,33],[52,6,152,4],[52,10,152,8],[53,8,153,6],[53,14,153,12,"response"],[53,22,153,20],[53,25,153,23],[53,31,153,29,"API"],[53,41,153,32],[53,42,153,32,"API"],[53,45,153,32],[53,46,153,33,"post"],[53,50,153,37],[53,51,153,38],[53,83,153,70],[53,85,153,72],[54,10,154,8,"from_currency"],[54,23,154,21],[54,25,154,23,"fromCurrency"],[54,37,154,35],[55,10,155,8,"to_currency"],[55,21,155,19],[55,23,155,21,"toCurrency"],[55,33,155,31],[56,10,156,8,"amount"],[57,8,157,6],[57,9,157,7],[57,10,157,8],[58,8,158,6],[58,15,158,13,"response"],[58,23,158,21],[58,24,158,22,"data"],[58,28,158,26],[59,6,159,4],[59,7,159,5],[59,8,159,6],[59,15,159,13,"error"],[59,20,159,18],[59,22,159,20],[60,8,160,6,"console"],[60,15,160,13],[60,16,160,14,"error"],[60,21,160,19],[60,22,160,20],[60,51,160,49],[60,53,160,51,"error"],[60,58,160,56],[60,59,160,57],[61,8,161,6],[61,14,161,12,"error"],[61,19,161,17],[62,6,162,4],[63,4,163,2],[64,4,165,2],[64,10,165,8,"assessFraudRisk"],[64,25,165,23,"assessFraudRisk"],[64,26,166,4,"country"],[64,33,166,19],[64,35,167,4,"amount"],[64,41,167,18],[64,43,168,4,"paymentMethod"],[64,56,168,25],[64,58,169,4,"userHistory"],[64,69,169,36],[64,72,169,39],[64,73,169,40],[64,74,169,41],[64,76,170,30],[65,6,171,4],[65,10,171,8],[66,8,172,6],[66,14,172,12,"response"],[66,22,172,20],[66,25,172,23],[66,31,172,29,"API"],[66,41,172,32],[66,42,172,32,"API"],[66,45,172,32],[66,46,172,33,"post"],[66,50,172,37],[66,51,172,38],[66,84,172,71],[66,86,172,73],[67,10,173,8,"country"],[67,17,173,15],[68,10,174,8,"amount"],[68,16,174,14],[69,10,175,8,"payment_method"],[69,24,175,22],[69,26,175,24,"paymentMethod"],[69,39,175,37],[70,10,176,8,"user_history"],[70,22,176,20],[70,24,176,22,"userHistory"],[71,8,177,6],[71,9,177,7],[71,10,177,8],[72,8,178,6],[72,15,178,13,"response"],[72,23,178,21],[72,24,178,22,"data"],[72,28,178,26],[73,6,179,4],[73,7,179,5],[73,8,179,6],[73,15,179,13,"error"],[73,20,179,18],[73,22,179,20],[74,8,180,6,"console"],[74,15,180,13],[74,16,180,14,"error"],[74,21,180,19],[74,22,180,20],[74,52,180,50],[74,54,180,52,"error"],[74,59,180,57],[74,60,180,58],[75,8,181,6],[75,14,181,12,"error"],[75,19,181,17],[76,6,182,4],[77,4,183,2],[78,4,185,2],[78,10,185,8,"createEnhancedPaymentIntent"],[78,37,185,35,"createEnhancedPaymentIntent"],[78,38,186,4,"items"],[78,43,191,6],[78,45,192,4,"country"],[78,52,192,19],[78,54,193,4,"currency"],[78,62,193,20],[78,64,194,4,"role"],[78,68,194,23],[78,71,194,26],[78,76,194,31],[78,78,195,4,"paymentMethodPreference"],[78,101,195,36],[78,103,196,4,"optimizeFor"],[78,114,196,46],[78,117,196,49],[78,123,196,55],[78,125,197,36],[79,6,198,4],[79,10,198,8],[80,8,199,6],[80,14,199,12,"response"],[80,22,199,20],[80,25,199,23],[80,31,199,29,"API"],[80,41,199,32],[80,42,199,32,"API"],[80,45,199,32],[80,46,199,33,"post"],[80,50,199,37],[80,51,199,38],[80,97,199,84],[80,99,199,86],[81,10,200,8,"items"],[81,15,200,13],[82,10,201,8,"country"],[82,17,201,15],[83,10,202,8,"currency"],[83,18,202,16],[84,10,203,8,"role"],[84,14,203,12],[85,10,204,8,"payment_method_preference"],[85,35,204,33],[85,37,204,35,"paymentMethodPreference"],[85,60,204,58],[86,10,205,8,"optimize_for"],[86,22,205,20],[86,24,205,22,"optimizeFor"],[87,8,206,6],[87,9,206,7],[87,10,206,8],[88,8,207,6],[88,15,207,13,"response"],[88,23,207,21],[88,24,207,22,"data"],[88,28,207,26],[89,6,208,4],[89,7,208,5],[89,8,208,6],[89,15,208,13,"error"],[89,20,208,18],[89,22,208,20],[90,8,209,6,"console"],[90,15,209,13],[90,16,209,14,"error"],[90,21,209,19],[90,22,209,20],[90,65,209,63],[90,67,209,65,"error"],[90,72,209,70],[90,73,209,71],[91,8,210,6],[91,14,210,12,"error"],[91,19,210,17],[92,6,211,4],[93,4,212,2],[94,4,214,2],[94,10,214,8,"getPaymentAnalytics"],[94,29,214,27,"getPaymentAnalytics"],[94,30,214,28,"country"],[94,37,214,44],[94,39,214,46,"days"],[94,43,214,58],[94,46,214,61],[94,48,214,63],[94,50,214,65],[95,6,215,4],[95,10,215,8],[96,8,216,6],[96,14,216,12,"params"],[96,20,216,18],[96,23,216,21],[96,27,216,25,"URLSearchParams"],[96,42,216,40],[96,43,216,41],[96,44,216,42],[97,8,217,6],[97,12,217,10,"country"],[97,19,217,17],[97,21,217,19,"params"],[97,27,217,25],[97,28,217,26,"append"],[97,34,217,32],[97,35,217,33],[97,44,217,42],[97,46,217,44,"country"],[97,53,217,51],[97,54,217,52],[98,8,218,6,"params"],[98,14,218,12],[98,15,218,13,"append"],[98,21,218,19],[98,22,218,20],[98,28,218,26],[98,30,218,28,"days"],[98,34,218,32],[98,35,218,33,"toString"],[98,43,218,41],[98,44,218,42],[98,45,218,43],[98,46,218,44],[99,8,220,6],[99,14,220,12,"response"],[99,22,220,20],[99,25,220,23],[99,31,220,29,"API"],[99,41,220,32],[99,42,220,32,"API"],[99,45,220,32],[99,46,220,33,"get"],[99,49,220,36],[99,50,220,37],[99,85,220,72,"params"],[99,91,220,78],[99,92,220,79,"toString"],[99,100,220,87],[99,101,220,88],[99,102,220,89],[99,104,220,91],[99,105,220,92],[100,8,221,6],[100,15,221,13,"response"],[100,23,221,21],[100,24,221,22,"data"],[100,28,221,26],[101,6,222,4],[101,7,222,5],[101,8,222,6],[101,15,222,13,"error"],[101,20,222,18],[101,22,222,20],[102,8,223,6,"console"],[102,15,223,13],[102,16,223,14,"error"],[102,21,223,19],[102,22,223,20],[102,56,223,54],[102,58,223,56,"error"],[102,63,223,61],[102,64,223,62],[103,8,224,6],[103,14,224,12,"error"],[103,19,224,17],[104,6,225,4],[105,4,226,2],[106,4,228,2],[106,10,228,8,"getTaxAnalytics"],[106,25,228,23,"getTaxAnalytics"],[106,26,228,24,"country"],[106,33,228,40],[106,35,228,42,"days"],[106,39,228,54],[106,42,228,57],[106,44,228,59],[106,46,228,61],[107,6,229,4],[107,10,229,8],[108,8,230,6],[108,14,230,12,"params"],[108,20,230,18],[108,23,230,21],[108,27,230,25,"URLSearchParams"],[108,42,230,40],[108,43,230,41],[108,44,230,42],[109,8,231,6],[109,12,231,10,"country"],[109,19,231,17],[109,21,231,19,"params"],[109,27,231,25],[109,28,231,26,"append"],[109,34,231,32],[109,35,231,33],[109,44,231,42],[109,46,231,44,"country"],[109,53,231,51],[109,54,231,52],[110,8,232,6,"params"],[110,14,232,12],[110,15,232,13,"append"],[110,21,232,19],[110,22,232,20],[110,28,232,26],[110,30,232,28,"days"],[110,34,232,32],[110,35,232,33,"toString"],[110,43,232,41],[110,44,232,42],[110,45,232,43],[110,46,232,44],[111,8,234,6],[111,14,234,12,"response"],[111,22,234,20],[111,25,234,23],[111,31,234,29,"API"],[111,41,234,32],[111,42,234,32,"API"],[111,45,234,32],[111,46,234,33,"get"],[111,49,234,36],[111,50,234,37],[111,81,234,68,"params"],[111,87,234,74],[111,88,234,75,"toString"],[111,96,234,83],[111,97,234,84],[111,98,234,85],[111,100,234,87],[111,101,234,88],[112,8,235,6],[112,15,235,13,"response"],[112,23,235,21],[112,24,235,22,"data"],[112,28,235,26],[113,6,236,4],[113,7,236,5],[113,8,236,6],[113,15,236,13,"error"],[113,20,236,18],[113,22,236,20],[114,8,237,6,"console"],[114,15,237,13],[114,16,237,14,"error"],[114,21,237,19],[114,22,237,20],[114,52,237,50],[114,54,237,52,"error"],[114,59,237,57],[114,60,237,58],[115,8,238,6],[115,14,238,12,"error"],[115,19,238,17],[116,6,239,4],[117,4,240,2],[118,4,242,2],[118,10,242,8,"checkHealth"],[118,21,242,19,"checkHealth"],[118,22,242,19],[118,24,242,22],[119,6,243,4],[119,10,243,8],[120,8,244,6],[120,14,244,12,"response"],[120,22,244,20],[120,25,244,23],[120,31,244,29,"API"],[120,41,244,32],[120,42,244,32,"API"],[120,45,244,32],[120,46,244,33,"get"],[120,49,244,36],[120,50,244,37],[120,72,244,59],[120,73,244,60],[121,8,245,6],[121,15,245,13,"response"],[121,23,245,21],[121,24,245,22,"data"],[121,28,245,26],[122,6,246,4],[122,7,246,5],[122,8,246,6],[122,15,246,13,"error"],[122,20,246,18],[122,22,246,20],[123,8,247,6,"console"],[123,15,247,13],[123,16,247,14,"error"],[123,21,247,19],[123,22,247,20],[123,65,247,63],[123,67,247,65,"error"],[123,72,247,70],[123,73,247,71],[124,8,248,6],[124,14,248,12,"error"],[124,19,248,17],[125,6,249,4],[126,4,250,2],[127,2,251,0],[128,2,253,7],[128,8,253,13,"paymentsTaxService"],[128,26,253,31],[128,29,253,34],[128,33,253,38,"PaymentsTaxService"],[128,51,253,56],[128,52,253,57],[128,53,253,58],[129,0,253,59],[129,3]],"functionMap":{"names":["<global>","PaymentsTaxService","initializeData","suggestPaymentMethods","computeTax","convertCurrency","assessFraudRisk","createEnhancedPaymentIntent","getPaymentAnalytics","getTaxAnalytics","checkHealth"],"mappings":"AAA;AC4F;ECC;GDQ;EEE;GFkB;EGE;GHqB;EIE;GJgB;EKE;GLkB;EME;GN2B;EOE;GPY;EQE;GRY;ESE;GTQ;CDC"},"hasCjsExports":false},"type":"js/module"}]}