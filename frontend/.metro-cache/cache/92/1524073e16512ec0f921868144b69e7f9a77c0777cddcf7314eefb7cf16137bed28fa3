{"dependencies":[{"name":"./privateTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":203},"end":{"line":9,"column":59,"index":262}}],"key":"8BvuxiTUsGHSowX5GFNP+ePi44c=","exportNames":["*"]}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":263},"end":{"line":10,"column":70,"index":333}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _privateTypes = require(_dependencyMap[0], \"./privateTypes\");\n  var _types = require(_dependencyMap[1], \"./types\");\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // See https://wicg.github.io/netinfo/#dom-connectiontype\n\n  // Use a constant test of this form because in SSR on next.js, optional chaining is not sufficient,\n  // but this test correctly detects that window is not available and allows for conditionals before access\n  const isWindowPresent = typeof window !== 'undefined'; // Check if window exists and if the browser supports the connection API\n\n  const connection = isWindowPresent && !window.hasOwnProperty('tizen') && !window.hasOwnProperty('webOS') ? window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection : undefined; // Map browser types to native types\n\n  const typeMapping = {\n    bluetooth: _types.NetInfoStateType.bluetooth,\n    cellular: _types.NetInfoStateType.cellular,\n    ethernet: _types.NetInfoStateType.ethernet,\n    none: _types.NetInfoStateType.none,\n    other: _types.NetInfoStateType.other,\n    unknown: _types.NetInfoStateType.unknown,\n    wifi: _types.NetInfoStateType.wifi,\n    wimax: _types.NetInfoStateType.wimax,\n    mixed: _types.NetInfoStateType.other\n  };\n  const effectiveTypeMapping = {\n    '2g': _types.NetInfoCellularGeneration['2g'],\n    '3g': _types.NetInfoCellularGeneration['3g'],\n    '4g': _types.NetInfoCellularGeneration['4g'],\n    'slow-2g': _types.NetInfoCellularGeneration['2g']\n  }; // Determine current state of connection\n\n  const getCurrentState = _requestedInterface => {\n    const isConnected = isWindowPresent ? navigator.onLine : false;\n    const baseState = {\n      isInternetReachable: null\n    }; // If we don't have a connection object, we return minimal information\n\n    if (!connection) {\n      if (isConnected) {\n        const state = {\n          ...baseState,\n          isConnected: true,\n          type: _types.NetInfoStateType.other,\n          details: {\n            isConnectionExpensive: false\n          }\n        };\n        return state;\n      }\n      const state = {\n        ...baseState,\n        isConnected: false,\n        isInternetReachable: false,\n        type: _types.NetInfoStateType.none,\n        details: null\n      };\n      return state;\n    } // Otherwise try to return detailed information\n\n    const isConnectionExpensive = connection.saveData;\n    const type = connection.type ? typeMapping[connection.type] : isConnected ? _types.NetInfoStateType.other : _types.NetInfoStateType.unknown;\n    if (type === _types.NetInfoStateType.bluetooth) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.cellular) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          cellularGeneration: effectiveTypeMapping[connection.effectiveType] || null,\n          carrier: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.ethernet) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ipAddress: null,\n          subnet: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.wifi) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ssid: null,\n          bssid: null,\n          strength: null,\n          ipAddress: null,\n          subnet: null,\n          frequency: null,\n          linkSpeed: null,\n          rxLinkSpeed: null,\n          txLinkSpeed: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.wimax) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.none) {\n      const state = {\n        ...baseState,\n        isConnected: false,\n        isInternetReachable: false,\n        type,\n        details: null\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.unknown) {\n      const state = {\n        ...baseState,\n        isConnected,\n        isInternetReachable: null,\n        type,\n        details: null\n      };\n      return state;\n    }\n    const state = {\n      ...baseState,\n      isConnected: true,\n      type: _types.NetInfoStateType.other,\n      details: {\n        isConnectionExpensive\n      }\n    };\n    return state;\n  };\n  const handlers = [];\n  const nativeHandlers = [];\n  const RNCNetInfo = {\n    addListener(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            const nativeHandler = () => {\n              handler(getCurrentState());\n            };\n            if (connection) {\n              connection.addEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.addEventListener('online', nativeHandler, false);\n                window.addEventListener('offline', nativeHandler, false);\n              }\n            } // Remember handlers\n\n            handlers.push(handler);\n            nativeHandlers.push(nativeHandler);\n            break;\n          }\n      }\n    },\n    removeListeners(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            // Get native handler\n            const index = handlers.indexOf(handler);\n            const nativeHandler = nativeHandlers[index];\n            if (connection) {\n              connection.removeEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.removeEventListener('online', nativeHandler);\n                window.removeEventListener('offline', nativeHandler);\n              }\n            } // Remove handlers\n\n            handlers.splice(index, 1);\n            nativeHandlers.splice(index, 1);\n            break;\n          }\n      }\n    },\n    async getCurrentState(requestedInterface) {\n      return getCurrentState(requestedInterface);\n    },\n    configure() {\n      return;\n    }\n  };\n  var _default = exports.default = RNCNetInfo;\n});","lineCount":220,"map":[[6,2,9,0],[6,6,9,0,"_privateTypes"],[6,19,9,0],[6,22,9,0,"require"],[6,29,9,0],[6,30,9,0,"_dependencyMap"],[6,44,9,0],[7,2,10,0],[7,6,10,0,"_types"],[7,12,10,0],[7,15,10,0,"require"],[7,22,10,0],[7,23,10,0,"_dependencyMap"],[7,37,10,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[17,2,10,71],[19,2,12,0],[20,2,13,0],[21,2,14,0],[21,8,14,6,"isWindowPresent"],[21,23,14,21],[21,26,14,24],[21,33,14,31,"window"],[21,39,14,37],[21,44,14,42],[21,55,14,53],[21,56,14,54],[21,57,14,55],[23,2,16,0],[23,8,16,6,"connection"],[23,18,16,16],[23,21,16,19,"isWindowPresent"],[23,36,16,34],[23,40,16,38],[23,41,16,39,"window"],[23,47,16,45],[23,48,16,46,"hasOwnProperty"],[23,62,16,60],[23,63,16,61],[23,70,16,68],[23,71,16,69],[23,75,16,73],[23,76,16,74,"window"],[23,82,16,80],[23,83,16,81,"hasOwnProperty"],[23,97,16,95],[23,98,16,96],[23,105,16,103],[23,106,16,104],[23,109,16,107,"window"],[23,115,16,113],[23,116,16,114,"navigator"],[23,125,16,123],[23,126,16,124,"connection"],[23,136,16,134],[23,140,16,138,"window"],[23,146,16,144],[23,147,16,145,"navigator"],[23,156,16,154],[23,157,16,155,"mozConnection"],[23,170,16,168],[23,174,16,172,"window"],[23,180,16,178],[23,181,16,179,"navigator"],[23,190,16,188],[23,191,16,189,"webkitConnection"],[23,207,16,205],[23,210,16,208,"undefined"],[23,219,16,217],[23,220,16,218],[23,221,16,219],[25,2,18,0],[25,8,18,6,"typeMapping"],[25,19,18,17],[25,22,18,20],[26,4,19,2,"bluetooth"],[26,13,19,11],[26,15,19,13,"NetInfoStateType"],[26,38,19,29],[26,39,19,30,"bluetooth"],[26,48,19,39],[27,4,20,2,"cellular"],[27,12,20,10],[27,14,20,12,"NetInfoStateType"],[27,37,20,28],[27,38,20,29,"cellular"],[27,46,20,37],[28,4,21,2,"ethernet"],[28,12,21,10],[28,14,21,12,"NetInfoStateType"],[28,37,21,28],[28,38,21,29,"ethernet"],[28,46,21,37],[29,4,22,2,"none"],[29,8,22,6],[29,10,22,8,"NetInfoStateType"],[29,33,22,24],[29,34,22,25,"none"],[29,38,22,29],[30,4,23,2,"other"],[30,9,23,7],[30,11,23,9,"NetInfoStateType"],[30,34,23,25],[30,35,23,26,"other"],[30,40,23,31],[31,4,24,2,"unknown"],[31,11,24,9],[31,13,24,11,"NetInfoStateType"],[31,36,24,27],[31,37,24,28,"unknown"],[31,44,24,35],[32,4,25,2,"wifi"],[32,8,25,6],[32,10,25,8,"NetInfoStateType"],[32,33,25,24],[32,34,25,25,"wifi"],[32,38,25,29],[33,4,26,2,"wimax"],[33,9,26,7],[33,11,26,9,"NetInfoStateType"],[33,34,26,25],[33,35,26,26,"wimax"],[33,40,26,31],[34,4,27,2,"mixed"],[34,9,27,7],[34,11,27,9,"NetInfoStateType"],[34,34,27,25],[34,35,27,26,"other"],[35,2,28,0],[35,3,28,1],[36,2,29,0],[36,8,29,6,"effectiveTypeMapping"],[36,28,29,26],[36,31,29,29],[37,4,30,2],[37,8,30,6],[37,10,30,8,"NetInfoCellularGeneration"],[37,42,30,33],[37,43,30,34],[37,47,30,38],[37,48,30,39],[38,4,31,2],[38,8,31,6],[38,10,31,8,"NetInfoCellularGeneration"],[38,42,31,33],[38,43,31,34],[38,47,31,38],[38,48,31,39],[39,4,32,2],[39,8,32,6],[39,10,32,8,"NetInfoCellularGeneration"],[39,42,32,33],[39,43,32,34],[39,47,32,38],[39,48,32,39],[40,4,33,2],[40,13,33,11],[40,15,33,13,"NetInfoCellularGeneration"],[40,47,33,38],[40,48,33,39],[40,52,33,43],[41,2,34,0],[41,3,34,1],[41,4,34,2],[41,5,34,3],[43,2,36,0],[43,8,36,6,"getCurrentState"],[43,23,36,21],[43,26,36,24,"_requestedInterface"],[43,45,36,43],[43,49,36,47],[44,4,37,2],[44,10,37,8,"isConnected"],[44,21,37,19],[44,24,37,22,"isWindowPresent"],[44,39,37,37],[44,42,37,40,"navigator"],[44,51,37,49],[44,52,37,50,"onLine"],[44,58,37,56],[44,61,37,59],[44,66,37,64],[45,4,38,2],[45,10,38,8,"baseState"],[45,19,38,17],[45,22,38,20],[46,6,39,4,"isInternetReachable"],[46,25,39,23],[46,27,39,25],[47,4,40,2],[47,5,40,3],[47,6,40,4],[47,7,40,5],[49,4,42,2],[49,8,42,6],[49,9,42,7,"connection"],[49,19,42,17],[49,21,42,19],[50,6,43,4],[50,10,43,8,"isConnected"],[50,21,43,19],[50,23,43,21],[51,8,44,6],[51,14,44,12,"state"],[51,19,44,17],[51,22,44,20],[52,10,44,22],[52,13,44,25,"baseState"],[52,22,44,34],[53,10,45,8,"isConnected"],[53,21,45,19],[53,23,45,21],[53,27,45,25],[54,10,46,8,"type"],[54,14,46,12],[54,16,46,14,"NetInfoStateType"],[54,39,46,30],[54,40,46,31,"other"],[54,45,46,36],[55,10,47,8,"details"],[55,17,47,15],[55,19,47,17],[56,12,48,10,"isConnectionExpensive"],[56,33,48,31],[56,35,48,33],[57,10,49,8],[58,8,50,6],[58,9,50,7],[59,8,51,6],[59,15,51,13,"state"],[59,20,51,18],[60,6,52,4],[61,6,54,4],[61,12,54,10,"state"],[61,17,54,15],[61,20,54,18],[62,8,54,20],[62,11,54,23,"baseState"],[62,20,54,32],[63,8,55,6,"isConnected"],[63,19,55,17],[63,21,55,19],[63,26,55,24],[64,8,56,6,"isInternetReachable"],[64,27,56,25],[64,29,56,27],[64,34,56,32],[65,8,57,6,"type"],[65,12,57,10],[65,14,57,12,"NetInfoStateType"],[65,37,57,28],[65,38,57,29,"none"],[65,42,57,33],[66,8,58,6,"details"],[66,15,58,13],[66,17,58,15],[67,6,59,4],[67,7,59,5],[68,6,60,4],[68,13,60,11,"state"],[68,18,60,16],[69,4,61,2],[69,5,61,3],[69,6,61,4],[71,4,64,2],[71,10,64,8,"isConnectionExpensive"],[71,31,64,29],[71,34,64,32,"connection"],[71,44,64,42],[71,45,64,43,"saveData"],[71,53,64,51],[72,4,65,2],[72,10,65,8,"type"],[72,14,65,12],[72,17,65,15,"connection"],[72,27,65,25],[72,28,65,26,"type"],[72,32,65,30],[72,35,65,33,"typeMapping"],[72,46,65,44],[72,47,65,45,"connection"],[72,57,65,55],[72,58,65,56,"type"],[72,62,65,60],[72,63,65,61],[72,66,65,64,"isConnected"],[72,77,65,75],[72,80,65,78,"NetInfoStateType"],[72,103,65,94],[72,104,65,95,"other"],[72,109,65,100],[72,112,65,103,"NetInfoStateType"],[72,135,65,119],[72,136,65,120,"unknown"],[72,143,65,127],[73,4,67,2],[73,8,67,6,"type"],[73,12,67,10],[73,17,67,15,"NetInfoStateType"],[73,40,67,31],[73,41,67,32,"bluetooth"],[73,50,67,41],[73,52,67,43],[74,6,68,4],[74,12,68,10,"state"],[74,17,68,15],[74,20,68,18],[75,8,68,20],[75,11,68,23,"baseState"],[75,20,68,32],[76,8,69,6,"isConnected"],[76,19,69,17],[76,21,69,19],[76,25,69,23],[77,8,70,6,"type"],[77,12,70,10],[78,8,71,6,"details"],[78,15,71,13],[78,17,71,15],[79,10,72,8,"isConnectionExpensive"],[80,8,73,6],[81,6,74,4],[81,7,74,5],[82,6,75,4],[82,13,75,11,"state"],[82,18,75,16],[83,4,76,2],[83,5,76,3],[83,11,76,9],[83,15,76,13,"type"],[83,19,76,17],[83,24,76,22,"NetInfoStateType"],[83,47,76,38],[83,48,76,39,"cellular"],[83,56,76,47],[83,58,76,49],[84,6,77,4],[84,12,77,10,"state"],[84,17,77,15],[84,20,77,18],[85,8,77,20],[85,11,77,23,"baseState"],[85,20,77,32],[86,8,78,6,"isConnected"],[86,19,78,17],[86,21,78,19],[86,25,78,23],[87,8,79,6,"type"],[87,12,79,10],[88,8,80,6,"details"],[88,15,80,13],[88,17,80,15],[89,10,81,8,"isConnectionExpensive"],[89,31,81,29],[90,10,82,8,"cellularGeneration"],[90,28,82,26],[90,30,82,28,"effectiveTypeMapping"],[90,50,82,48],[90,51,82,49,"connection"],[90,61,82,59],[90,62,82,60,"effectiveType"],[90,75,82,73],[90,76,82,74],[90,80,82,78],[90,84,82,82],[91,10,83,8,"carrier"],[91,17,83,15],[91,19,83,17],[92,8,84,6],[93,6,85,4],[93,7,85,5],[94,6,86,4],[94,13,86,11,"state"],[94,18,86,16],[95,4,87,2],[95,5,87,3],[95,11,87,9],[95,15,87,13,"type"],[95,19,87,17],[95,24,87,22,"NetInfoStateType"],[95,47,87,38],[95,48,87,39,"ethernet"],[95,56,87,47],[95,58,87,49],[96,6,88,4],[96,12,88,10,"state"],[96,17,88,15],[96,20,88,18],[97,8,88,20],[97,11,88,23,"baseState"],[97,20,88,32],[98,8,89,6,"isConnected"],[98,19,89,17],[98,21,89,19],[98,25,89,23],[99,8,90,6,"type"],[99,12,90,10],[100,8,91,6,"details"],[100,15,91,13],[100,17,91,15],[101,10,92,8,"isConnectionExpensive"],[101,31,92,29],[102,10,93,8,"ipAddress"],[102,19,93,17],[102,21,93,19],[102,25,93,23],[103,10,94,8,"subnet"],[103,16,94,14],[103,18,94,16],[104,8,95,6],[105,6,96,4],[105,7,96,5],[106,6,97,4],[106,13,97,11,"state"],[106,18,97,16],[107,4,98,2],[107,5,98,3],[107,11,98,9],[107,15,98,13,"type"],[107,19,98,17],[107,24,98,22,"NetInfoStateType"],[107,47,98,38],[107,48,98,39,"wifi"],[107,52,98,43],[107,54,98,45],[108,6,99,4],[108,12,99,10,"state"],[108,17,99,15],[108,20,99,18],[109,8,99,20],[109,11,99,23,"baseState"],[109,20,99,32],[110,8,100,6,"isConnected"],[110,19,100,17],[110,21,100,19],[110,25,100,23],[111,8,101,6,"type"],[111,12,101,10],[112,8,102,6,"details"],[112,15,102,13],[112,17,102,15],[113,10,103,8,"isConnectionExpensive"],[113,31,103,29],[114,10,104,8,"ssid"],[114,14,104,12],[114,16,104,14],[114,20,104,18],[115,10,105,8,"bssid"],[115,15,105,13],[115,17,105,15],[115,21,105,19],[116,10,106,8,"strength"],[116,18,106,16],[116,20,106,18],[116,24,106,22],[117,10,107,8,"ipAddress"],[117,19,107,17],[117,21,107,19],[117,25,107,23],[118,10,108,8,"subnet"],[118,16,108,14],[118,18,108,16],[118,22,108,20],[119,10,109,8,"frequency"],[119,19,109,17],[119,21,109,19],[119,25,109,23],[120,10,110,8,"linkSpeed"],[120,19,110,17],[120,21,110,19],[120,25,110,23],[121,10,111,8,"rxLinkSpeed"],[121,21,111,19],[121,23,111,21],[121,27,111,25],[122,10,112,8,"txLinkSpeed"],[122,21,112,19],[122,23,112,21],[123,8,113,6],[124,6,114,4],[124,7,114,5],[125,6,115,4],[125,13,115,11,"state"],[125,18,115,16],[126,4,116,2],[126,5,116,3],[126,11,116,9],[126,15,116,13,"type"],[126,19,116,17],[126,24,116,22,"NetInfoStateType"],[126,47,116,38],[126,48,116,39,"wimax"],[126,53,116,44],[126,55,116,46],[127,6,117,4],[127,12,117,10,"state"],[127,17,117,15],[127,20,117,18],[128,8,117,20],[128,11,117,23,"baseState"],[128,20,117,32],[129,8,118,6,"isConnected"],[129,19,118,17],[129,21,118,19],[129,25,118,23],[130,8,119,6,"type"],[130,12,119,10],[131,8,120,6,"details"],[131,15,120,13],[131,17,120,15],[132,10,121,8,"isConnectionExpensive"],[133,8,122,6],[134,6,123,4],[134,7,123,5],[135,6,124,4],[135,13,124,11,"state"],[135,18,124,16],[136,4,125,2],[136,5,125,3],[136,11,125,9],[136,15,125,13,"type"],[136,19,125,17],[136,24,125,22,"NetInfoStateType"],[136,47,125,38],[136,48,125,39,"none"],[136,52,125,43],[136,54,125,45],[137,6,126,4],[137,12,126,10,"state"],[137,17,126,15],[137,20,126,18],[138,8,126,20],[138,11,126,23,"baseState"],[138,20,126,32],[139,8,127,6,"isConnected"],[139,19,127,17],[139,21,127,19],[139,26,127,24],[140,8,128,6,"isInternetReachable"],[140,27,128,25],[140,29,128,27],[140,34,128,32],[141,8,129,6,"type"],[141,12,129,10],[142,8,130,6,"details"],[142,15,130,13],[142,17,130,15],[143,6,131,4],[143,7,131,5],[144,6,132,4],[144,13,132,11,"state"],[144,18,132,16],[145,4,133,2],[145,5,133,3],[145,11,133,9],[145,15,133,13,"type"],[145,19,133,17],[145,24,133,22,"NetInfoStateType"],[145,47,133,38],[145,48,133,39,"unknown"],[145,55,133,46],[145,57,133,48],[146,6,134,4],[146,12,134,10,"state"],[146,17,134,15],[146,20,134,18],[147,8,134,20],[147,11,134,23,"baseState"],[147,20,134,32],[148,8,135,6,"isConnected"],[148,19,135,17],[149,8,136,6,"isInternetReachable"],[149,27,136,25],[149,29,136,27],[149,33,136,31],[150,8,137,6,"type"],[150,12,137,10],[151,8,138,6,"details"],[151,15,138,13],[151,17,138,15],[152,6,139,4],[152,7,139,5],[153,6,140,4],[153,13,140,11,"state"],[153,18,140,16],[154,4,141,2],[155,4,143,2],[155,10,143,8,"state"],[155,15,143,13],[155,18,143,16],[156,6,143,18],[156,9,143,21,"baseState"],[156,18,143,30],[157,6,144,4,"isConnected"],[157,17,144,15],[157,19,144,17],[157,23,144,21],[158,6,145,4,"type"],[158,10,145,8],[158,12,145,10,"NetInfoStateType"],[158,35,145,26],[158,36,145,27,"other"],[158,41,145,32],[159,6,146,4,"details"],[159,13,146,11],[159,15,146,13],[160,8,147,6,"isConnectionExpensive"],[161,6,148,4],[162,4,149,2],[162,5,149,3],[163,4,150,2],[163,11,150,9,"state"],[163,16,150,14],[164,2,151,0],[164,3,151,1],[165,2,153,0],[165,8,153,6,"handlers"],[165,16,153,14],[165,19,153,17],[165,21,153,19],[166,2,154,0],[166,8,154,6,"nativeHandlers"],[166,22,154,20],[166,25,154,23],[166,27,154,25],[167,2,155,0],[167,8,155,6,"RNCNetInfo"],[167,18,155,16],[167,21,155,19],[168,4,156,2,"addListener"],[168,15,156,13,"addListener"],[168,16,156,14,"type"],[168,20,156,18],[168,22,156,20,"handler"],[168,29,156,27],[168,31,156,29],[169,6,157,4],[169,14,157,12,"type"],[169,18,157,16],[170,8,158,6],[170,13,158,11,"DEVICE_CONNECTIVITY_EVENT"],[170,52,158,36],[171,10,159,8],[172,12,160,10],[172,18,160,16,"nativeHandler"],[172,31,160,29],[172,34,160,32,"nativeHandler"],[172,35,160,32],[172,40,160,38],[173,14,161,12,"handler"],[173,21,161,19],[173,22,161,20,"getCurrentState"],[173,37,161,35],[173,38,161,36],[173,39,161,37],[173,40,161,38],[174,12,162,10],[174,13,162,11],[175,12,164,10],[175,16,164,14,"connection"],[175,26,164,24],[175,28,164,26],[176,14,165,12,"connection"],[176,24,165,22],[176,25,165,23,"addEventListener"],[176,41,165,39],[176,42,165,40],[176,50,165,48],[176,52,165,50,"nativeHandler"],[176,65,165,63],[176,66,165,64],[177,12,166,10],[177,13,166,11],[177,19,166,17],[178,14,167,12],[178,18,167,16,"isWindowPresent"],[178,33,167,31],[178,35,167,33],[179,16,168,14,"window"],[179,22,168,20],[179,23,168,21,"addEventListener"],[179,39,168,37],[179,40,168,38],[179,48,168,46],[179,50,168,48,"nativeHandler"],[179,63,168,61],[179,65,168,63],[179,70,168,68],[179,71,168,69],[180,16,169,14,"window"],[180,22,169,20],[180,23,169,21,"addEventListener"],[180,39,169,37],[180,40,169,38],[180,49,169,47],[180,51,169,49,"nativeHandler"],[180,64,169,62],[180,66,169,64],[180,71,169,69],[180,72,169,70],[181,14,170,12],[182,12,171,10],[182,13,171,11],[182,14,171,12],[184,12,174,10,"handlers"],[184,20,174,18],[184,21,174,19,"push"],[184,25,174,23],[184,26,174,24,"handler"],[184,33,174,31],[184,34,174,32],[185,12,175,10,"nativeHandlers"],[185,26,175,24],[185,27,175,25,"push"],[185,31,175,29],[185,32,175,30,"nativeHandler"],[185,45,175,43],[185,46,175,44],[186,12,176,10],[187,10,177,8],[188,6,178,4],[189,4,179,2],[189,5,179,3],[190,4,181,2,"removeListeners"],[190,19,181,17,"removeListeners"],[190,20,181,18,"type"],[190,24,181,22],[190,26,181,24,"handler"],[190,33,181,31],[190,35,181,33],[191,6,182,4],[191,14,182,12,"type"],[191,18,182,16],[192,8,183,6],[192,13,183,11,"DEVICE_CONNECTIVITY_EVENT"],[192,52,183,36],[193,10,184,8],[194,12,185,10],[195,12,186,10],[195,18,186,16,"index"],[195,23,186,21],[195,26,186,24,"handlers"],[195,34,186,32],[195,35,186,33,"indexOf"],[195,42,186,40],[195,43,186,41,"handler"],[195,50,186,48],[195,51,186,49],[196,12,187,10],[196,18,187,16,"nativeHandler"],[196,31,187,29],[196,34,187,32,"nativeHandlers"],[196,48,187,46],[196,49,187,47,"index"],[196,54,187,52],[196,55,187,53],[197,12,189,10],[197,16,189,14,"connection"],[197,26,189,24],[197,28,189,26],[198,14,190,12,"connection"],[198,24,190,22],[198,25,190,23,"removeEventListener"],[198,44,190,42],[198,45,190,43],[198,53,190,51],[198,55,190,53,"nativeHandler"],[198,68,190,66],[198,69,190,67],[199,12,191,10],[199,13,191,11],[199,19,191,17],[200,14,192,12],[200,18,192,16,"isWindowPresent"],[200,33,192,31],[200,35,192,33],[201,16,193,14,"window"],[201,22,193,20],[201,23,193,21,"removeEventListener"],[201,42,193,40],[201,43,193,41],[201,51,193,49],[201,53,193,51,"nativeHandler"],[201,66,193,64],[201,67,193,65],[202,16,194,14,"window"],[202,22,194,20],[202,23,194,21,"removeEventListener"],[202,42,194,40],[202,43,194,41],[202,52,194,50],[202,54,194,52,"nativeHandler"],[202,67,194,65],[202,68,194,66],[203,14,195,12],[204,12,196,10],[204,13,196,11],[204,14,196,12],[206,12,199,10,"handlers"],[206,20,199,18],[206,21,199,19,"splice"],[206,27,199,25],[206,28,199,26,"index"],[206,33,199,31],[206,35,199,33],[206,36,199,34],[206,37,199,35],[207,12,200,10,"nativeHandlers"],[207,26,200,24],[207,27,200,25,"splice"],[207,33,200,31],[207,34,200,32,"index"],[207,39,200,37],[207,41,200,39],[207,42,200,40],[207,43,200,41],[208,12,201,10],[209,10,202,8],[210,6,203,4],[211,4,204,2],[211,5,204,3],[212,4,206,2],[212,10,206,8,"getCurrentState"],[212,25,206,23,"getCurrentState"],[212,26,206,24,"requestedInterface"],[212,44,206,42],[212,46,206,44],[213,6,207,4],[213,13,207,11,"getCurrentState"],[213,28,207,26],[213,29,207,27,"requestedInterface"],[213,47,207,45],[213,48,207,46],[214,4,208,2],[214,5,208,3],[215,4,210,2,"configure"],[215,13,210,11,"configure"],[215,14,210,11],[215,16,210,14],[216,6,211,4],[217,4,212,2],[218,2,214,0],[218,3,214,1],[219,2,214,2],[219,6,214,2,"_default"],[219,14,214,2],[219,17,214,2,"exports"],[219,24,214,2],[219,25,214,2,"default"],[219,32,214,2],[219,35,215,15,"RNCNetInfo"],[219,45,215,25],[220,0,215,25],[220,3]],"functionMap":{"names":["<global>","getCurrentState","RNCNetInfo.addListener","nativeHandler","RNCNetInfo.removeListeners","RNCNetInfo.getCurrentState","RNCNetInfo.configure"],"mappings":"AAA;wBCmC;CDmH;EEK;gCCI;WDE;GFiB;EIE;GJuB;EKE;GLE;EME;GNE"}},"type":"js/module"}]}