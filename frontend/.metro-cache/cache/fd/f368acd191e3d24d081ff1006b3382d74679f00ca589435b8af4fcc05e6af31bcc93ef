{"dependencies":[{"name":"../lib/httpQueue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"UNbPMuWtLYecEbQDRIZNKaHFi18=","exportNames":["*"],"imports":1}},{"name":"crypto-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":31,"index":75}}],"key":"TLjsXnAWOlf/gpObabse3HZX8VY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.trackPurchase = trackPurchase;\n  exports.trackCTA = trackCTA;\n  exports.trackImpression = trackImpression;\n  var _libHttpQueue = require(_dependencyMap[0], \"../lib/httpQueue\");\n  var _cryptoJs = require(_dependencyMap[1], \"crypto-js\");\n  var crypto = _interopDefault(_cryptoJs);\n  // Helper to generate HMAC signature\n  function generateHMAC(timestamp, body) {\n    const secret = process.env.EXPO_PUBLIC_HMAC_SECRET || 'dev-secret-key-change-in-production';\n    const payload = `${timestamp}.${JSON.stringify(body)}`;\n    return crypto.default.HmacSHA256(payload, secret).toString();\n  }\n\n  // Helper to generate idempotency key\n  function generateIdempotencyKey(type, data) {\n    const unique = `${type}-${Date.now()}-${JSON.stringify(data)}`;\n    return crypto.default.SHA256(unique).toString().substr(0, 16);\n  }\n  async function trackPurchase(url, body) {\n    const timestamp = Date.now();\n    const signature = generateHMAC(timestamp, body);\n    const idempotencyKey = generateIdempotencyKey('purchase', body);\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Timestamp': timestamp.toString(),\n      'X-Signature': signature,\n      'Idempotency-Key': idempotencyKey\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n      });\n      if (!response.ok && response.status !== 409) {\n        // If request fails (but not due to idempotency), queue it\n        await (0, _libHttpQueue.enqueue)(url, body, headers);\n        return {\n          queued: true,\n          status: response.status\n        };\n      }\n      return {\n        success: true,\n        status: response.status\n      };\n    } catch (error) {\n      // Network error - queue the request\n      await (0, _libHttpQueue.enqueue)(url, body, headers);\n      return {\n        queued: true,\n        error: error.message\n      };\n    }\n  }\n  async function trackCTA(url, body) {\n    const timestamp = Date.now();\n    const idempotencyKey = generateIdempotencyKey('cta', body);\n    const headers = {\n      'Content-Type': 'application/json',\n      'Idempotency-Key': idempotencyKey\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n      });\n      if (!response.ok && response.status !== 409) {\n        await (0, _libHttpQueue.enqueue)(url, body, headers);\n        return {\n          queued: true,\n          status: response.status\n        };\n      }\n      return {\n        success: true,\n        status: response.status\n      };\n    } catch (error) {\n      await (0, _libHttpQueue.enqueue)(url, body, headers);\n      return {\n        queued: true,\n        error: error.message\n      };\n    }\n  }\n  async function trackImpression(url, body) {\n    const timestamp = Date.now();\n    const idempotencyKey = generateIdempotencyKey('impression', body);\n    const headers = {\n      'Content-Type': 'application/json',\n      'Idempotency-Key': idempotencyKey\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n      });\n      if (!response.ok && response.status !== 409) {\n        await (0, _libHttpQueue.enqueue)(url, body, headers);\n        return {\n          queued: true,\n          status: response.status\n        };\n      }\n      return {\n        success: true,\n        status: response.status\n      };\n    } catch (error) {\n      await (0, _libHttpQueue.enqueue)(url, body, headers);\n      return {\n        queued: true,\n        error: error.message\n      };\n    }\n  }\n});","lineCount":131,"map":[[12,2,17,0,"exports"],[12,9,17,0],[12,10,17,0,"trackPurchase"],[12,23,17,0],[12,26,17,0,"trackPurchase"],[12,39,17,0],[13,2,50,0,"exports"],[13,9,50,0],[13,10,50,0,"trackCTA"],[13,18,50,0],[13,21,50,0,"trackCTA"],[13,29,50,0],[14,2,78,0,"exports"],[14,9,78,0],[14,10,78,0,"trackImpression"],[14,25,78,0],[14,28,78,0,"trackImpression"],[14,43,78,0],[15,2,1,0],[15,6,1,0,"_libHttpQueue"],[15,19,1,0],[15,22,1,0,"require"],[15,29,1,0],[15,30,1,0,"_dependencyMap"],[15,44,1,0],[16,2,2,0],[16,6,2,0,"_cryptoJs"],[16,15,2,0],[16,18,2,0,"require"],[16,25,2,0],[16,26,2,0,"_dependencyMap"],[16,40,2,0],[17,2,2,0],[17,6,2,0,"crypto"],[17,12,2,0],[17,15,2,0,"_interopDefault"],[17,30,2,0],[17,31,2,0,"_cryptoJs"],[17,40,2,0],[18,2,4,0],[19,2,5,0],[19,11,5,9,"generateHMAC"],[19,23,5,21,"generateHMAC"],[19,24,5,22,"timestamp"],[19,33,5,39],[19,35,5,41,"body"],[19,39,5,50],[19,41,5,60],[20,4,6,2],[20,10,6,8,"secret"],[20,16,6,14],[20,19,6,17,"process"],[20,26,6,24],[20,27,6,25,"env"],[20,30,6,28],[20,31,6,29,"EXPO_PUBLIC_HMAC_SECRET"],[20,54,6,52],[20,58,6,56],[20,95,6,93],[21,4,7,2],[21,10,7,8,"payload"],[21,17,7,15],[21,20,7,18],[21,23,7,21,"timestamp"],[21,32,7,30],[21,36,7,34,"JSON"],[21,40,7,38],[21,41,7,39,"stringify"],[21,50,7,48],[21,51,7,49,"body"],[21,55,7,53],[21,56,7,54],[21,58,7,56],[22,4,8,2],[22,11,8,9,"crypto"],[22,17,8,15],[22,18,8,15,"default"],[22,25,8,15],[22,26,8,16,"HmacSHA256"],[22,36,8,26],[22,37,8,27,"payload"],[22,44,8,34],[22,46,8,36,"secret"],[22,52,8,42],[22,53,8,43],[22,54,8,44,"toString"],[22,62,8,52],[22,63,8,53],[22,64,8,54],[23,2,9,0],[25,2,11,0],[26,2,12,0],[26,11,12,9,"generateIdempotencyKey"],[26,33,12,31,"generateIdempotencyKey"],[26,34,12,32,"type"],[26,38,12,44],[26,40,12,46,"data"],[26,44,12,55],[26,46,12,65],[27,4,13,2],[27,10,13,8,"unique"],[27,16,13,14],[27,19,13,17],[27,22,13,20,"type"],[27,26,13,24],[27,30,13,28,"Date"],[27,34,13,32],[27,35,13,33,"now"],[27,38,13,36],[27,39,13,37],[27,40,13,38],[27,44,13,42,"JSON"],[27,48,13,46],[27,49,13,47,"stringify"],[27,58,13,56],[27,59,13,57,"data"],[27,63,13,61],[27,64,13,62],[27,66,13,64],[28,4,14,2],[28,11,14,9,"crypto"],[28,17,14,15],[28,18,14,15,"default"],[28,25,14,15],[28,26,14,16,"SHA256"],[28,32,14,22],[28,33,14,23,"unique"],[28,39,14,29],[28,40,14,30],[28,41,14,31,"toString"],[28,49,14,39],[28,50,14,40],[28,51,14,41],[28,52,14,42,"substr"],[28,58,14,48],[28,59,14,49],[28,60,14,50],[28,62,14,52],[28,64,14,54],[28,65,14,55],[29,2,15,0],[30,2,17,7],[30,17,17,22,"trackPurchase"],[30,30,17,35,"trackPurchase"],[30,31,17,36,"url"],[30,34,17,47],[30,36,17,49,"body"],[30,40,17,58],[30,42,17,60],[31,4,18,2],[31,10,18,8,"timestamp"],[31,19,18,17],[31,22,18,20,"Date"],[31,26,18,24],[31,27,18,25,"now"],[31,30,18,28],[31,31,18,29],[31,32,18,30],[32,4,19,2],[32,10,19,8,"signature"],[32,19,19,17],[32,22,19,20,"generateHMAC"],[32,34,19,32],[32,35,19,33,"timestamp"],[32,44,19,42],[32,46,19,44,"body"],[32,50,19,48],[32,51,19,49],[33,4,20,2],[33,10,20,8,"idempotencyKey"],[33,24,20,22],[33,27,20,25,"generateIdempotencyKey"],[33,49,20,47],[33,50,20,48],[33,60,20,58],[33,62,20,60,"body"],[33,66,20,64],[33,67,20,65],[34,4,22,2],[34,10,22,8,"headers"],[34,17,22,15],[34,20,22,18],[35,6,23,4],[35,20,23,18],[35,22,23,20],[35,40,23,38],[36,6,24,4],[36,19,24,17],[36,21,24,19,"timestamp"],[36,30,24,28],[36,31,24,29,"toString"],[36,39,24,37],[36,40,24,38],[36,41,24,39],[37,6,25,4],[37,19,25,17],[37,21,25,19,"signature"],[37,30,25,28],[38,6,26,4],[38,23,26,21],[38,25,26,23,"idempotencyKey"],[39,4,27,2],[39,5,27,3],[40,4,29,2],[40,8,29,6],[41,6,30,4],[41,12,30,10,"response"],[41,20,30,18],[41,23,30,21],[41,29,30,27,"fetch"],[41,34,30,32],[41,35,30,33,"url"],[41,38,30,36],[41,40,30,38],[42,8,31,6,"method"],[42,14,31,12],[42,16,31,14],[42,22,31,20],[43,8,32,6,"headers"],[43,15,32,13],[44,8,33,6,"body"],[44,12,33,10],[44,14,33,12,"JSON"],[44,18,33,16],[44,19,33,17,"stringify"],[44,28,33,26],[44,29,33,27,"body"],[44,33,33,31],[45,6,34,4],[45,7,34,5],[45,8,34,6],[46,6,36,4],[46,10,36,8],[46,11,36,9,"response"],[46,19,36,17],[46,20,36,18,"ok"],[46,22,36,20],[46,26,36,24,"response"],[46,34,36,32],[46,35,36,33,"status"],[46,41,36,39],[46,46,36,44],[46,49,36,47],[46,51,36,49],[47,8,37,6],[48,8,38,6],[48,14,38,12],[48,18,38,12,"enqueue"],[48,31,38,19],[48,32,38,19,"enqueue"],[48,39,38,19],[48,41,38,20,"url"],[48,44,38,23],[48,46,38,25,"body"],[48,50,38,29],[48,52,38,31,"headers"],[48,59,38,38],[48,60,38,39],[49,8,39,6],[49,15,39,13],[50,10,39,15,"queued"],[50,16,39,21],[50,18,39,23],[50,22,39,27],[51,10,39,29,"status"],[51,16,39,35],[51,18,39,37,"response"],[51,26,39,45],[51,27,39,46,"status"],[52,8,39,53],[52,9,39,54],[53,6,40,4],[54,6,42,4],[54,13,42,11],[55,8,42,13,"success"],[55,15,42,20],[55,17,42,22],[55,21,42,26],[56,8,42,28,"status"],[56,14,42,34],[56,16,42,36,"response"],[56,24,42,44],[56,25,42,45,"status"],[57,6,42,52],[57,7,42,53],[58,4,43,2],[58,5,43,3],[58,6,43,4],[58,13,43,11,"error"],[58,18,43,16],[58,20,43,18],[59,6,44,4],[60,6,45,4],[60,12,45,10],[60,16,45,10,"enqueue"],[60,29,45,17],[60,30,45,17,"enqueue"],[60,37,45,17],[60,39,45,18,"url"],[60,42,45,21],[60,44,45,23,"body"],[60,48,45,27],[60,50,45,29,"headers"],[60,57,45,36],[60,58,45,37],[61,6,46,4],[61,13,46,11],[62,8,46,13,"queued"],[62,14,46,19],[62,16,46,21],[62,20,46,25],[63,8,46,27,"error"],[63,13,46,32],[63,15,46,34,"error"],[63,20,46,39],[63,21,46,40,"message"],[64,6,46,48],[64,7,46,49],[65,4,47,2],[66,2,48,0],[67,2,50,7],[67,17,50,22,"trackCTA"],[67,25,50,30,"trackCTA"],[67,26,50,31,"url"],[67,29,50,42],[67,31,50,44,"body"],[67,35,50,53],[67,37,50,55],[68,4,51,2],[68,10,51,8,"timestamp"],[68,19,51,17],[68,22,51,20,"Date"],[68,26,51,24],[68,27,51,25,"now"],[68,30,51,28],[68,31,51,29],[68,32,51,30],[69,4,52,2],[69,10,52,8,"idempotencyKey"],[69,24,52,22],[69,27,52,25,"generateIdempotencyKey"],[69,49,52,47],[69,50,52,48],[69,55,52,53],[69,57,52,55,"body"],[69,61,52,59],[69,62,52,60],[70,4,54,2],[70,10,54,8,"headers"],[70,17,54,15],[70,20,54,18],[71,6,55,4],[71,20,55,18],[71,22,55,20],[71,40,55,38],[72,6,56,4],[72,23,56,21],[72,25,56,23,"idempotencyKey"],[73,4,57,2],[73,5,57,3],[74,4,59,2],[74,8,59,6],[75,6,60,4],[75,12,60,10,"response"],[75,20,60,18],[75,23,60,21],[75,29,60,27,"fetch"],[75,34,60,32],[75,35,60,33,"url"],[75,38,60,36],[75,40,60,38],[76,8,61,6,"method"],[76,14,61,12],[76,16,61,14],[76,22,61,20],[77,8,62,6,"headers"],[77,15,62,13],[78,8,63,6,"body"],[78,12,63,10],[78,14,63,12,"JSON"],[78,18,63,16],[78,19,63,17,"stringify"],[78,28,63,26],[78,29,63,27,"body"],[78,33,63,31],[79,6,64,4],[79,7,64,5],[79,8,64,6],[80,6,66,4],[80,10,66,8],[80,11,66,9,"response"],[80,19,66,17],[80,20,66,18,"ok"],[80,22,66,20],[80,26,66,24,"response"],[80,34,66,32],[80,35,66,33,"status"],[80,41,66,39],[80,46,66,44],[80,49,66,47],[80,51,66,49],[81,8,67,6],[81,14,67,12],[81,18,67,12,"enqueue"],[81,31,67,19],[81,32,67,19,"enqueue"],[81,39,67,19],[81,41,67,20,"url"],[81,44,67,23],[81,46,67,25,"body"],[81,50,67,29],[81,52,67,31,"headers"],[81,59,67,38],[81,60,67,39],[82,8,68,6],[82,15,68,13],[83,10,68,15,"queued"],[83,16,68,21],[83,18,68,23],[83,22,68,27],[84,10,68,29,"status"],[84,16,68,35],[84,18,68,37,"response"],[84,26,68,45],[84,27,68,46,"status"],[85,8,68,53],[85,9,68,54],[86,6,69,4],[87,6,71,4],[87,13,71,11],[88,8,71,13,"success"],[88,15,71,20],[88,17,71,22],[88,21,71,26],[89,8,71,28,"status"],[89,14,71,34],[89,16,71,36,"response"],[89,24,71,44],[89,25,71,45,"status"],[90,6,71,52],[90,7,71,53],[91,4,72,2],[91,5,72,3],[91,6,72,4],[91,13,72,11,"error"],[91,18,72,16],[91,20,72,18],[92,6,73,4],[92,12,73,10],[92,16,73,10,"enqueue"],[92,29,73,17],[92,30,73,17,"enqueue"],[92,37,73,17],[92,39,73,18,"url"],[92,42,73,21],[92,44,73,23,"body"],[92,48,73,27],[92,50,73,29,"headers"],[92,57,73,36],[92,58,73,37],[93,6,74,4],[93,13,74,11],[94,8,74,13,"queued"],[94,14,74,19],[94,16,74,21],[94,20,74,25],[95,8,74,27,"error"],[95,13,74,32],[95,15,74,34,"error"],[95,20,74,39],[95,21,74,40,"message"],[96,6,74,48],[96,7,74,49],[97,4,75,2],[98,2,76,0],[99,2,78,7],[99,17,78,22,"trackImpression"],[99,32,78,37,"trackImpression"],[99,33,78,38,"url"],[99,36,78,49],[99,38,78,51,"body"],[99,42,78,60],[99,44,78,62],[100,4,79,2],[100,10,79,8,"timestamp"],[100,19,79,17],[100,22,79,20,"Date"],[100,26,79,24],[100,27,79,25,"now"],[100,30,79,28],[100,31,79,29],[100,32,79,30],[101,4,80,2],[101,10,80,8,"idempotencyKey"],[101,24,80,22],[101,27,80,25,"generateIdempotencyKey"],[101,49,80,47],[101,50,80,48],[101,62,80,60],[101,64,80,62,"body"],[101,68,80,66],[101,69,80,67],[102,4,82,2],[102,10,82,8,"headers"],[102,17,82,15],[102,20,82,18],[103,6,83,4],[103,20,83,18],[103,22,83,20],[103,40,83,38],[104,6,84,4],[104,23,84,21],[104,25,84,23,"idempotencyKey"],[105,4,85,2],[105,5,85,3],[106,4,87,2],[106,8,87,6],[107,6,88,4],[107,12,88,10,"response"],[107,20,88,18],[107,23,88,21],[107,29,88,27,"fetch"],[107,34,88,32],[107,35,88,33,"url"],[107,38,88,36],[107,40,88,38],[108,8,89,6,"method"],[108,14,89,12],[108,16,89,14],[108,22,89,20],[109,8,90,6,"headers"],[109,15,90,13],[110,8,91,6,"body"],[110,12,91,10],[110,14,91,12,"JSON"],[110,18,91,16],[110,19,91,17,"stringify"],[110,28,91,26],[110,29,91,27,"body"],[110,33,91,31],[111,6,92,4],[111,7,92,5],[111,8,92,6],[112,6,94,4],[112,10,94,8],[112,11,94,9,"response"],[112,19,94,17],[112,20,94,18,"ok"],[112,22,94,20],[112,26,94,24,"response"],[112,34,94,32],[112,35,94,33,"status"],[112,41,94,39],[112,46,94,44],[112,49,94,47],[112,51,94,49],[113,8,95,6],[113,14,95,12],[113,18,95,12,"enqueue"],[113,31,95,19],[113,32,95,19,"enqueue"],[113,39,95,19],[113,41,95,20,"url"],[113,44,95,23],[113,46,95,25,"body"],[113,50,95,29],[113,52,95,31,"headers"],[113,59,95,38],[113,60,95,39],[114,8,96,6],[114,15,96,13],[115,10,96,15,"queued"],[115,16,96,21],[115,18,96,23],[115,22,96,27],[116,10,96,29,"status"],[116,16,96,35],[116,18,96,37,"response"],[116,26,96,45],[116,27,96,46,"status"],[117,8,96,53],[117,9,96,54],[118,6,97,4],[119,6,99,4],[119,13,99,11],[120,8,99,13,"success"],[120,15,99,20],[120,17,99,22],[120,21,99,26],[121,8,99,28,"status"],[121,14,99,34],[121,16,99,36,"response"],[121,24,99,44],[121,25,99,45,"status"],[122,6,99,52],[122,7,99,53],[123,4,100,2],[123,5,100,3],[123,6,100,4],[123,13,100,11,"error"],[123,18,100,16],[123,20,100,18],[124,6,101,4],[124,12,101,10],[124,16,101,10,"enqueue"],[124,29,101,17],[124,30,101,17,"enqueue"],[124,37,101,17],[124,39,101,18,"url"],[124,42,101,21],[124,44,101,23,"body"],[124,48,101,27],[124,50,101,29,"headers"],[124,57,101,36],[124,58,101,37],[125,6,102,4],[125,13,102,11],[126,8,102,13,"queued"],[126,14,102,19],[126,16,102,21],[126,20,102,25],[127,8,102,27,"error"],[127,13,102,32],[127,15,102,34,"error"],[127,20,102,39],[127,21,102,40,"message"],[128,6,102,48],[128,7,102,49],[129,4,103,2],[130,2,104,0],[131,0,104,1],[131,3]],"functionMap":{"names":["<global>","generateHMAC","generateIdempotencyKey","trackPurchase","trackCTA","trackImpression"],"mappings":"AAA;ACI;CDI;AEG;CFG;OGE;CH+B;OIE;CJ0B;OKE"},"hasCjsExports":false},"type":"js/module"}]}