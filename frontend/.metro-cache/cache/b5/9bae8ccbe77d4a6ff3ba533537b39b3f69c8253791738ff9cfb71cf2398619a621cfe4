{"dependencies":[{"name":"./processColor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":21},"end":{"line":16,"column":46}}],"key":"x3M7MCYAfAbRBHXsfUrvU5X7AMk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = processBackgroundImage;\n  const processColor = require(_dependencyMap[0], \"./processColor\").default;\n  const DIRECTION_KEYWORD_REGEX = /^to\\s+(?:top|bottom|left|right)(?:\\s+(?:top|bottom|left|right))?/i;\n  const ANGLE_UNIT_REGEX = /^([+-]?\\d*\\.?\\d+)(deg|grad|rad|turn)$/i;\n  const DEFAULT_DIRECTION = {\n    type: 'angle',\n    value: 180\n  };\n  function processBackgroundImage(backgroundImage) {\n    let result = [];\n    if (backgroundImage == null) {\n      return result;\n    }\n    if (typeof backgroundImage === 'string') {\n      result = parseCSSLinearGradient(backgroundImage.replace(/\\n/g, ' '));\n    } else if (Array.isArray(backgroundImage)) {\n      for (const bgImage of backgroundImage) {\n        const processedColorStops = [];\n        for (let index = 0; index < bgImage.colorStops.length; index++) {\n          const colorStop = bgImage.colorStops[index];\n          const positions = colorStop.positions;\n          if (colorStop.color == null && Array.isArray(positions) && positions.length === 1) {\n            const position = positions[0];\n            if (typeof position === 'number' || typeof position === 'string' && position.endsWith('%')) {\n              processedColorStops.push({\n                color: null,\n                position\n              });\n            } else {\n              return [];\n            }\n          } else {\n            const processedColor = processColor(colorStop.color);\n            if (processedColor == null) {\n              return [];\n            }\n            if (positions != null && positions.length > 0) {\n              for (const position of positions) {\n                if (typeof position === 'number' || typeof position === 'string' && position.endsWith('%')) {\n                  processedColorStops.push({\n                    color: processedColor,\n                    position\n                  });\n                } else {\n                  return [];\n                }\n              }\n            } else {\n              processedColorStops.push({\n                color: processedColor,\n                position: null\n              });\n            }\n          }\n        }\n        let direction = DEFAULT_DIRECTION;\n        const bgDirection = bgImage.direction != null ? bgImage.direction.toLowerCase() : null;\n        if (bgDirection != null) {\n          if (ANGLE_UNIT_REGEX.test(bgDirection)) {\n            const parsedAngle = getAngleInDegrees(bgDirection);\n            if (parsedAngle != null) {\n              direction = {\n                type: 'angle',\n                value: parsedAngle\n              };\n            } else {\n              return [];\n            }\n          } else if (DIRECTION_KEYWORD_REGEX.test(bgDirection)) {\n            const parsedDirection = getDirectionForKeyword(bgDirection);\n            if (parsedDirection != null) {\n              direction = parsedDirection;\n            } else {\n              return [];\n            }\n          } else {\n            return [];\n          }\n        }\n        result = result.concat({\n          type: 'linearGradient',\n          direction,\n          colorStops: processedColorStops\n        });\n      }\n    }\n    return result;\n  }\n  function parseCSSLinearGradient(cssString) {\n    const gradients = [];\n    let match;\n    const linearGradientRegex = /linear-gradient\\s*\\(((?:\\([^)]*\\)|[^())])*)\\)/gi;\n    while (match = linearGradientRegex.exec(cssString)) {\n      const gradientContent = match[1];\n      const parts = gradientContent.split(',');\n      let direction = DEFAULT_DIRECTION;\n      const trimmedDirection = parts[0].trim().toLowerCase();\n      if (ANGLE_UNIT_REGEX.test(trimmedDirection)) {\n        const parsedAngle = getAngleInDegrees(trimmedDirection);\n        if (parsedAngle != null) {\n          direction = {\n            type: 'angle',\n            value: parsedAngle\n          };\n          parts.shift();\n        } else {\n          return [];\n        }\n      } else if (DIRECTION_KEYWORD_REGEX.test(trimmedDirection)) {\n        const parsedDirection = getDirectionForKeyword(trimmedDirection);\n        if (parsedDirection != null) {\n          direction = parsedDirection;\n          parts.shift();\n        } else {\n          return [];\n        }\n      }\n      const colorStopsString = parts.join(',');\n      const colorStops = [];\n      const stops = colorStopsString.split(/,(?![^(]*\\))/);\n      let prevStop = null;\n      for (let i = 0; i < stops.length; i++) {\n        const stop = stops[i];\n        const trimmedStop = stop.trim().toLowerCase();\n        const colorStopParts = trimmedStop.match(/\\S+\\([^)]*\\)|\\S+/g);\n        if (colorStopParts == null) {\n          return [];\n        }\n        if (colorStopParts.length === 3) {\n          const color = colorStopParts[0];\n          const position1 = getPositionFromCSSValue(colorStopParts[1]);\n          const position2 = getPositionFromCSSValue(colorStopParts[2]);\n          const processedColor = processColor(color);\n          if (processedColor == null) {\n            return [];\n          }\n          if (position1 == null || position2 == null) {\n            return [];\n          }\n          colorStops.push({\n            color: processedColor,\n            position: position1\n          });\n          colorStops.push({\n            color: processedColor,\n            position: position2\n          });\n        } else if (colorStopParts.length === 2) {\n          const color = colorStopParts[0];\n          const position = getPositionFromCSSValue(colorStopParts[1]);\n          const processedColor = processColor(color);\n          if (processedColor == null) {\n            return [];\n          }\n          if (position == null) {\n            return [];\n          }\n          colorStops.push({\n            color: processedColor,\n            position\n          });\n        } else if (colorStopParts.length === 1) {\n          const position = getPositionFromCSSValue(colorStopParts[0]);\n          if (position != null) {\n            if (prevStop != null && prevStop.length === 1 && getPositionFromCSSValue(prevStop[0]) != null || i === stops.length - 1 || i === 0) {\n              return [];\n            }\n            colorStops.push({\n              color: null,\n              position\n            });\n          } else {\n            const processedColor = processColor(colorStopParts[0]);\n            if (processedColor == null) {\n              return [];\n            }\n            colorStops.push({\n              color: processedColor,\n              position: null\n            });\n          }\n        } else {\n          return [];\n        }\n        prevStop = colorStopParts;\n      }\n      gradients.push({\n        type: 'linearGradient',\n        direction,\n        colorStops\n      });\n    }\n    return gradients;\n  }\n  function getDirectionForKeyword(direction) {\n    if (direction == null) {\n      return null;\n    }\n    const normalized = direction.replace(/\\s+/g, ' ').toLowerCase();\n    switch (normalized) {\n      case 'to top':\n        return {\n          type: 'angle',\n          value: 0\n        };\n      case 'to right':\n        return {\n          type: 'angle',\n          value: 90\n        };\n      case 'to bottom':\n        return {\n          type: 'angle',\n          value: 180\n        };\n      case 'to left':\n        return {\n          type: 'angle',\n          value: 270\n        };\n      case 'to top right':\n      case 'to right top':\n        return {\n          type: 'keyword',\n          value: 'to top right'\n        };\n      case 'to bottom right':\n      case 'to right bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom right'\n        };\n      case 'to top left':\n      case 'to left top':\n        return {\n          type: 'keyword',\n          value: 'to top left'\n        };\n      case 'to bottom left':\n      case 'to left bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom left'\n        };\n      default:\n        return null;\n    }\n  }\n  function getAngleInDegrees(angle) {\n    if (angle == null) {\n      return null;\n    }\n    const match = angle.match(ANGLE_UNIT_REGEX);\n    if (!match) {\n      return null;\n    }\n    const [, value, unit] = match;\n    const numericValue = parseFloat(value);\n    switch (unit) {\n      case 'deg':\n        return numericValue;\n      case 'grad':\n        return numericValue * 0.9;\n      case 'rad':\n        return numericValue * 180 / Math.PI;\n      case 'turn':\n        return numericValue * 360;\n      default:\n        return null;\n    }\n  }\n  function getPositionFromCSSValue(position) {\n    if (position.endsWith('px')) {\n      return parseFloat(position);\n    }\n    if (position.endsWith('%')) {\n      return position;\n    }\n  }\n});","lineCount":286,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13,"exports"],[7,9,11,13],[7,10,11,13,"default"],[7,17,11,13],[7,20,11,13,"processBackgroundImage"],[7,42,11,13],[8,2,16,0],[8,8,16,6,"processColor"],[8,20,16,18],[8,23,16,21,"require"],[8,30,16,28],[8,31,16,28,"_dependencyMap"],[8,45,16,28],[8,66,16,45],[8,67,16,46],[8,68,16,47,"default"],[8,75,16,54],[9,2,17,0],[9,8,17,6,"DIRECTION_KEYWORD_REGEX"],[9,31,17,29],[9,34,18,2],[9,101,18,69],[10,2,19,0],[10,8,19,6,"ANGLE_UNIT_REGEX"],[10,24,19,22],[10,27,19,25],[10,67,19,65],[11,2,39,0],[11,8,39,6,"DEFAULT_DIRECTION"],[11,25,39,48],[11,28,39,51],[12,4,40,2,"type"],[12,8,40,6],[12,10,40,8],[12,17,40,15],[13,4,41,2,"value"],[13,9,41,7],[13,11,41,9],[14,2,42,0],[14,3,42,1],[15,2,44,15],[15,11,44,24,"processBackgroundImage"],[15,33,44,46,"processBackgroundImage"],[15,34,45,2,"backgroundImage"],[15,49,45,60],[15,51,46,39],[16,4,47,2],[16,8,47,6,"result"],[16,14,47,49],[16,17,47,52],[16,19,47,54],[17,4,48,2],[17,8,48,6,"backgroundImage"],[17,23,48,21],[17,27,48,25],[17,31,48,29],[17,33,48,31],[18,6,49,4],[18,13,49,11,"result"],[18,19,49,17],[19,4,50,2],[20,4,52,2],[20,8,52,6],[20,15,52,13,"backgroundImage"],[20,30,52,28],[20,35,52,33],[20,43,52,41],[20,45,52,43],[21,6,53,4,"result"],[21,12,53,10],[21,15,53,13,"parseCSSLinearGradient"],[21,37,53,35],[21,38,53,36,"backgroundImage"],[21,53,53,51],[21,54,53,52,"replace"],[21,61,53,59],[21,62,53,60],[21,67,53,65],[21,69,53,67],[21,72,53,70],[21,73,53,71],[21,74,53,72],[22,4,54,2],[22,5,54,3],[22,11,54,9],[22,15,54,13,"Array"],[22,20,54,18],[22,21,54,19,"isArray"],[22,28,54,26],[22,29,54,27,"backgroundImage"],[22,44,54,42],[22,45,54,43],[22,47,54,45],[23,6,55,4],[23,11,55,9],[23,17,55,15,"bgImage"],[23,24,55,22],[23,28,55,26,"backgroundImage"],[23,43,55,41],[23,45,55,43],[24,8,56,6],[24,14,56,12,"processedColorStops"],[24,33,59,8],[24,36,59,11],[24,38,59,13],[25,8,60,6],[25,13,60,11],[25,17,60,15,"index"],[25,22,60,20],[25,25,60,23],[25,26,60,24],[25,28,60,26,"index"],[25,33,60,31],[25,36,60,34,"bgImage"],[25,43,60,41],[25,44,60,42,"colorStops"],[25,54,60,52],[25,55,60,53,"length"],[25,61,60,59],[25,63,60,61,"index"],[25,68,60,66],[25,70,60,68],[25,72,60,70],[26,10,61,8],[26,16,61,14,"colorStop"],[26,25,61,23],[26,28,61,26,"bgImage"],[26,35,61,33],[26,36,61,34,"colorStops"],[26,46,61,44],[26,47,61,45,"index"],[26,52,61,50],[26,53,61,51],[27,10,62,8],[27,16,62,14,"positions"],[27,25,62,23],[27,28,62,26,"colorStop"],[27,37,62,35],[27,38,62,36,"positions"],[27,47,62,45],[28,10,64,8],[28,14,65,10,"colorStop"],[28,23,65,19],[28,24,65,20,"color"],[28,29,65,25],[28,33,65,29],[28,37,65,33],[28,41,66,10,"Array"],[28,46,66,15],[28,47,66,16,"isArray"],[28,54,66,23],[28,55,66,24,"positions"],[28,64,66,33],[28,65,66,34],[28,69,67,10,"positions"],[28,78,67,19],[28,79,67,20,"length"],[28,85,67,26],[28,90,67,31],[28,91,67,32],[28,93,68,10],[29,12,69,10],[29,18,69,16,"position"],[29,26,69,24],[29,29,69,27,"positions"],[29,38,69,36],[29,39,69,37],[29,40,69,38],[29,41,69,39],[30,12,70,10],[30,16,71,12],[30,23,71,19,"position"],[30,31,71,27],[30,36,71,32],[30,44,71,40],[30,48,72,13],[30,55,72,20,"position"],[30,63,72,28],[30,68,72,33],[30,76,72,41],[30,80,72,45,"position"],[30,88,72,53],[30,89,72,54,"endsWith"],[30,97,72,62],[30,98,72,63],[30,101,72,66],[30,102,72,68],[30,104,73,12],[31,14,74,12,"processedColorStops"],[31,33,74,31],[31,34,74,32,"push"],[31,38,74,36],[31,39,74,37],[32,16,75,14,"color"],[32,21,75,19],[32,23,75,21],[32,27,75,25],[33,16,76,14,"position"],[34,14,77,12],[34,15,77,13],[34,16,77,14],[35,12,78,10],[35,13,78,11],[35,19,78,17],[36,14,80,12],[36,21,80,19],[36,23,80,21],[37,12,81,10],[38,10,82,8],[38,11,82,9],[38,17,82,15],[39,12,83,10],[39,18,83,16,"processedColor"],[39,32,83,30],[39,35,83,33,"processColor"],[39,47,83,45],[39,48,83,46,"colorStop"],[39,57,83,55],[39,58,83,56,"color"],[39,63,83,61],[39,64,83,62],[40,12,84,10],[40,16,84,14,"processedColor"],[40,30,84,28],[40,34,84,32],[40,38,84,36],[40,40,84,38],[41,14,86,12],[41,21,86,19],[41,23,86,21],[42,12,87,10],[43,12,88,10],[43,16,88,14,"positions"],[43,25,88,23],[43,29,88,27],[43,33,88,31],[43,37,88,35,"positions"],[43,46,88,44],[43,47,88,45,"length"],[43,53,88,51],[43,56,88,54],[43,57,88,55],[43,59,88,57],[44,14,89,12],[44,19,89,17],[44,25,89,23,"position"],[44,33,89,31],[44,37,89,35,"positions"],[44,46,89,44],[44,48,89,46],[45,16,90,14],[45,20,91,16],[45,27,91,23,"position"],[45,35,91,31],[45,40,91,36],[45,48,91,44],[45,52,92,17],[45,59,92,24,"position"],[45,67,92,32],[45,72,92,37],[45,80,92,45],[45,84,92,49,"position"],[45,92,92,57],[45,93,92,58,"endsWith"],[45,101,92,66],[45,102,92,67],[45,105,92,70],[45,106,92,72],[45,108,93,16],[46,18,94,16,"processedColorStops"],[46,37,94,35],[46,38,94,36,"push"],[46,42,94,40],[46,43,94,41],[47,20,95,18,"color"],[47,25,95,23],[47,27,95,25,"processedColor"],[47,41,95,39],[48,20,96,18,"position"],[49,18,97,16],[49,19,97,17],[49,20,97,18],[50,16,98,14],[50,17,98,15],[50,23,98,21],[51,18,100,16],[51,25,100,23],[51,27,100,25],[52,16,101,14],[53,14,102,12],[54,12,103,10],[54,13,103,11],[54,19,103,17],[55,14,104,12,"processedColorStops"],[55,33,104,31],[55,34,104,32,"push"],[55,38,104,36],[55,39,104,37],[56,16,105,14,"color"],[56,21,105,19],[56,23,105,21,"processedColor"],[56,37,105,35],[57,16,106,14,"position"],[57,24,106,22],[57,26,106,24],[58,14,107,12],[58,15,107,13],[58,16,107,14],[59,12,108,10],[60,10,109,8],[61,8,110,6],[62,8,112,6],[62,12,112,10,"direction"],[62,21,112,44],[62,24,112,47,"DEFAULT_DIRECTION"],[62,41,112,64],[63,8,113,6],[63,14,113,12,"bgDirection"],[63,25,113,23],[63,28,114,8,"bgImage"],[63,35,114,15],[63,36,114,16,"direction"],[63,45,114,25],[63,49,114,29],[63,53,114,33],[63,56,114,36,"bgImage"],[63,63,114,43],[63,64,114,44,"direction"],[63,73,114,53],[63,74,114,54,"toLowerCase"],[63,85,114,65],[63,86,114,66],[63,87,114,67],[63,90,114,70],[63,94,114,74],[64,8,116,6],[64,12,116,10,"bgDirection"],[64,23,116,21],[64,27,116,25],[64,31,116,29],[64,33,116,31],[65,10,117,8],[65,14,117,12,"ANGLE_UNIT_REGEX"],[65,30,117,28],[65,31,117,29,"test"],[65,35,117,33],[65,36,117,34,"bgDirection"],[65,47,117,45],[65,48,117,46],[65,50,117,48],[66,12,118,10],[66,18,118,16,"parsedAngle"],[66,29,118,27],[66,32,118,30,"getAngleInDegrees"],[66,49,118,47],[66,50,118,48,"bgDirection"],[66,61,118,59],[66,62,118,60],[67,12,119,10],[67,16,119,14,"parsedAngle"],[67,27,119,25],[67,31,119,29],[67,35,119,33],[67,37,119,35],[68,14,120,12,"direction"],[68,23,120,21],[68,26,120,24],[69,16,121,14,"type"],[69,20,121,18],[69,22,121,20],[69,29,121,27],[70,16,122,14,"value"],[70,21,122,19],[70,23,122,21,"parsedAngle"],[71,14,123,12],[71,15,123,13],[72,12,124,10],[72,13,124,11],[72,19,124,17],[73,14,126,12],[73,21,126,19],[73,23,126,21],[74,12,127,10],[75,10,128,8],[75,11,128,9],[75,17,128,15],[75,21,128,19,"DIRECTION_KEYWORD_REGEX"],[75,44,128,42],[75,45,128,43,"test"],[75,49,128,47],[75,50,128,48,"bgDirection"],[75,61,128,59],[75,62,128,60],[75,64,128,62],[76,12,129,10],[76,18,129,16,"parsedDirection"],[76,33,129,31],[76,36,129,34,"getDirectionForKeyword"],[76,58,129,56],[76,59,129,57,"bgDirection"],[76,70,129,68],[76,71,129,69],[77,12,130,10],[77,16,130,14,"parsedDirection"],[77,31,130,29],[77,35,130,33],[77,39,130,37],[77,41,130,39],[78,14,131,12,"direction"],[78,23,131,21],[78,26,131,24,"parsedDirection"],[78,41,131,39],[79,12,132,10],[79,13,132,11],[79,19,132,17],[80,14,134,12],[80,21,134,19],[80,23,134,21],[81,12,135,10],[82,10,136,8],[82,11,136,9],[82,17,136,15],[83,12,138,10],[83,19,138,17],[83,21,138,19],[84,10,139,8],[85,8,140,6],[86,8,142,6,"result"],[86,14,142,12],[86,17,142,15,"result"],[86,23,142,21],[86,24,142,22,"concat"],[86,30,142,28],[86,31,142,29],[87,10,143,8,"type"],[87,14,143,12],[87,16,143,14],[87,32,143,30],[88,10,144,8,"direction"],[88,19,144,17],[89,10,145,8,"colorStops"],[89,20,145,18],[89,22,145,20,"processedColorStops"],[90,8,146,6],[90,9,146,7],[90,10,146,8],[91,6,147,4],[92,4,148,2],[93,4,150,2],[93,11,150,9,"result"],[93,17,150,15],[94,2,151,0],[95,2,153,0],[95,11,153,9,"parseCSSLinearGradient"],[95,33,153,31,"parseCSSLinearGradient"],[95,34,154,2,"cssString"],[95,43,154,19],[95,45,155,39],[96,4,156,2],[96,10,156,8,"gradients"],[96,19,156,17],[96,22,156,20],[96,24,156,22],[97,4,157,2],[97,8,157,6,"match"],[97,13,157,11],[98,4,160,2],[98,10,160,8,"linearGradientRegex"],[98,29,160,27],[98,32,160,30],[98,81,160,79],[99,4,162,2],[99,11,162,10,"match"],[99,16,162,15],[99,19,162,18,"linearGradientRegex"],[99,38,162,37],[99,39,162,38,"exec"],[99,43,162,42],[99,44,162,43,"cssString"],[99,53,162,52],[99,54,162,53],[99,56,162,56],[100,6,163,4],[100,12,163,10,"gradientContent"],[100,27,163,25],[100,30,163,28,"match"],[100,35,163,33],[100,36,163,34],[100,37,163,35],[100,38,163,36],[101,6,164,4],[101,12,164,10,"parts"],[101,17,164,15],[101,20,164,18,"gradientContent"],[101,35,164,33],[101,36,164,34,"split"],[101,41,164,39],[101,42,164,40],[101,45,164,43],[101,46,164,44],[102,6,165,4],[102,10,165,8,"direction"],[102,19,165,42],[102,22,165,45,"DEFAULT_DIRECTION"],[102,39,165,62],[103,6,166,4],[103,12,166,10,"trimmedDirection"],[103,28,166,26],[103,31,166,29,"parts"],[103,36,166,34],[103,37,166,35],[103,38,166,36],[103,39,166,37],[103,40,166,38,"trim"],[103,44,166,42],[103,45,166,43],[103,46,166,44],[103,47,166,45,"toLowerCase"],[103,58,166,56],[103,59,166,57],[103,60,166,58],[104,6,168,4],[104,10,168,8,"ANGLE_UNIT_REGEX"],[104,26,168,24],[104,27,168,25,"test"],[104,31,168,29],[104,32,168,30,"trimmedDirection"],[104,48,168,46],[104,49,168,47],[104,51,168,49],[105,8,169,6],[105,14,169,12,"parsedAngle"],[105,25,169,23],[105,28,169,26,"getAngleInDegrees"],[105,45,169,43],[105,46,169,44,"trimmedDirection"],[105,62,169,60],[105,63,169,61],[106,8,170,6],[106,12,170,10,"parsedAngle"],[106,23,170,21],[106,27,170,25],[106,31,170,29],[106,33,170,31],[107,10,171,8,"direction"],[107,19,171,17],[107,22,171,20],[108,12,172,10,"type"],[108,16,172,14],[108,18,172,16],[108,25,172,23],[109,12,173,10,"value"],[109,17,173,15],[109,19,173,17,"parsedAngle"],[110,10,174,8],[110,11,174,9],[111,10,175,8,"parts"],[111,15,175,13],[111,16,175,14,"shift"],[111,21,175,19],[111,22,175,20],[111,23,175,21],[112,8,176,6],[112,9,176,7],[112,15,176,13],[113,10,178,8],[113,17,178,15],[113,19,178,17],[114,8,179,6],[115,6,180,4],[115,7,180,5],[115,13,180,11],[115,17,180,15,"DIRECTION_KEYWORD_REGEX"],[115,40,180,38],[115,41,180,39,"test"],[115,45,180,43],[115,46,180,44,"trimmedDirection"],[115,62,180,60],[115,63,180,61],[115,65,180,63],[116,8,181,6],[116,14,181,12,"parsedDirection"],[116,29,181,27],[116,32,181,30,"getDirectionForKeyword"],[116,54,181,52],[116,55,181,53,"trimmedDirection"],[116,71,181,69],[116,72,181,70],[117,8,182,6],[117,12,182,10,"parsedDirection"],[117,27,182,25],[117,31,182,29],[117,35,182,33],[117,37,182,35],[118,10,183,8,"direction"],[118,19,183,17],[118,22,183,20,"parsedDirection"],[118,37,183,35],[119,10,184,8,"parts"],[119,15,184,13],[119,16,184,14,"shift"],[119,21,184,19],[119,22,184,20],[119,23,184,21],[120,8,185,6],[120,9,185,7],[120,15,185,13],[121,10,187,8],[121,17,187,15],[121,19,187,17],[122,8,188,6],[123,6,189,4],[124,6,191,4],[124,12,191,10,"colorStopsString"],[124,28,191,26],[124,31,191,29,"parts"],[124,36,191,34],[124,37,191,35,"join"],[124,41,191,39],[124,42,191,40],[124,45,191,43],[124,46,191,44],[125,6,192,4],[125,12,192,10,"colorStops"],[125,22,192,20],[125,25,192,23],[125,27,192,25],[126,6,194,4],[126,12,194,10,"stops"],[126,17,194,15],[126,20,194,18,"colorStopsString"],[126,36,194,34],[126,37,194,35,"split"],[126,42,194,40],[126,43,194,41],[126,57,194,55],[126,58,194,56],[127,6,195,4],[127,10,195,8,"prevStop"],[127,18,195,16],[127,21,195,19],[127,25,195,23],[128,6,196,4],[128,11,196,9],[128,15,196,13,"i"],[128,16,196,14],[128,19,196,17],[128,20,196,18],[128,22,196,20,"i"],[128,23,196,21],[128,26,196,24,"stops"],[128,31,196,29],[128,32,196,30,"length"],[128,38,196,36],[128,40,196,38,"i"],[128,41,196,39],[128,43,196,41],[128,45,196,43],[129,8,197,6],[129,14,197,12,"stop"],[129,18,197,16],[129,21,197,19,"stops"],[129,26,197,24],[129,27,197,25,"i"],[129,28,197,26],[129,29,197,27],[130,8,198,6],[130,14,198,12,"trimmedStop"],[130,25,198,23],[130,28,198,26,"stop"],[130,32,198,30],[130,33,198,31,"trim"],[130,37,198,35],[130,38,198,36],[130,39,198,37],[130,40,198,38,"toLowerCase"],[130,51,198,49],[130,52,198,50],[130,53,198,51],[131,8,200,6],[131,14,200,12,"colorStopParts"],[131,28,200,26],[131,31,200,29,"trimmedStop"],[131,42,200,40],[131,43,200,41,"match"],[131,48,200,46],[131,49,200,47],[131,68,200,66],[131,69,200,67],[132,8,201,6],[132,12,201,10,"colorStopParts"],[132,26,201,24],[132,30,201,28],[132,34,201,32],[132,36,201,34],[133,10,203,8],[133,17,203,15],[133,19,203,17],[134,8,204,6],[135,8,206,6],[135,12,206,10,"colorStopParts"],[135,26,206,24],[135,27,206,25,"length"],[135,33,206,31],[135,38,206,36],[135,39,206,37],[135,41,206,39],[136,10,207,8],[136,16,207,14,"color"],[136,21,207,19],[136,24,207,22,"colorStopParts"],[136,38,207,36],[136,39,207,37],[136,40,207,38],[136,41,207,39],[137,10,208,8],[137,16,208,14,"position1"],[137,25,208,23],[137,28,208,26,"getPositionFromCSSValue"],[137,51,208,49],[137,52,208,50,"colorStopParts"],[137,66,208,64],[137,67,208,65],[137,68,208,66],[137,69,208,67],[137,70,208,68],[138,10,209,8],[138,16,209,14,"position2"],[138,25,209,23],[138,28,209,26,"getPositionFromCSSValue"],[138,51,209,49],[138,52,209,50,"colorStopParts"],[138,66,209,64],[138,67,209,65],[138,68,209,66],[138,69,209,67],[138,70,209,68],[139,10,210,8],[139,16,210,14,"processedColor"],[139,30,210,28],[139,33,210,31,"processColor"],[139,45,210,43],[139,46,210,44,"color"],[139,51,210,49],[139,52,210,50],[140,10,211,8],[140,14,211,12,"processedColor"],[140,28,211,26],[140,32,211,30],[140,36,211,34],[140,38,211,36],[141,12,213,10],[141,19,213,17],[141,21,213,19],[142,10,214,8],[143,10,216,8],[143,14,216,12,"position1"],[143,23,216,21],[143,27,216,25],[143,31,216,29],[143,35,216,33,"position2"],[143,44,216,42],[143,48,216,46],[143,52,216,50],[143,54,216,52],[144,12,218,10],[144,19,218,17],[144,21,218,19],[145,10,219,8],[146,10,221,8,"colorStops"],[146,20,221,18],[146,21,221,19,"push"],[146,25,221,23],[146,26,221,24],[147,12,222,10,"color"],[147,17,222,15],[147,19,222,17,"processedColor"],[147,33,222,31],[148,12,223,10,"position"],[148,20,223,18],[148,22,223,20,"position1"],[149,10,224,8],[149,11,224,9],[149,12,224,10],[150,10,225,8,"colorStops"],[150,20,225,18],[150,21,225,19,"push"],[150,25,225,23],[150,26,225,24],[151,12,226,10,"color"],[151,17,226,15],[151,19,226,17,"processedColor"],[151,33,226,31],[152,12,227,10,"position"],[152,20,227,18],[152,22,227,20,"position2"],[153,10,228,8],[153,11,228,9],[153,12,228,10],[154,8,229,6],[154,9,229,7],[154,15,231,11],[154,19,231,15,"colorStopParts"],[154,33,231,29],[154,34,231,30,"length"],[154,40,231,36],[154,45,231,41],[154,46,231,42],[154,48,231,44],[155,10,232,8],[155,16,232,14,"color"],[155,21,232,19],[155,24,232,22,"colorStopParts"],[155,38,232,36],[155,39,232,37],[155,40,232,38],[155,41,232,39],[156,10,233,8],[156,16,233,14,"position"],[156,24,233,22],[156,27,233,25,"getPositionFromCSSValue"],[156,50,233,48],[156,51,233,49,"colorStopParts"],[156,65,233,63],[156,66,233,64],[156,67,233,65],[156,68,233,66],[156,69,233,67],[157,10,234,8],[157,16,234,14,"processedColor"],[157,30,234,28],[157,33,234,31,"processColor"],[157,45,234,43],[157,46,234,44,"color"],[157,51,234,49],[157,52,234,50],[158,10,235,8],[158,14,235,12,"processedColor"],[158,28,235,26],[158,32,235,30],[158,36,235,34],[158,38,235,36],[159,12,237,10],[159,19,237,17],[159,21,237,19],[160,10,238,8],[161,10,239,8],[161,14,239,12,"position"],[161,22,239,20],[161,26,239,24],[161,30,239,28],[161,32,239,30],[162,12,241,10],[162,19,241,17],[162,21,241,19],[163,10,242,8],[164,10,243,8,"colorStops"],[164,20,243,18],[164,21,243,19,"push"],[164,25,243,23],[164,26,243,24],[165,12,244,10,"color"],[165,17,244,15],[165,19,244,17,"processedColor"],[165,33,244,31],[166,12,245,10,"position"],[167,10,246,8],[167,11,246,9],[167,12,246,10],[168,8,247,6],[168,9,247,7],[168,15,250,11],[168,19,250,15,"colorStopParts"],[168,33,250,29],[168,34,250,30,"length"],[168,40,250,36],[168,45,250,41],[168,46,250,42],[168,48,250,44],[169,10,251,8],[169,16,251,14,"position"],[169,24,251,22],[169,27,251,25,"getPositionFromCSSValue"],[169,50,251,48],[169,51,251,49,"colorStopParts"],[169,65,251,63],[169,66,251,64],[169,67,251,65],[169,68,251,66],[169,69,251,67],[170,10,252,8],[170,14,252,12,"position"],[170,22,252,20],[170,26,252,24],[170,30,252,28],[170,32,252,30],[171,12,254,10],[171,16,255,13,"prevStop"],[171,24,255,21],[171,28,255,25],[171,32,255,29],[171,36,256,14,"prevStop"],[171,44,256,22],[171,45,256,23,"length"],[171,51,256,29],[171,56,256,34],[171,57,256,35],[171,61,257,14,"getPositionFromCSSValue"],[171,84,257,37],[171,85,257,38,"prevStop"],[171,93,257,46],[171,94,257,47],[171,95,257,48],[171,96,257,49],[171,97,257,50],[171,101,257,54],[171,105,257,58],[171,109,258,12,"i"],[171,110,258,13],[171,115,258,18,"stops"],[171,120,258,23],[171,121,258,24,"length"],[171,127,258,30],[171,130,258,33],[171,131,258,34],[171,135,259,12,"i"],[171,136,259,13],[171,141,259,18],[171,142,259,19],[171,144,260,12],[172,14,262,12],[172,21,262,19],[172,23,262,21],[173,12,263,10],[174,12,264,10,"colorStops"],[174,22,264,20],[174,23,264,21,"push"],[174,27,264,25],[174,28,264,26],[175,14,265,12,"color"],[175,19,265,17],[175,21,265,19],[175,25,265,23],[176,14,266,12,"position"],[177,12,267,10],[177,13,267,11],[177,14,267,12],[178,10,268,8],[178,11,268,9],[178,17,268,15],[179,12,269,10],[179,18,269,16,"processedColor"],[179,32,269,30],[179,35,269,33,"processColor"],[179,47,269,45],[179,48,269,46,"colorStopParts"],[179,62,269,60],[179,63,269,61],[179,64,269,62],[179,65,269,63],[179,66,269,64],[180,12,270,10],[180,16,270,14,"processedColor"],[180,30,270,28],[180,34,270,32],[180,38,270,36],[180,40,270,38],[181,14,272,12],[181,21,272,19],[181,23,272,21],[182,12,273,10],[183,12,274,10,"colorStops"],[183,22,274,20],[183,23,274,21,"push"],[183,27,274,25],[183,28,274,26],[184,14,275,12,"color"],[184,19,275,17],[184,21,275,19,"processedColor"],[184,35,275,33],[185,14,276,12,"position"],[185,22,276,20],[185,24,276,22],[186,12,277,10],[186,13,277,11],[186,14,277,12],[187,10,278,8],[188,8,279,6],[188,9,279,7],[188,15,279,13],[189,10,281,8],[189,17,281,15],[189,19,281,17],[190,8,282,6],[191,8,283,6,"prevStop"],[191,16,283,14],[191,19,283,17,"colorStopParts"],[191,33,283,31],[192,6,284,4],[193,6,286,4,"gradients"],[193,15,286,13],[193,16,286,14,"push"],[193,20,286,18],[193,21,286,19],[194,8,287,6,"type"],[194,12,287,10],[194,14,287,12],[194,30,287,28],[195,8,288,6,"direction"],[195,17,288,15],[196,8,289,6,"colorStops"],[197,6,290,4],[197,7,290,5],[197,8,290,6],[198,4,291,2],[199,4,293,2],[199,11,293,9,"gradients"],[199,20,293,18],[200,2,294,0],[201,2,296,0],[201,11,296,9,"getDirectionForKeyword"],[201,33,296,31,"getDirectionForKeyword"],[201,34,296,32,"direction"],[201,43,296,50],[201,45,296,78],[202,4,297,2],[202,8,297,6,"direction"],[202,17,297,15],[202,21,297,19],[202,25,297,23],[202,27,297,25],[203,6,298,4],[203,13,298,11],[203,17,298,15],[204,4,299,2],[205,4,301,2],[205,10,301,8,"normalized"],[205,20,301,18],[205,23,301,21,"direction"],[205,32,301,30],[205,33,301,31,"replace"],[205,40,301,38],[205,41,301,39],[205,47,301,45],[205,49,301,47],[205,52,301,50],[205,53,301,51],[205,54,301,52,"toLowerCase"],[205,65,301,63],[205,66,301,64],[205,67,301,65],[206,4,303,2],[206,12,303,10,"normalized"],[206,22,303,20],[207,6,304,4],[207,11,304,9],[207,19,304,17],[208,8,305,6],[208,15,305,13],[209,10,305,14,"type"],[209,14,305,18],[209,16,305,20],[209,23,305,27],[210,10,305,29,"value"],[210,15,305,34],[210,17,305,36],[211,8,305,37],[211,9,305,38],[212,6,306,4],[212,11,306,9],[212,21,306,19],[213,8,307,6],[213,15,307,13],[214,10,307,14,"type"],[214,14,307,18],[214,16,307,20],[214,23,307,27],[215,10,307,29,"value"],[215,15,307,34],[215,17,307,36],[216,8,307,38],[216,9,307,39],[217,6,308,4],[217,11,308,9],[217,22,308,20],[218,8,309,6],[218,15,309,13],[219,10,309,14,"type"],[219,14,309,18],[219,16,309,20],[219,23,309,27],[220,10,309,29,"value"],[220,15,309,34],[220,17,309,36],[221,8,309,39],[221,9,309,40],[222,6,310,4],[222,11,310,9],[222,20,310,18],[223,8,311,6],[223,15,311,13],[224,10,311,14,"type"],[224,14,311,18],[224,16,311,20],[224,23,311,27],[225,10,311,29,"value"],[225,15,311,34],[225,17,311,36],[226,8,311,39],[226,9,311,40],[227,6,312,4],[227,11,312,9],[227,25,312,23],[228,6,313,4],[228,11,313,9],[228,25,313,23],[229,8,314,6],[229,15,314,13],[230,10,314,14,"type"],[230,14,314,18],[230,16,314,20],[230,25,314,29],[231,10,314,31,"value"],[231,15,314,36],[231,17,314,38],[232,8,314,52],[232,9,314,53],[233,6,315,4],[233,11,315,9],[233,28,315,26],[234,6,316,4],[234,11,316,9],[234,28,316,26],[235,8,317,6],[235,15,317,13],[236,10,317,14,"type"],[236,14,317,18],[236,16,317,20],[236,25,317,29],[237,10,317,31,"value"],[237,15,317,36],[237,17,317,38],[238,8,317,55],[238,9,317,56],[239,6,318,4],[239,11,318,9],[239,24,318,22],[240,6,319,4],[240,11,319,9],[240,24,319,22],[241,8,320,6],[241,15,320,13],[242,10,320,14,"type"],[242,14,320,18],[242,16,320,20],[242,25,320,29],[243,10,320,31,"value"],[243,15,320,36],[243,17,320,38],[244,8,320,51],[244,9,320,52],[245,6,321,4],[245,11,321,9],[245,27,321,25],[246,6,322,4],[246,11,322,9],[246,27,322,25],[247,8,323,6],[247,15,323,13],[248,10,323,14,"type"],[248,14,323,18],[248,16,323,20],[248,25,323,29],[249,10,323,31,"value"],[249,15,323,36],[249,17,323,38],[250,8,323,54],[250,9,323,55],[251,6,324,4],[252,8,325,6],[252,15,325,13],[252,19,325,17],[253,4,326,2],[254,2,327,0],[255,2,329,0],[255,11,329,9,"getAngleInDegrees"],[255,28,329,26,"getAngleInDegrees"],[255,29,329,27,"angle"],[255,34,329,41],[255,36,329,52],[256,4,330,2],[256,8,330,6,"angle"],[256,13,330,11],[256,17,330,15],[256,21,330,19],[256,23,330,21],[257,6,331,4],[257,13,331,11],[257,17,331,15],[258,4,332,2],[259,4,333,2],[259,10,333,8,"match"],[259,15,333,13],[259,18,333,16,"angle"],[259,23,333,21],[259,24,333,22,"match"],[259,29,333,27],[259,30,333,28,"ANGLE_UNIT_REGEX"],[259,46,333,44],[259,47,333,45],[260,4,334,2],[260,8,334,6],[260,9,334,7,"match"],[260,14,334,12],[260,16,334,14],[261,6,335,4],[261,13,335,11],[261,17,335,15],[262,4,336,2],[263,4,338,2],[263,10,338,8],[263,13,338,11,"value"],[263,18,338,16],[263,20,338,18,"unit"],[263,24,338,22],[263,25,338,23],[263,28,338,26,"match"],[263,33,338,31],[264,4,340,2],[264,10,340,8,"numericValue"],[264,22,340,20],[264,25,340,23,"parseFloat"],[264,35,340,33],[264,36,340,34,"value"],[264,41,340,39],[264,42,340,40],[265,4,341,2],[265,12,341,10,"unit"],[265,16,341,14],[266,6,342,4],[266,11,342,9],[266,16,342,14],[267,8,343,6],[267,15,343,13,"numericValue"],[267,27,343,25],[268,6,344,4],[268,11,344,9],[268,17,344,15],[269,8,345,6],[269,15,345,13,"numericValue"],[269,27,345,25],[269,30,345,28],[269,33,345,31],[270,6,346,4],[270,11,346,9],[270,16,346,14],[271,8,347,6],[271,15,347,14,"numericValue"],[271,27,347,26],[271,30,347,29],[271,33,347,32],[271,36,347,36,"Math"],[271,40,347,40],[271,41,347,41,"PI"],[271,43,347,43],[272,6,348,4],[272,11,348,9],[272,17,348,15],[273,8,349,6],[273,15,349,13,"numericValue"],[273,27,349,25],[273,30,349,28],[273,33,349,31],[274,6,350,4],[275,8,351,6],[275,15,351,13],[275,19,351,17],[276,4,352,2],[277,2,353,0],[278,2,355,0],[278,11,355,9,"getPositionFromCSSValue"],[278,34,355,32,"getPositionFromCSSValue"],[278,35,355,33,"position"],[278,43,355,49],[278,45,355,51],[279,4,356,2],[279,8,356,6,"position"],[279,16,356,14],[279,17,356,15,"endsWith"],[279,25,356,23],[279,26,356,24],[279,30,356,28],[279,31,356,29],[279,33,356,31],[280,6,357,4],[280,13,357,11,"parseFloat"],[280,23,357,21],[280,24,357,22,"position"],[280,32,357,30],[280,33,357,31],[281,4,358,2],[282,4,360,2],[282,8,360,6,"position"],[282,16,360,14],[282,17,360,15,"endsWith"],[282,25,360,23],[282,26,360,24],[282,29,360,27],[282,30,360,28],[282,32,360,30],[283,6,361,4],[283,13,361,11,"position"],[283,21,361,19],[284,4,362,2],[285,2,363,0],[286,0,363,1],[286,3]],"functionMap":{"names":["<global>","processBackgroundImage","parseCSSLinearGradient","getDirectionForKeyword","getAngleInDegrees","getPositionFromCSSValue"],"mappings":"AAA;eC2C;CD2G;AEE;CF6I;AGE;CH+B;AIE;CJwB;AKE"}},"type":"js/module"}]}