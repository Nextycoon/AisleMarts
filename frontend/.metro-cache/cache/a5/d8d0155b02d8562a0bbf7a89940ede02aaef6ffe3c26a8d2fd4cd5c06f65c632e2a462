{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getFx = getFx;\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var memoryCache = {};\n  function fetchRates(_x) {\n    return _fetchRates.apply(this, arguments);\n  }\n  function _fetchRates() {\n    _fetchRates = (0, _asyncToGenerator.default)(function* (sourceBase) {\n      // Get backend URL from environment\n      var backendUrl = Constants.default.expoConfig?.extra?.EXPO_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n      var url = `${backendUrl}/api/currency/rates?base=${encodeURIComponent(sourceBase)}`;\n      console.log(`🌍 Currency-Infinity Engine: Fetching rates for ${sourceBase} from ${url}`);\n      try {\n        var res = yield fetch(url, {\n          cache: 'no-store',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`FX fetch failed: ${res.status} ${res.statusText}`);\n        }\n        var data = yield res.json();\n        console.log(`💱 Received rates for ${sourceBase}:`, Object.keys(data.rates || {}).length, 'currencies');\n        return data;\n      } catch (error) {\n        console.warn('🔄 FX API failed, using fallback rates:', error);\n        // Fallback to static rates if API fails\n        return getFallbackRates(sourceBase);\n      }\n    });\n    return _fetchRates.apply(this, arguments);\n  }\n  function getFallbackRates(base) {\n    // Static fallback rates for demo (updated June 2025)\n    var fallbackRates = {\n      'USD': 1.0,\n      // Base currency\n      'EUR': 0.85,\n      'GBP': 0.73,\n      'JPY': 110.0,\n      'CNY': 6.45,\n      'CAD': 1.25,\n      'AUD': 1.35,\n      'CHF': 0.92,\n      'SEK': 8.60,\n      'NOK': 8.50,\n      'DKK': 6.30,\n      'PLN': 3.90,\n      'CZK': 21.50,\n      'HUF': 290.0,\n      'RUB': 75.0,\n      'BRL': 5.20,\n      'MXN': 20.0,\n      'ARS': 98.0,\n      'COP': 3800.0,\n      'CLP': 720.0,\n      'PEN': 3.60,\n      'KRW': 1180.0,\n      'INR': 74.0,\n      'IDR': 14200.0,\n      'THB': 31.0,\n      'SGD': 1.35,\n      'MYR': 4.15,\n      'PHP': 50.0,\n      'VND': 23000.0,\n      'HKD': 7.80,\n      'TWD': 28.0,\n      'LKR': 180.0,\n      'BDT': 85.0,\n      'PKR': 160.0,\n      'AED': 3.67,\n      'SAR': 3.75,\n      'QAR': 3.64,\n      'KWD': 0.30,\n      'BHD': 0.38,\n      'ILS': 3.20,\n      'TRY': 8.50,\n      'EGP': 15.7,\n      'ZAR': 14.5,\n      'NGN': 410.0,\n      'KES': 108.0,\n      'MAD': 9.0\n    };\n\n    // Convert rates relative to base currency\n    var baseRate = fallbackRates[base] || 1;\n    var rates = Object.fromEntries(Object.entries(fallbackRates).map(_ref => {\n      var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n      return [k, v / baseRate];\n    }));\n    return {\n      base,\n      ts: Date.now(),\n      rates\n    };\n  }\n  function getFx(_x2) {\n    return _getFx.apply(this, arguments);\n  }\n  function _getFx() {\n    _getFx = (0, _asyncToGenerator.default)(function* (base) {\n      // Serve cached if fresh (<5 min)\n      var now = Date.now();\n      if (memoryCache.quote && now - (memoryCache.quote.ts || 0) < 5 * 60 * 1000) {\n        if (memoryCache.quote.base === base) {\n          console.log(`⚡ Using cached rates for ${base}`);\n          return memoryCache.quote;\n        }\n      }\n      var q = yield fetchRates(base);\n      memoryCache.quote = q;\n      return q;\n    });\n    return _getFx.apply(this, arguments);\n  }\n});","lineCount":136,"map":[[12,2,66,0,"exports"],[12,9,66,0],[12,10,66,0,"getFx"],[12,15,66,0],[12,18,66,0,"getFx"],[12,23,66,0],[13,2,79,1],[13,6,79,1,"_expoVirtualEnv"],[13,21,79,1],[13,24,79,1,"require"],[13,31,79,1],[13,32,79,1,"_dependencyMap"],[13,46,79,1],[14,2,79,1],[14,6,79,1,"_babelRuntimeHelpersSlicedToArray"],[14,39,79,1],[14,42,79,1,"require"],[14,49,79,1],[14,50,79,1,"_dependencyMap"],[14,64,79,1],[15,2,79,1],[15,6,79,1,"_slicedToArray"],[15,20,79,1],[15,23,79,1,"_interopDefault"],[15,38,79,1],[15,39,79,1,"_babelRuntimeHelpersSlicedToArray"],[15,72,79,1],[16,2,79,1],[16,6,79,1,"_babelRuntimeHelpersAsyncToGenerator"],[16,42,79,1],[16,45,79,1,"require"],[16,52,79,1],[16,53,79,1,"_dependencyMap"],[16,67,79,1],[17,2,79,1],[17,6,79,1,"_asyncToGenerator"],[17,23,79,1],[17,26,79,1,"_interopDefault"],[17,41,79,1],[17,42,79,1,"_babelRuntimeHelpersAsyncToGenerator"],[17,78,79,1],[18,2,1,0],[18,6,1,0,"_expoConstants"],[18,20,1,0],[18,23,1,0,"require"],[18,30,1,0],[18,31,1,0,"_dependencyMap"],[18,45,1,0],[19,2,1,0],[19,6,1,0,"Constants"],[19,15,1,0],[19,18,1,0,"_interopDefault"],[19,33,1,0],[19,34,1,0,"_expoConstants"],[19,48,1,0],[20,2,4,0],[20,6,4,4,"memoryCache"],[20,17,4,36],[20,20,4,39],[20,21,4,40],[20,22,4,41],[21,2,4,42],[21,11,6,15,"fetchRates"],[21,21,6,25,"fetchRates"],[21,22,6,25,"_x"],[21,24,6,25],[22,4,6,25],[22,11,6,25,"_fetchRates"],[22,22,6,25],[22,23,6,25,"apply"],[22,28,6,25],[22,35,6,25,"arguments"],[22,44,6,25],[23,2,6,25],[24,2,6,25],[24,11,6,25,"_fetchRates"],[24,23,6,25],[25,4,6,25,"_fetchRates"],[25,15,6,25],[25,22,6,25,"_asyncToGenerator"],[25,39,6,25],[25,40,6,25,"default"],[25,47,6,25],[25,49,6,0],[25,60,6,26,"sourceBase"],[25,70,6,44],[25,72,6,64],[26,6,7,2],[27,6,8,2],[27,10,8,8,"backendUrl"],[27,20,8,18],[27,23,8,21,"Constants"],[27,32,8,30],[27,33,8,30,"default"],[27,40,8,30],[27,41,8,31,"expoConfig"],[27,51,8,41],[27,53,8,43,"extra"],[27,58,8,48],[27,60,8,50,"EXPO_BACKEND_URL"],[27,76,8,66],[27,80,8,66,"_expoVirtualEnv"],[27,95,8,66],[27,96,8,66,"env"],[27,99,8,66],[27,100,8,66,"EXPO_PUBLIC_BACKEND_URL"],[27,123,8,105],[27,127,8,109],[27,129,8,111],[28,6,9,2],[28,10,9,8,"url"],[28,13,9,11],[28,16,9,14],[28,19,9,17,"backendUrl"],[28,29,9,27],[28,57,9,55,"encodeURIComponent"],[28,75,9,73],[28,76,9,74,"sourceBase"],[28,86,9,84],[28,87,9,85],[28,89,9,87],[29,6,11,2,"console"],[29,13,11,9],[29,14,11,10,"log"],[29,17,11,13],[29,18,11,14],[29,69,11,65,"sourceBase"],[29,79,11,75],[29,88,11,84,"url"],[29,91,11,87],[29,93,11,89],[29,94,11,90],[30,6,13,2],[30,10,13,6],[31,8,14,4],[31,12,14,10,"res"],[31,15,14,13],[31,24,14,22,"fetch"],[31,29,14,27],[31,30,14,28,"url"],[31,33,14,31],[31,35,14,33],[32,10,15,6,"cache"],[32,15,15,11],[32,17,15,13],[32,27,15,23],[33,10,16,6,"headers"],[33,17,16,13],[33,19,16,15],[34,12,17,8],[34,26,17,22],[34,28,17,24],[35,10,18,6],[36,8,19,4],[36,9,19,5],[36,10,19,6],[37,8,21,4],[37,12,21,8],[37,13,21,9,"res"],[37,16,21,12],[37,17,21,13,"ok"],[37,19,21,15],[37,21,21,17],[38,10,22,6],[38,16,22,12],[38,20,22,16,"Error"],[38,25,22,21],[38,26,22,22],[38,46,22,42,"res"],[38,49,22,45],[38,50,22,46,"status"],[38,56,22,52],[38,60,22,56,"res"],[38,63,22,59],[38,64,22,60,"statusText"],[38,74,22,70],[38,76,22,72],[38,77,22,73],[39,8,23,4],[40,8,25,4],[40,12,25,10,"data"],[40,16,25,14],[40,25,25,23,"res"],[40,28,25,26],[40,29,25,27,"json"],[40,33,25,31],[40,34,25,32],[40,35,25,33],[41,8,26,4,"console"],[41,15,26,11],[41,16,26,12,"log"],[41,19,26,15],[41,20,26,16],[41,45,26,41,"sourceBase"],[41,55,26,51],[41,58,26,54],[41,60,26,56,"Object"],[41,66,26,62],[41,67,26,63,"keys"],[41,71,26,67],[41,72,26,68,"data"],[41,76,26,72],[41,77,26,73,"rates"],[41,82,26,78],[41,86,26,82],[41,87,26,83],[41,88,26,84],[41,89,26,85],[41,90,26,86,"length"],[41,96,26,92],[41,98,26,94],[41,110,26,106],[41,111,26,107],[42,8,27,4],[42,15,27,11,"data"],[42,19,27,15],[43,6,28,2],[43,7,28,3],[43,8,28,4],[43,15,28,11,"error"],[43,20,28,16],[43,22,28,18],[44,8,29,4,"console"],[44,15,29,11],[44,16,29,12,"warn"],[44,20,29,16],[44,21,29,17],[44,62,29,58],[44,64,29,60,"error"],[44,69,29,65],[44,70,29,66],[45,8,30,4],[46,8,31,4],[46,15,31,11,"getFallbackRates"],[46,31,31,27],[46,32,31,28,"sourceBase"],[46,42,31,38],[46,43,31,39],[47,6,32,2],[48,4,33,0],[48,5,33,1],[49,4,33,1],[49,11,33,1,"_fetchRates"],[49,22,33,1],[49,23,33,1,"apply"],[49,28,33,1],[49,35,33,1,"arguments"],[49,44,33,1],[50,2,33,1],[51,2,35,0],[51,11,35,9,"getFallbackRates"],[51,27,35,25,"getFallbackRates"],[51,28,35,26,"base"],[51,32,35,38],[51,34,35,49],[52,4,36,2],[53,4,37,2],[53,8,37,8,"fallbackRates"],[53,21,37,45],[53,24,37,48],[54,6,38,4],[54,11,38,9],[54,13,38,11],[54,16,38,14],[55,6,38,21],[56,6,39,4],[56,11,39,9],[56,13,39,11],[56,17,39,15],[57,6,39,21],[57,11,39,26],[57,13,39,28],[57,17,39,32],[58,6,39,38],[58,11,39,43],[58,13,39,45],[58,18,39,50],[59,6,39,55],[59,11,39,60],[59,13,39,62],[59,17,39,66],[60,6,40,4],[60,11,40,9],[60,13,40,11],[60,17,40,15],[61,6,40,21],[61,11,40,26],[61,13,40,28],[61,17,40,32],[62,6,40,38],[62,11,40,43],[62,13,40,45],[62,17,40,49],[63,6,40,55],[63,11,40,60],[63,13,40,62],[63,17,40,66],[64,6,41,4],[64,11,41,9],[64,13,41,11],[64,17,41,15],[65,6,41,21],[65,11,41,26],[65,13,41,28],[65,17,41,32],[66,6,41,38],[66,11,41,43],[66,13,41,45],[66,17,41,49],[67,6,41,55],[67,11,41,60],[67,13,41,62],[67,18,41,67],[68,6,42,4],[68,11,42,9],[68,13,42,11],[68,18,42,16],[69,6,42,21],[69,11,42,26],[69,13,42,28],[69,17,42,32],[70,6,42,38],[70,11,42,43],[70,13,42,45],[70,17,42,49],[71,6,42,55],[71,11,42,60],[71,13,42,62],[71,17,42,66],[72,6,43,4],[72,11,43,9],[72,13,43,11],[72,17,43,15],[73,6,43,21],[73,11,43,26],[73,13,43,28],[73,19,43,34],[74,6,43,38],[74,11,43,43],[74,13,43,45],[74,18,43,50],[75,6,43,55],[75,11,43,60],[75,13,43,62],[75,17,43,66],[76,6,44,4],[76,11,44,9],[76,13,44,11],[76,19,44,17],[77,6,44,21],[77,11,44,26],[77,13,44,28],[77,17,44,32],[78,6,44,38],[78,11,44,43],[78,13,44,45],[78,20,44,52],[79,6,44,55],[79,11,44,60],[79,13,44,62],[79,17,44,66],[80,6,45,4],[80,11,45,9],[80,13,45,11],[80,17,45,15],[81,6,45,21],[81,11,45,26],[81,13,45,28],[81,17,45,32],[82,6,45,38],[82,11,45,43],[82,13,45,45],[82,17,45,49],[83,6,45,55],[83,11,45,60],[83,13,45,62],[83,20,45,69],[84,6,46,4],[84,11,46,9],[84,13,46,11],[84,17,46,15],[85,6,46,21],[85,11,46,26],[85,13,46,28],[85,17,46,32],[86,6,46,38],[86,11,46,43],[86,13,46,45],[86,18,46,50],[87,6,46,55],[87,11,46,60],[87,13,46,62],[87,17,46,66],[88,6,47,4],[88,11,47,9],[88,13,47,11],[88,18,47,16],[89,6,47,21],[89,11,47,26],[89,13,47,28],[89,17,47,32],[90,6,47,38],[90,11,47,43],[90,13,47,45],[90,17,47,49],[91,6,47,55],[91,11,47,60],[91,13,47,62],[91,17,47,66],[92,6,48,4],[92,11,48,9],[92,13,48,11],[92,17,48,15],[93,6,48,21],[93,11,48,26],[93,13,48,28],[93,17,48,32],[94,6,48,38],[94,11,48,43],[94,13,48,45],[94,17,48,49],[95,6,48,55],[95,11,48,60],[95,13,48,62],[95,17,48,66],[96,6,49,4],[96,11,49,9],[96,13,49,11],[96,17,49,15],[97,6,49,21],[97,11,49,26],[97,13,49,28],[97,17,49,32],[98,6,49,38],[98,11,49,43],[98,13,49,45],[98,18,49,50],[99,6,49,55],[99,11,49,60],[99,13,49,62],[99,18,49,67],[100,6,50,4],[100,11,50,9],[100,13,50,11],[101,4,51,2],[101,5,51,3],[103,4,53,2],[104,4,54,2],[104,8,54,8,"baseRate"],[104,16,54,16],[104,19,54,19,"fallbackRates"],[104,32,54,32],[104,33,54,33,"base"],[104,37,54,37],[104,38,54,38],[104,42,54,42],[104,43,54,43],[105,4,55,2],[105,8,55,8,"rates"],[105,13,55,13],[105,16,55,16,"Object"],[105,22,55,22],[105,23,55,23,"fromEntries"],[105,34,55,34],[105,35,56,4,"Object"],[105,41,56,10],[105,42,56,11,"entries"],[105,49,56,18],[105,50,56,19,"fallbackRates"],[105,63,56,32],[105,64,56,33],[105,65,56,34,"map"],[105,68,56,37],[105,69,56,38,"_ref"],[105,73,56,38],[106,6,56,38],[106,10,56,38,"_ref2"],[106,15,56,38],[106,22,56,38,"_slicedToArray"],[106,36,56,38],[106,37,56,38,"default"],[106,44,56,38],[106,46,56,38,"_ref"],[106,50,56,38],[107,8,56,40,"k"],[107,9,56,41],[107,12,56,41,"_ref2"],[107,17,56,41],[108,8,56,43,"v"],[108,9,56,44],[108,12,56,44,"_ref2"],[108,17,56,44],[109,6,56,44],[109,13,56,50],[109,14,56,51,"k"],[109,15,56,52],[109,17,56,54,"v"],[109,18,56,55],[109,21,56,58,"baseRate"],[109,29,56,66],[109,30,56,67],[110,4,56,67],[110,6,57,2],[110,7,57,3],[111,4,59,2],[111,11,59,9],[112,6,60,4,"base"],[112,10,60,8],[113,6,61,4,"ts"],[113,8,61,6],[113,10,61,8,"Date"],[113,14,61,12],[113,15,61,13,"now"],[113,18,61,16],[113,19,61,17],[113,20,61,18],[114,6,62,4,"rates"],[115,4,63,2],[115,5,63,3],[116,2,64,0],[117,2,64,1],[117,11,66,22,"getFx"],[117,16,66,27,"getFx"],[117,17,66,27,"_x2"],[117,20,66,27],[118,4,66,27],[118,11,66,27,"_getFx"],[118,17,66,27],[118,18,66,27,"apply"],[118,23,66,27],[118,30,66,27,"arguments"],[118,39,66,27],[119,2,66,27],[120,2,66,27],[120,11,66,27,"_getFx"],[120,18,66,27],[121,4,66,27,"_getFx"],[121,10,66,27],[121,17,66,27,"_asyncToGenerator"],[121,34,66,27],[121,35,66,27,"default"],[121,42,66,27],[121,44,66,7],[121,55,66,28,"base"],[121,59,66,40],[121,61,66,60],[122,6,67,2],[123,6,68,2],[123,10,68,8,"now"],[123,13,68,11],[123,16,68,14,"Date"],[123,20,68,18],[123,21,68,19,"now"],[123,24,68,22],[123,25,68,23],[123,26,68,24],[124,6,69,2],[124,10,69,6,"memoryCache"],[124,21,69,17],[124,22,69,18,"quote"],[124,27,69,23],[124,31,69,27,"now"],[124,34,69,30],[124,38,69,34,"memoryCache"],[124,49,69,45],[124,50,69,46,"quote"],[124,55,69,51],[124,56,69,52,"ts"],[124,58,69,54],[124,62,69,58],[124,63,69,59],[124,64,69,60],[124,67,69,63],[124,68,69,64],[124,71,69,67],[124,73,69,69],[124,76,69,72],[124,80,69,76],[124,82,69,78],[125,8,70,4],[125,12,70,8,"memoryCache"],[125,23,70,19],[125,24,70,20,"quote"],[125,29,70,25],[125,30,70,26,"base"],[125,34,70,30],[125,39,70,35,"base"],[125,43,70,39],[125,45,70,41],[126,10,71,6,"console"],[126,17,71,13],[126,18,71,14,"log"],[126,21,71,17],[126,22,71,18],[126,50,71,46,"base"],[126,54,71,50],[126,56,71,52],[126,57,71,53],[127,10,72,6],[127,17,72,13,"memoryCache"],[127,28,72,24],[127,29,72,25,"quote"],[127,34,72,30],[128,8,73,4],[129,6,74,2],[130,6,76,2],[130,10,76,8,"q"],[130,11,76,9],[130,20,76,18,"fetchRates"],[130,30,76,28],[130,31,76,29,"base"],[130,35,76,33],[130,36,76,34],[131,6,77,2,"memoryCache"],[131,17,77,13],[131,18,77,14,"quote"],[131,23,77,19],[131,26,77,22,"q"],[131,27,77,23],[132,6,78,2],[132,13,78,9,"q"],[132,14,78,10],[133,4,79,0],[133,5,79,1],[134,4,79,1],[134,11,79,1,"_getFx"],[134,17,79,1],[134,18,79,1,"apply"],[134,23,79,1],[134,30,79,1,"arguments"],[134,39,79,1],[135,2,79,1],[136,0,79,1],[136,3]],"functionMap":{"names":["<global>","fetchRates","getFallbackRates","Object.entries.map$argument_0","getFx"],"mappings":"AAA;ACK;CD2B;AEE;sCCqB,6BD;CFQ;OIE"},"hasCjsExports":false},"type":"js/module"}]}