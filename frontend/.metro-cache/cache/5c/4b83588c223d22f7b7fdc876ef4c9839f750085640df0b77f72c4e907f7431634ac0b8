{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-speech","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"oRtXPi6t9Yot/eM8qe4zSiHoBtA=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":80},"end":{"line":3,"column":69,"index":149}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.voiceService = exports.default = void 0;\n  var Speech = _interopRequireWildcard(require(_dependencyMap[1], \"expo-speech\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[3], \"@react-native-async-storage/async-storage\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  class VoiceService {\n    defaultSettings = {\n      enabled: false,\n      // Default off - requires user consent\n      rate: 0.98,\n      // Slightly slower for warmth\n      pitch: 1.02,\n      // Slightly higher for friendliness\n      language: 'en-US',\n      volume: 0.8\n    };\n    currentSettings = {\n      ...this.defaultSettings\n    };\n    isInitialized = false;\n    constructor() {\n      this.initializeSettings();\n    }\n    static getInstance() {\n      if (!VoiceService.instance) {\n        VoiceService.instance = new VoiceService();\n      }\n      return VoiceService.instance;\n    }\n    async initializeSettings() {\n      try {\n        const savedSettings = await _asyncStorage.default.getItem('aisle_voice_settings');\n        if (savedSettings) {\n          this.currentSettings = {\n            ...this.defaultSettings,\n            ...JSON.parse(savedSettings)\n          };\n        }\n        this.isInitialized = true;\n      } catch (error) {\n        console.error('Failed to load voice settings:', error);\n        this.isInitialized = true;\n      }\n    }\n    async saveSettings() {\n      try {\n        await _asyncStorage.default.setItem('aisle_voice_settings', JSON.stringify(this.currentSettings));\n      } catch (error) {\n        console.error('Failed to save voice settings:', error);\n      }\n    }\n\n    /**\n     * Enable voice mode with user consent\n     */\n    async enableVoice() {\n      if (!this.isInitialized) {\n        await this.initializeSettings();\n      }\n      this.currentSettings.enabled = true;\n      await this.saveSettings();\n      return true;\n    }\n\n    /**\n     * Disable voice mode\n     */\n    async disableVoice() {\n      this.currentSettings.enabled = false;\n      await this.saveSettings();\n      await this.stopSpeaking();\n    }\n\n    /**\n     * Check if voice is enabled\n     */\n    isVoiceEnabled() {\n      return this.currentSettings.enabled;\n    }\n\n    /**\n     * Get current voice settings\n     */\n    getSettings() {\n      return {\n        ...this.currentSettings\n      };\n    }\n\n    /**\n     * Update voice settings\n     */\n    async updateSettings(newSettings) {\n      this.currentSettings = {\n        ...this.currentSettings,\n        ...newSettings\n      };\n      await this.saveSettings();\n    }\n\n    /**\n     * Main method to make Aisle speak\n     */\n    async speakAisle(text, options) {\n      const {\n        priority = 'normal',\n        skipIfDisabled = true\n      } = options || {};\n\n      // Check if voice is enabled\n      if (!this.currentSettings.enabled && skipIfDisabled) {\n        return;\n      }\n\n      // Platform check\n      if (_Platform.default.OS === 'web') {\n        console.log('Voice not available on web platform');\n        return;\n      }\n\n      // Check system volume/silent mode (iOS)\n      if (_Platform.default.OS === 'ios') {\n        try {\n          const isSilent = await this.isSystemSilent();\n          if (isSilent && priority !== 'high') {\n            console.log('System is in silent mode, skipping speech');\n            return;\n          }\n        } catch (error) {\n          console.warn('Could not check silent mode:', error);\n        }\n      }\n\n      // Stop any current speech\n      await this.stopSpeaking();\n\n      // Prepare speech options\n      const speechOptions = {\n        language: this.currentSettings.language,\n        pitch: this.currentSettings.pitch,\n        rate: this.currentSettings.rate,\n        volume: this.currentSettings.volume,\n        onStart: () => {\n          console.log('Aisle started speaking');\n        },\n        onDone: () => {\n          console.log('Aisle finished speaking');\n          // Track completion metric\n          this.trackSpeechMetric('completed', text.length);\n        },\n        onStopped: () => {\n          console.log('Aisle speech stopped');\n        },\n        onError: error => {\n          console.error('Aisle speech error:', error);\n          this.trackSpeechMetric('error', text.length);\n        }\n      };\n      try {\n        await Speech.speak(text, speechOptions);\n        this.trackSpeechMetric('started', text.length);\n      } catch (error) {\n        console.error('Speech failed:', error);\n      }\n    }\n\n    /**\n     * Stop current speech\n     */\n    async stopSpeaking() {\n      try {\n        await Speech.stop();\n      } catch (error) {\n        console.error('Failed to stop speech:', error);\n      }\n    }\n\n    /**\n     * Check if Aisle is currently speaking\n     */\n    async isSpeaking() {\n      try {\n        return await Speech.isSpeakingAsync();\n      } catch (error) {\n        console.error('Failed to check speech status:', error);\n        return false;\n      }\n    }\n\n    /**\n     * Get available voices (for advanced settings)\n     */\n    async getAvailableVoices() {\n      try {\n        if (_Platform.default.OS === 'web') return [];\n        return await Speech.getAvailableVoicesAsync();\n      } catch (error) {\n        console.error('Failed to get available voices:', error);\n        return [];\n      }\n    }\n\n    /**\n     * Check if system is in silent mode (iOS only)\n     */\n    async isSystemSilent() {\n      // This would need a native module for proper implementation\n      // For now, we'll assume not silent\n      return false;\n    }\n\n    /**\n     * Track speech metrics\n     */\n    trackSpeechMetric(event, textLength) {\n      // In a real app, this would send analytics\n      console.log(`Voice metric - ${event}: ${textLength} characters`);\n    }\n\n    /**\n     * Aisle-specific greeting with warmth\n     */\n    async speakGreeting(greeting) {\n      const warmGreeting = this.addWarmth(greeting);\n      await this.speakAisle(warmGreeting, {\n        priority: 'normal'\n      });\n    }\n\n    /**\n     * Aisle-specific insight with enthusiasm\n     */\n    async speakInsight(insight) {\n      const enthusiasticInsight = this.addEnthusiasm(insight);\n      await this.speakAisle(enthusiasticInsight, {\n        priority: 'low'\n      });\n    }\n\n    /**\n     * Welcome message with special warmth\n     */\n    async speakWelcome() {\n      const welcomeMessage = \"Hi, I'm Aisle. I'm here to help you succeed today.\";\n      await this.speakAisle(welcomeMessage, {\n        priority: 'high',\n        skipIfDisabled: false\n      });\n    }\n\n    /**\n     * Add warmth to text for speech\n     */\n    addWarmth(text) {\n      // Add natural pauses and warmth cues\n      return text.replace(/\\./g, '... ') // Add pauses after sentences\n      .replace(/!/g, '! ') // Excitement pauses\n      .replace(/\\?/g, '? '); // Question pauses\n    }\n\n    /**\n     * Add enthusiasm to insights\n     */\n    addEnthusiasm(text) {\n      // Make insights sound more conversational\n      const enthusiasticPrefixes = [\"Here's something interesting: \", \"I discovered: \", \"Good news: \", \"Here's what I found: \"];\n      const prefix = enthusiasticPrefixes[Math.floor(Math.random() * enthusiasticPrefixes.length)];\n      return prefix + text;\n    }\n\n    /**\n     * Request voice permission from user\n     */\n    async requestVoicePermission() {\n      // This would typically show a modal or alert\n      // For now, we'll return a structure that the UI can use\n      return {\n        granted: false,\n        // Will be set by UI component\n        message: \"Let Aisle speak? I can provide audio guidance and read insights aloud.\"\n      };\n    }\n  }\n\n  // Export singleton instance\n  const voiceService = exports.voiceService = VoiceService.getInstance();\n  var _default = exports.default = voiceService;\n});","lineCount":293,"map":[[7,2,1,0],[7,6,1,0,"Speech"],[7,12,1,0],[7,15,1,0,"_interopRequireWildcard"],[7,38,1,0],[7,39,1,0,"require"],[7,46,1,0],[7,47,1,0,"_dependencyMap"],[7,61,1,0],[8,2,1,38],[8,6,1,38,"_Platform"],[8,15,1,38],[8,18,1,38,"_interopRequireDefault"],[8,40,1,38],[8,41,1,38,"require"],[8,48,1,38],[8,49,1,38,"_dependencyMap"],[8,63,1,38],[9,2,3,0],[9,6,3,0,"_asyncStorage"],[9,19,3,0],[9,22,3,0,"_interopRequireDefault"],[9,44,3,0],[9,45,3,0,"require"],[9,52,3,0],[9,53,3,0,"_dependencyMap"],[9,67,3,0],[10,2,3,69],[10,11,3,69,"_interopRequireWildcard"],[10,35,3,69,"e"],[10,36,3,69],[10,38,3,69,"t"],[10,39,3,69],[10,68,3,69,"WeakMap"],[10,75,3,69],[10,81,3,69,"r"],[10,82,3,69],[10,89,3,69,"WeakMap"],[10,96,3,69],[10,100,3,69,"n"],[10,101,3,69],[10,108,3,69,"WeakMap"],[10,115,3,69],[10,127,3,69,"_interopRequireWildcard"],[10,150,3,69],[10,162,3,69,"_interopRequireWildcard"],[10,163,3,69,"e"],[10,164,3,69],[10,166,3,69,"t"],[10,167,3,69],[10,176,3,69,"t"],[10,177,3,69],[10,181,3,69,"e"],[10,182,3,69],[10,186,3,69,"e"],[10,187,3,69],[10,188,3,69,"__esModule"],[10,198,3,69],[10,207,3,69,"e"],[10,208,3,69],[10,214,3,69,"o"],[10,215,3,69],[10,217,3,69,"i"],[10,218,3,69],[10,220,3,69,"f"],[10,221,3,69],[10,226,3,69,"__proto__"],[10,235,3,69],[10,243,3,69,"default"],[10,250,3,69],[10,252,3,69,"e"],[10,253,3,69],[10,270,3,69,"e"],[10,271,3,69],[10,294,3,69,"e"],[10,295,3,69],[10,320,3,69,"e"],[10,321,3,69],[10,330,3,69,"f"],[10,331,3,69],[10,337,3,69,"o"],[10,338,3,69],[10,341,3,69,"t"],[10,342,3,69],[10,345,3,69,"n"],[10,346,3,69],[10,349,3,69,"r"],[10,350,3,69],[10,358,3,69,"o"],[10,359,3,69],[10,360,3,69,"has"],[10,363,3,69],[10,364,3,69,"e"],[10,365,3,69],[10,375,3,69,"o"],[10,376,3,69],[10,377,3,69,"get"],[10,380,3,69],[10,381,3,69,"e"],[10,382,3,69],[10,385,3,69,"o"],[10,386,3,69],[10,387,3,69,"set"],[10,390,3,69],[10,391,3,69,"e"],[10,392,3,69],[10,394,3,69,"f"],[10,395,3,69],[10,411,3,69,"t"],[10,412,3,69],[10,416,3,69,"e"],[10,417,3,69],[10,433,3,69,"t"],[10,434,3,69],[10,441,3,69,"hasOwnProperty"],[10,455,3,69],[10,456,3,69,"call"],[10,460,3,69],[10,461,3,69,"e"],[10,462,3,69],[10,464,3,69,"t"],[10,465,3,69],[10,472,3,69,"i"],[10,473,3,69],[10,477,3,69,"o"],[10,478,3,69],[10,481,3,69,"Object"],[10,487,3,69],[10,488,3,69,"defineProperty"],[10,502,3,69],[10,507,3,69,"Object"],[10,513,3,69],[10,514,3,69,"getOwnPropertyDescriptor"],[10,538,3,69],[10,539,3,69,"e"],[10,540,3,69],[10,542,3,69,"t"],[10,543,3,69],[10,550,3,69,"i"],[10,551,3,69],[10,552,3,69,"get"],[10,555,3,69],[10,559,3,69,"i"],[10,560,3,69],[10,561,3,69,"set"],[10,564,3,69],[10,568,3,69,"o"],[10,569,3,69],[10,570,3,69,"f"],[10,571,3,69],[10,573,3,69,"t"],[10,574,3,69],[10,576,3,69,"i"],[10,577,3,69],[10,581,3,69,"f"],[10,582,3,69],[10,583,3,69,"t"],[10,584,3,69],[10,588,3,69,"e"],[10,589,3,69],[10,590,3,69,"t"],[10,591,3,69],[10,602,3,69,"f"],[10,603,3,69],[10,608,3,69,"e"],[10,609,3,69],[10,611,3,69,"t"],[10,612,3,69],[11,2,13,0],[11,8,13,6,"VoiceService"],[11,20,13,18],[11,21,13,19],[12,4,15,10,"defaultSettings"],[12,19,15,25],[12,22,15,43],[13,6,16,4,"enabled"],[13,13,16,11],[13,15,16,13],[13,20,16,18],[14,6,16,20],[15,6,17,4,"rate"],[15,10,17,8],[15,12,17,10],[15,16,17,14],[16,6,17,16],[17,6,18,4,"pitch"],[17,11,18,9],[17,13,18,11],[17,17,18,15],[18,6,18,17],[19,6,19,4,"language"],[19,14,19,12],[19,16,19,14],[19,23,19,21],[20,6,20,4,"volume"],[20,12,20,10],[20,14,20,12],[21,4,21,2],[21,5,21,3],[22,4,23,10,"currentSettings"],[22,19,23,25],[22,22,23,43],[23,6,23,45],[23,9,23,48],[23,13,23,52],[23,14,23,53,"defaultSettings"],[24,4,23,69],[24,5,23,70],[25,4,24,10,"isInitialized"],[25,17,24,23],[25,20,24,26],[25,25,24,31],[26,4,26,10,"constructor"],[26,15,26,21,"constructor"],[26,16,26,21],[26,18,26,24],[27,6,27,4],[27,10,27,8],[27,11,27,9,"initializeSettings"],[27,29,27,27],[27,30,27,28],[27,31,27,29],[28,4,28,2],[29,4,30,2],[29,11,30,16,"getInstance"],[29,22,30,27,"getInstance"],[29,23,30,27],[29,25,30,44],[30,6,31,4],[30,10,31,8],[30,11,31,9,"VoiceService"],[30,23,31,21],[30,24,31,22,"instance"],[30,32,31,30],[30,34,31,32],[31,8,32,6,"VoiceService"],[31,20,32,18],[31,21,32,19,"instance"],[31,29,32,27],[31,32,32,30],[31,36,32,34,"VoiceService"],[31,48,32,46],[31,49,32,47],[31,50,32,48],[32,6,33,4],[33,6,34,4],[33,13,34,11,"VoiceService"],[33,25,34,23],[33,26,34,24,"instance"],[33,34,34,32],[34,4,35,2],[35,4,37,2],[35,10,37,16,"initializeSettings"],[35,28,37,34,"initializeSettings"],[35,29,37,34],[35,31,37,37],[36,6,38,4],[36,10,38,8],[37,8,39,6],[37,14,39,12,"savedSettings"],[37,27,39,25],[37,30,39,28],[37,36,39,34,"AsyncStorage"],[37,57,39,46],[37,58,39,47,"getItem"],[37,65,39,54],[37,66,39,55],[37,88,39,77],[37,89,39,78],[38,8,40,6],[38,12,40,10,"savedSettings"],[38,25,40,23],[38,27,40,25],[39,10,41,8],[39,14,41,12],[39,15,41,13,"currentSettings"],[39,30,41,28],[39,33,41,31],[40,12,41,33],[40,15,41,36],[40,19,41,40],[40,20,41,41,"defaultSettings"],[40,35,41,56],[41,12,41,58],[41,15,41,61,"JSON"],[41,19,41,65],[41,20,41,66,"parse"],[41,25,41,71],[41,26,41,72,"savedSettings"],[41,39,41,85],[42,10,41,87],[42,11,41,88],[43,8,42,6],[44,8,43,6],[44,12,43,10],[44,13,43,11,"isInitialized"],[44,26,43,24],[44,29,43,27],[44,33,43,31],[45,6,44,4],[45,7,44,5],[45,8,44,6],[45,15,44,13,"error"],[45,20,44,18],[45,22,44,20],[46,8,45,6,"console"],[46,15,45,13],[46,16,45,14,"error"],[46,21,45,19],[46,22,45,20],[46,54,45,52],[46,56,45,54,"error"],[46,61,45,59],[46,62,45,60],[47,8,46,6],[47,12,46,10],[47,13,46,11,"isInitialized"],[47,26,46,24],[47,29,46,27],[47,33,46,31],[48,6,47,4],[49,4,48,2],[50,4,50,2],[50,10,50,16,"saveSettings"],[50,22,50,28,"saveSettings"],[50,23,50,28],[50,25,50,31],[51,6,51,4],[51,10,51,8],[52,8,52,6],[52,14,52,12,"AsyncStorage"],[52,35,52,24],[52,36,52,25,"setItem"],[52,43,52,32],[52,44,52,33],[52,66,52,55],[52,68,52,57,"JSON"],[52,72,52,61],[52,73,52,62,"stringify"],[52,82,52,71],[52,83,52,72],[52,87,52,76],[52,88,52,77,"currentSettings"],[52,103,52,92],[52,104,52,93],[52,105,52,94],[53,6,53,4],[53,7,53,5],[53,8,53,6],[53,15,53,13,"error"],[53,20,53,18],[53,22,53,20],[54,8,54,6,"console"],[54,15,54,13],[54,16,54,14,"error"],[54,21,54,19],[54,22,54,20],[54,54,54,52],[54,56,54,54,"error"],[54,61,54,59],[54,62,54,60],[55,6,55,4],[56,4,56,2],[58,4,58,2],[59,0,59,0],[60,0,60,0],[61,4,61,2],[61,10,61,8,"enableVoice"],[61,21,61,19,"enableVoice"],[61,22,61,19],[61,24,61,40],[62,6,62,4],[62,10,62,8],[62,11,62,9],[62,15,62,13],[62,16,62,14,"isInitialized"],[62,29,62,27],[62,31,62,29],[63,8,63,6],[63,14,63,12],[63,18,63,16],[63,19,63,17,"initializeSettings"],[63,37,63,35],[63,38,63,36],[63,39,63,37],[64,6,64,4],[65,6,66,4],[65,10,66,8],[65,11,66,9,"currentSettings"],[65,26,66,24],[65,27,66,25,"enabled"],[65,34,66,32],[65,37,66,35],[65,41,66,39],[66,6,67,4],[66,12,67,10],[66,16,67,14],[66,17,67,15,"saveSettings"],[66,29,67,27],[66,30,67,28],[66,31,67,29],[67,6,68,4],[67,13,68,11],[67,17,68,15],[68,4,69,2],[70,4,71,2],[71,0,72,0],[72,0,73,0],[73,4,74,2],[73,10,74,8,"disableVoice"],[73,22,74,20,"disableVoice"],[73,23,74,20],[73,25,74,38],[74,6,75,4],[74,10,75,8],[74,11,75,9,"currentSettings"],[74,26,75,24],[74,27,75,25,"enabled"],[74,34,75,32],[74,37,75,35],[74,42,75,40],[75,6,76,4],[75,12,76,10],[75,16,76,14],[75,17,76,15,"saveSettings"],[75,29,76,27],[75,30,76,28],[75,31,76,29],[76,6,77,4],[76,12,77,10],[76,16,77,14],[76,17,77,15,"stopSpeaking"],[76,29,77,27],[76,30,77,28],[76,31,77,29],[77,4,78,2],[79,4,80,2],[80,0,81,0],[81,0,82,0],[82,4,83,2,"isVoiceEnabled"],[82,18,83,16,"isVoiceEnabled"],[82,19,83,16],[82,21,83,28],[83,6,84,4],[83,13,84,11],[83,17,84,15],[83,18,84,16,"currentSettings"],[83,33,84,31],[83,34,84,32,"enabled"],[83,41,84,39],[84,4,85,2],[86,4,87,2],[87,0,88,0],[88,0,89,0],[89,4,90,2,"getSettings"],[89,15,90,13,"getSettings"],[89,16,90,13],[89,18,90,31],[90,6,91,4],[90,13,91,11],[91,8,91,13],[91,11,91,16],[91,15,91,20],[91,16,91,21,"currentSettings"],[92,6,91,37],[92,7,91,38],[93,4,92,2],[95,4,94,2],[96,0,95,0],[97,0,96,0],[98,4,97,2],[98,10,97,8,"updateSettings"],[98,24,97,22,"updateSettings"],[98,25,97,23,"newSettings"],[98,36,97,58],[98,38,97,75],[99,6,98,4],[99,10,98,8],[99,11,98,9,"currentSettings"],[99,26,98,24],[99,29,98,27],[100,8,98,29],[100,11,98,32],[100,15,98,36],[100,16,98,37,"currentSettings"],[100,31,98,52],[101,8,98,54],[101,11,98,57,"newSettings"],[102,6,98,69],[102,7,98,70],[103,6,99,4],[103,12,99,10],[103,16,99,14],[103,17,99,15,"saveSettings"],[103,29,99,27],[103,30,99,28],[103,31,99,29],[104,4,100,2],[106,4,102,2],[107,0,103,0],[108,0,104,0],[109,4,105,2],[109,10,105,8,"speakAisle"],[109,20,105,18,"speakAisle"],[109,21,105,19,"text"],[109,25,105,31],[109,27,105,33,"options"],[109,34,108,3],[109,36,108,20],[110,6,109,4],[110,12,109,10],[111,8,109,12,"priority"],[111,16,109,20],[111,19,109,23],[111,27,109,31],[112,8,109,33,"skipIfDisabled"],[112,22,109,47],[112,25,109,50],[113,6,109,55],[113,7,109,56],[113,10,109,59,"options"],[113,17,109,66],[113,21,109,70],[113,22,109,71],[113,23,109,72],[115,6,111,4],[116,6,112,4],[116,10,112,8],[116,11,112,9],[116,15,112,13],[116,16,112,14,"currentSettings"],[116,31,112,29],[116,32,112,30,"enabled"],[116,39,112,37],[116,43,112,41,"skipIfDisabled"],[116,57,112,55],[116,59,112,57],[117,8,113,6],[118,6,114,4],[120,6,116,4],[121,6,117,4],[121,10,117,8,"Platform"],[121,27,117,16],[121,28,117,17,"OS"],[121,30,117,19],[121,35,117,24],[121,40,117,29],[121,42,117,31],[122,8,118,6,"console"],[122,15,118,13],[122,16,118,14,"log"],[122,19,118,17],[122,20,118,18],[122,57,118,55],[122,58,118,56],[123,8,119,6],[124,6,120,4],[126,6,122,4],[127,6,123,4],[127,10,123,8,"Platform"],[127,27,123,16],[127,28,123,17,"OS"],[127,30,123,19],[127,35,123,24],[127,40,123,29],[127,42,123,31],[128,8,124,6],[128,12,124,10],[129,10,125,8],[129,16,125,14,"isSilent"],[129,24,125,22],[129,27,125,25],[129,33,125,31],[129,37,125,35],[129,38,125,36,"isSystemSilent"],[129,52,125,50],[129,53,125,51],[129,54,125,52],[130,10,126,8],[130,14,126,12,"isSilent"],[130,22,126,20],[130,26,126,24,"priority"],[130,34,126,32],[130,39,126,37],[130,45,126,43],[130,47,126,45],[131,12,127,10,"console"],[131,19,127,17],[131,20,127,18,"log"],[131,23,127,21],[131,24,127,22],[131,67,127,65],[131,68,127,66],[132,12,128,10],[133,10,129,8],[134,8,130,6],[134,9,130,7],[134,10,130,8],[134,17,130,15,"error"],[134,22,130,20],[134,24,130,22],[135,10,131,8,"console"],[135,17,131,15],[135,18,131,16,"warn"],[135,22,131,20],[135,23,131,21],[135,53,131,51],[135,55,131,53,"error"],[135,60,131,58],[135,61,131,59],[136,8,132,6],[137,6,133,4],[139,6,135,4],[140,6,136,4],[140,12,136,10],[140,16,136,14],[140,17,136,15,"stopSpeaking"],[140,29,136,27],[140,30,136,28],[140,31,136,29],[142,6,138,4],[143,6,139,4],[143,12,139,10,"speechOptions"],[143,25,139,45],[143,28,139,48],[144,8,140,6,"language"],[144,16,140,14],[144,18,140,16],[144,22,140,20],[144,23,140,21,"currentSettings"],[144,38,140,36],[144,39,140,37,"language"],[144,47,140,45],[145,8,141,6,"pitch"],[145,13,141,11],[145,15,141,13],[145,19,141,17],[145,20,141,18,"currentSettings"],[145,35,141,33],[145,36,141,34,"pitch"],[145,41,141,39],[146,8,142,6,"rate"],[146,12,142,10],[146,14,142,12],[146,18,142,16],[146,19,142,17,"currentSettings"],[146,34,142,32],[146,35,142,33,"rate"],[146,39,142,37],[147,8,143,6,"volume"],[147,14,143,12],[147,16,143,14],[147,20,143,18],[147,21,143,19,"currentSettings"],[147,36,143,34],[147,37,143,35,"volume"],[147,43,143,41],[148,8,144,6,"onStart"],[148,15,144,13],[148,17,144,15,"onStart"],[148,18,144,15],[148,23,144,21],[149,10,145,8,"console"],[149,17,145,15],[149,18,145,16,"log"],[149,21,145,19],[149,22,145,20],[149,46,145,44],[149,47,145,45],[150,8,146,6],[150,9,146,7],[151,8,147,6,"onDone"],[151,14,147,12],[151,16,147,14,"onDone"],[151,17,147,14],[151,22,147,20],[152,10,148,8,"console"],[152,17,148,15],[152,18,148,16,"log"],[152,21,148,19],[152,22,148,20],[152,47,148,45],[152,48,148,46],[153,10,149,8],[154,10,150,8],[154,14,150,12],[154,15,150,13,"trackSpeechMetric"],[154,32,150,30],[154,33,150,31],[154,44,150,42],[154,46,150,44,"text"],[154,50,150,48],[154,51,150,49,"length"],[154,57,150,55],[154,58,150,56],[155,8,151,6],[155,9,151,7],[156,8,152,6,"onStopped"],[156,17,152,15],[156,19,152,17,"onStopped"],[156,20,152,17],[156,25,152,23],[157,10,153,8,"console"],[157,17,153,15],[157,18,153,16,"log"],[157,21,153,19],[157,22,153,20],[157,44,153,42],[157,45,153,43],[158,8,154,6],[158,9,154,7],[159,8,155,6,"onError"],[159,15,155,13],[159,17,155,16,"error"],[159,22,155,21],[159,26,155,26],[160,10,156,8,"console"],[160,17,156,15],[160,18,156,16,"error"],[160,23,156,21],[160,24,156,22],[160,45,156,43],[160,47,156,45,"error"],[160,52,156,50],[160,53,156,51],[161,10,157,8],[161,14,157,12],[161,15,157,13,"trackSpeechMetric"],[161,32,157,30],[161,33,157,31],[161,40,157,38],[161,42,157,40,"text"],[161,46,157,44],[161,47,157,45,"length"],[161,53,157,51],[161,54,157,52],[162,8,158,6],[163,6,159,4],[163,7,159,5],[164,6,161,4],[164,10,161,8],[165,8,162,6],[165,14,162,12,"Speech"],[165,20,162,18],[165,21,162,19,"speak"],[165,26,162,24],[165,27,162,25,"text"],[165,31,162,29],[165,33,162,31,"speechOptions"],[165,46,162,44],[165,47,162,45],[166,8,163,6],[166,12,163,10],[166,13,163,11,"trackSpeechMetric"],[166,30,163,28],[166,31,163,29],[166,40,163,38],[166,42,163,40,"text"],[166,46,163,44],[166,47,163,45,"length"],[166,53,163,51],[166,54,163,52],[167,6,164,4],[167,7,164,5],[167,8,164,6],[167,15,164,13,"error"],[167,20,164,18],[167,22,164,20],[168,8,165,6,"console"],[168,15,165,13],[168,16,165,14,"error"],[168,21,165,19],[168,22,165,20],[168,38,165,36],[168,40,165,38,"error"],[168,45,165,43],[168,46,165,44],[169,6,166,4],[170,4,167,2],[172,4,169,2],[173,0,170,0],[174,0,171,0],[175,4,172,2],[175,10,172,8,"stopSpeaking"],[175,22,172,20,"stopSpeaking"],[175,23,172,20],[175,25,172,38],[176,6,173,4],[176,10,173,8],[177,8,174,6],[177,14,174,12,"Speech"],[177,20,174,18],[177,21,174,19,"stop"],[177,25,174,23],[177,26,174,24],[177,27,174,25],[178,6,175,4],[178,7,175,5],[178,8,175,6],[178,15,175,13,"error"],[178,20,175,18],[178,22,175,20],[179,8,176,6,"console"],[179,15,176,13],[179,16,176,14,"error"],[179,21,176,19],[179,22,176,20],[179,46,176,44],[179,48,176,46,"error"],[179,53,176,51],[179,54,176,52],[180,6,177,4],[181,4,178,2],[183,4,180,2],[184,0,181,0],[185,0,182,0],[186,4,183,2],[186,10,183,8,"isSpeaking"],[186,20,183,18,"isSpeaking"],[186,21,183,18],[186,23,183,39],[187,6,184,4],[187,10,184,8],[188,8,185,6],[188,15,185,13],[188,21,185,19,"Speech"],[188,27,185,25],[188,28,185,26,"isSpeakingAsync"],[188,43,185,41],[188,44,185,42],[188,45,185,43],[189,6,186,4],[189,7,186,5],[189,8,186,6],[189,15,186,13,"error"],[189,20,186,18],[189,22,186,20],[190,8,187,6,"console"],[190,15,187,13],[190,16,187,14,"error"],[190,21,187,19],[190,22,187,20],[190,54,187,52],[190,56,187,54,"error"],[190,61,187,59],[190,62,187,60],[191,8,188,6],[191,15,188,13],[191,20,188,18],[192,6,189,4],[193,4,190,2],[195,4,192,2],[196,0,193,0],[197,0,194,0],[198,4,195,2],[198,10,195,8,"getAvailableVoices"],[198,28,195,26,"getAvailableVoices"],[198,29,195,26],[198,31,195,54],[199,6,196,4],[199,10,196,8],[200,8,197,6],[200,12,197,10,"Platform"],[200,29,197,18],[200,30,197,19,"OS"],[200,32,197,21],[200,37,197,26],[200,42,197,31],[200,44,197,33],[200,51,197,40],[200,53,197,42],[201,8,198,6],[201,15,198,13],[201,21,198,19,"Speech"],[201,27,198,25],[201,28,198,26,"getAvailableVoicesAsync"],[201,51,198,49],[201,52,198,50],[201,53,198,51],[202,6,199,4],[202,7,199,5],[202,8,199,6],[202,15,199,13,"error"],[202,20,199,18],[202,22,199,20],[203,8,200,6,"console"],[203,15,200,13],[203,16,200,14,"error"],[203,21,200,19],[203,22,200,20],[203,55,200,53],[203,57,200,55,"error"],[203,62,200,60],[203,63,200,61],[204,8,201,6],[204,15,201,13],[204,17,201,15],[205,6,202,4],[206,4,203,2],[208,4,205,2],[209,0,206,0],[210,0,207,0],[211,4,208,2],[211,10,208,16,"isSystemSilent"],[211,24,208,30,"isSystemSilent"],[211,25,208,30],[211,27,208,51],[212,6,209,4],[213,6,210,4],[214,6,211,4],[214,13,211,11],[214,18,211,16],[215,4,212,2],[217,4,214,2],[218,0,215,0],[219,0,216,0],[220,4,217,10,"trackSpeechMetric"],[220,21,217,27,"trackSpeechMetric"],[220,22,217,28,"event"],[220,27,217,68],[220,29,217,70,"textLength"],[220,39,217,88],[220,41,217,90],[221,6,218,4],[222,6,219,4,"console"],[222,13,219,11],[222,14,219,12,"log"],[222,17,219,15],[222,18,219,16],[222,36,219,34,"event"],[222,41,219,39],[222,46,219,44,"textLength"],[222,56,219,54],[222,69,219,67],[222,70,219,68],[223,4,220,2],[225,4,222,2],[226,0,223,0],[227,0,224,0],[228,4,225,2],[228,10,225,8,"speakGreeting"],[228,23,225,21,"speakGreeting"],[228,24,225,22,"greeting"],[228,32,225,38],[228,34,225,55],[229,6,226,4],[229,12,226,10,"warmGreeting"],[229,24,226,22],[229,27,226,25],[229,31,226,29],[229,32,226,30,"addWarmth"],[229,41,226,39],[229,42,226,40,"greeting"],[229,50,226,48],[229,51,226,49],[230,6,227,4],[230,12,227,10],[230,16,227,14],[230,17,227,15,"speakAisle"],[230,27,227,25],[230,28,227,26,"warmGreeting"],[230,40,227,38],[230,42,227,40],[231,8,227,42,"priority"],[231,16,227,50],[231,18,227,52],[232,6,227,61],[232,7,227,62],[232,8,227,63],[233,4,228,2],[235,4,230,2],[236,0,231,0],[237,0,232,0],[238,4,233,2],[238,10,233,8,"speakInsight"],[238,22,233,20,"speakInsight"],[238,23,233,21,"insight"],[238,30,233,36],[238,32,233,53],[239,6,234,4],[239,12,234,10,"enthusiasticInsight"],[239,31,234,29],[239,34,234,32],[239,38,234,36],[239,39,234,37,"addEnthusiasm"],[239,52,234,50],[239,53,234,51,"insight"],[239,60,234,58],[239,61,234,59],[240,6,235,4],[240,12,235,10],[240,16,235,14],[240,17,235,15,"speakAisle"],[240,27,235,25],[240,28,235,26,"enthusiasticInsight"],[240,47,235,45],[240,49,235,47],[241,8,235,49,"priority"],[241,16,235,57],[241,18,235,59],[242,6,235,65],[242,7,235,66],[242,8,235,67],[243,4,236,2],[245,4,238,2],[246,0,239,0],[247,0,240,0],[248,4,241,2],[248,10,241,8,"speakWelcome"],[248,22,241,20,"speakWelcome"],[248,23,241,20],[248,25,241,38],[249,6,242,4],[249,12,242,10,"welcomeMessage"],[249,26,242,24],[249,29,242,27],[249,81,242,79],[250,6,243,4],[250,12,243,10],[250,16,243,14],[250,17,243,15,"speakAisle"],[250,27,243,25],[250,28,243,26,"welcomeMessage"],[250,42,243,40],[250,44,243,42],[251,8,243,44,"priority"],[251,16,243,52],[251,18,243,54],[251,24,243,60],[252,8,243,62,"skipIfDisabled"],[252,22,243,76],[252,24,243,78],[253,6,243,84],[253,7,243,85],[253,8,243,86],[254,4,244,2],[256,4,246,2],[257,0,247,0],[258,0,248,0],[259,4,249,10,"addWarmth"],[259,13,249,19,"addWarmth"],[259,14,249,20,"text"],[259,18,249,32],[259,20,249,42],[260,6,250,4],[261,6,251,4],[261,13,251,11,"text"],[261,17,251,15],[261,18,252,7,"replace"],[261,25,252,14],[261,26,252,15],[261,31,252,20],[261,33,252,22],[261,39,252,28],[261,40,252,29],[261,41,252,30],[262,6,252,30],[262,7,253,7,"replace"],[262,14,253,14],[262,15,253,15],[262,19,253,19],[262,21,253,21],[262,25,253,25],[262,26,253,26],[262,27,253,27],[263,6,253,27],[263,7,254,7,"replace"],[263,14,254,14],[263,15,254,15],[263,20,254,20],[263,22,254,22],[263,26,254,26],[263,27,254,27],[263,28,254,28],[263,29,254,29],[264,4,255,2],[266,4,257,2],[267,0,258,0],[268,0,259,0],[269,4,260,10,"addEnthusiasm"],[269,17,260,23,"addEnthusiasm"],[269,18,260,24,"text"],[269,22,260,36],[269,24,260,46],[270,6,261,4],[271,6,262,4],[271,12,262,10,"enthusiasticPrefixes"],[271,32,262,30],[271,35,262,33],[271,36,263,6],[271,68,263,38],[271,70,264,6],[271,86,264,22],[271,88,265,6],[271,101,265,19],[271,103,266,6],[271,126,266,29],[271,127,267,5],[272,6,269,4],[272,12,269,10,"prefix"],[272,18,269,16],[272,21,269,19,"enthusiasticPrefixes"],[272,41,269,39],[272,42,269,40,"Math"],[272,46,269,44],[272,47,269,45,"floor"],[272,52,269,50],[272,53,269,51,"Math"],[272,57,269,55],[272,58,269,56,"random"],[272,64,269,62],[272,65,269,63],[272,66,269,64],[272,69,269,67,"enthusiasticPrefixes"],[272,89,269,87],[272,90,269,88,"length"],[272,96,269,94],[272,97,269,95],[272,98,269,96],[273,6,270,4],[273,13,270,11,"prefix"],[273,19,270,17],[273,22,270,20,"text"],[273,26,270,24],[274,4,271,2],[276,4,273,2],[277,0,274,0],[278,0,275,0],[279,4,276,2],[279,10,276,8,"requestVoicePermission"],[279,32,276,30,"requestVoicePermission"],[279,33,276,30],[279,35,276,81],[280,6,277,4],[281,6,278,4],[282,6,279,4],[282,13,279,11],[283,8,280,6,"granted"],[283,15,280,13],[283,17,280,15],[283,22,280,20],[284,8,280,22],[285,8,281,6,"message"],[285,15,281,13],[285,17,281,15],[286,6,282,4],[286,7,282,5],[287,4,283,2],[288,2,284,0],[290,2,286,0],[291,2,287,7],[291,8,287,13,"voiceService"],[291,20,287,25],[291,23,287,25,"exports"],[291,30,287,25],[291,31,287,25,"voiceService"],[291,43,287,25],[291,46,287,28,"VoiceService"],[291,58,287,40],[291,59,287,41,"getInstance"],[291,70,287,52],[291,71,287,53],[291,72,287,54],[292,2,287,55],[292,6,287,55,"_default"],[292,14,287,55],[292,17,287,55,"exports"],[292,24,287,55],[292,25,287,55,"default"],[292,32,287,55],[292,35,288,15,"voiceService"],[292,47,288,27],[293,0,288,27],[293,3]],"functionMap":{"names":["<global>","VoiceService","constructor","getInstance","initializeSettings","saveSettings","enableVoice","disableVoice","isVoiceEnabled","getSettings","updateSettings","speakAisle","speechOptions.onStart","speechOptions.onDone","speechOptions.onStopped","speechOptions.onError","stopSpeaking","isSpeaking","getAvailableVoices","isSystemSilent","trackSpeechMetric","speakGreeting","speakInsight","speakWelcome","addWarmth","addEnthusiasm","requestVoicePermission"],"mappings":"AAA;ACY;ECa;GDE;EEE;GFK;EGE;GHW;EIE;GJM;EKK;GLQ;EMK;GNI;EOK;GPE;EQK;GRE;ESK;GTG;EUK;eCuC;ODE;cEC;OFI;iBGC;OHE;eIC;OJG;GVS;EeK;GfM;EgBK;GhBO;EiBK;GjBQ;EkBK;GlBI;EmBK;GnBG;EoBK;GpBG;EqBK;GrBG;EsBK;GtBG;EuBK;GvBM;EwBK;GxBW;EyBK;GzBO;CDC"}},"type":"js/module"}]}