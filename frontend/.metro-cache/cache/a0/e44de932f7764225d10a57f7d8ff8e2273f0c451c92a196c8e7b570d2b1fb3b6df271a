{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createStringifySafeWithLimits = createStringifySafeWithLimits;\n  exports.default = void 0;\n  var _invariant = _interopRequireDefault(require(_dependencyMap[1], \"invariant\"));\n  function createStringifySafeWithLimits(limits) {\n    const {\n      maxDepth = Number.POSITIVE_INFINITY,\n      maxStringLimit = Number.POSITIVE_INFINITY,\n      maxArrayLimit = Number.POSITIVE_INFINITY,\n      maxObjectKeysLimit = Number.POSITIVE_INFINITY\n    } = limits;\n    const stack = [];\n    function replacer(key, value) {\n      while (stack.length && this !== stack[0]) {\n        stack.shift();\n      }\n      if (typeof value === 'string') {\n        const truncatedString = '...(truncated)...';\n        if (value.length > maxStringLimit + truncatedString.length) {\n          return value.substring(0, maxStringLimit) + truncatedString;\n        }\n        return value;\n      }\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      let retval = value;\n      if (Array.isArray(value)) {\n        if (stack.length >= maxDepth) {\n          retval = `[ ... array with ${value.length} values ... ]`;\n        } else if (value.length > maxArrayLimit) {\n          retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n        }\n      } else {\n        (0, _invariant.default)(typeof value === 'object', 'This was already found earlier');\n        let keys = Object.keys(value);\n        if (stack.length >= maxDepth) {\n          retval = `{ ... object with ${keys.length} keys ... }`;\n        } else if (keys.length > maxObjectKeysLimit) {\n          retval = {};\n          for (let k of keys.slice(0, maxObjectKeysLimit)) {\n            retval[k] = value[k];\n          }\n          const truncatedKey = '...(truncated keys)...';\n          retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n        }\n      }\n      stack.unshift(retval);\n      return retval;\n    }\n    return function stringifySafe(arg) {\n      if (arg === undefined) {\n        return 'undefined';\n      } else if (arg === null) {\n        return 'null';\n      } else if (typeof arg === 'function') {\n        try {\n          return arg.toString();\n        } catch (e) {\n          return '[function unknown]';\n        }\n      } else if (arg instanceof Error) {\n        return arg.name + ': ' + arg.message;\n      } else {\n        try {\n          const ret = JSON.stringify(arg, replacer);\n          if (ret === undefined) {\n            return '[\"' + typeof arg + '\" failed to stringify]';\n          }\n          return ret;\n        } catch (e) {\n          if (typeof arg.toString === 'function') {\n            try {\n              return arg.toString();\n            } catch (E) {}\n          }\n        }\n      }\n      return '[\"' + typeof arg + '\" failed to stringify]';\n    };\n  }\n  const stringifySafe = createStringifySafeWithLimits({\n    maxDepth: 10,\n    maxStringLimit: 100,\n    maxArrayLimit: 50,\n    maxObjectKeysLimit: 50\n  });\n  var _default = exports.default = stringifySafe;\n});","lineCount":93,"map":[[8,2,11,0],[8,6,11,0,"_invariant"],[8,16,11,0],[8,19,11,0,"_interopRequireDefault"],[8,41,11,0],[8,42,11,0,"require"],[8,49,11,0],[8,50,11,0,"_dependencyMap"],[8,64,11,0],[9,2,17,7],[9,11,17,16,"createStringifySafeWithLimits"],[9,40,17,45,"createStringifySafeWithLimits"],[9,41,17,46,"limits"],[9,47,22,1],[9,49,22,20],[10,4,23,2],[10,10,23,8],[11,6,24,4,"maxDepth"],[11,14,24,12],[11,17,24,15,"Number"],[11,23,24,21],[11,24,24,22,"POSITIVE_INFINITY"],[11,41,24,39],[12,6,25,4,"maxStringLimit"],[12,20,25,18],[12,23,25,21,"Number"],[12,29,25,27],[12,30,25,28,"POSITIVE_INFINITY"],[12,47,25,45],[13,6,26,4,"maxArrayLimit"],[13,19,26,17],[13,22,26,20,"Number"],[13,28,26,26],[13,29,26,27,"POSITIVE_INFINITY"],[13,46,26,44],[14,6,27,4,"maxObjectKeysLimit"],[14,24,27,22],[14,27,27,25,"Number"],[14,33,27,31],[14,34,27,32,"POSITIVE_INFINITY"],[15,4,28,2],[15,5,28,3],[15,8,28,6,"limits"],[15,14,28,12],[16,4,29,2],[16,10,29,8,"stack"],[16,15,29,27],[16,18,29,30],[16,20,29,32],[17,4,32,2],[17,13,32,11,"replacer"],[17,21,32,19,"replacer"],[17,22,32,20,"key"],[17,25,32,31],[17,27,32,33,"value"],[17,32,32,45],[17,34,32,54],[18,6,33,4],[18,13,33,11,"stack"],[18,18,33,16],[18,19,33,17,"length"],[18,25,33,23],[18,29,33,27],[18,33,33,31],[18,38,33,36,"stack"],[18,43,33,41],[18,44,33,42],[18,45,33,43],[18,46,33,44],[18,48,33,46],[19,8,34,6,"stack"],[19,13,34,11],[19,14,34,12,"shift"],[19,19,34,17],[19,20,34,18],[19,21,34,19],[20,6,35,4],[21,6,37,4],[21,10,37,8],[21,17,37,15,"value"],[21,22,37,20],[21,27,37,25],[21,35,37,33],[21,37,37,35],[22,8,38,6],[22,14,38,12,"truncatedString"],[22,29,38,27],[22,32,38,30],[22,51,38,49],[23,8,39,6],[23,12,39,10,"value"],[23,17,39,15],[23,18,39,16,"length"],[23,24,39,22],[23,27,39,25,"maxStringLimit"],[23,41,39,39],[23,44,39,42,"truncatedString"],[23,59,39,57],[23,60,39,58,"length"],[23,66,39,64],[23,68,39,66],[24,10,40,8],[24,17,40,15,"value"],[24,22,40,20],[24,23,40,21,"substring"],[24,32,40,30],[24,33,40,31],[24,34,40,32],[24,36,40,34,"maxStringLimit"],[24,50,40,48],[24,51,40,49],[24,54,40,52,"truncatedString"],[24,69,40,67],[25,8,41,6],[26,8,42,6],[26,15,42,13,"value"],[26,20,42,18],[27,6,43,4],[28,6,44,4],[28,10,44,8],[28,17,44,15,"value"],[28,22,44,20],[28,27,44,25],[28,35,44,33],[28,39,44,37,"value"],[28,44,44,42],[28,49,44,47],[28,53,44,51],[28,55,44,53],[29,8,45,6],[29,15,45,13,"value"],[29,20,45,18],[30,6,46,4],[31,6,48,4],[31,10,48,8,"retval"],[31,16,48,21],[31,19,48,24,"value"],[31,24,48,29],[32,6,49,4],[32,10,49,8,"Array"],[32,15,49,13],[32,16,49,14,"isArray"],[32,23,49,21],[32,24,49,22,"value"],[32,29,49,27],[32,30,49,28],[32,32,49,30],[33,8,50,6],[33,12,50,10,"stack"],[33,17,50,15],[33,18,50,16,"length"],[33,24,50,22],[33,28,50,26,"maxDepth"],[33,36,50,34],[33,38,50,36],[34,10,51,8,"retval"],[34,16,51,14],[34,19,51,17],[34,39,51,37,"value"],[34,44,51,42],[34,45,51,43,"length"],[34,51,51,49],[34,66,51,64],[35,8,52,6],[35,9,52,7],[35,15,52,13],[35,19,52,17,"value"],[35,24,52,22],[35,25,52,23,"length"],[35,31,52,29],[35,34,52,32,"maxArrayLimit"],[35,47,52,45],[35,49,52,47],[36,10,53,8,"retval"],[36,16,53,14],[36,19,53,17,"value"],[36,24,53,22],[36,25,54,11,"slice"],[36,30,54,16],[36,31,54,17],[36,32,54,18],[36,34,54,20,"maxArrayLimit"],[36,47,54,33],[36,48,54,34],[36,49,55,11,"concat"],[36,55,55,17],[36,56,55,18],[36,57,56,12],[36,70,56,25,"value"],[36,75,56,30],[36,76,56,31,"length"],[36,82,56,37],[36,85,56,40,"maxArrayLimit"],[36,98,56,53],[36,121,56,76],[36,122,57,11],[36,123,57,12],[37,8,58,6],[38,6,59,4],[38,7,59,5],[38,13,59,11],[39,8,61,6],[39,12,61,6,"invariant"],[39,30,61,15],[39,32,61,16],[39,39,61,23,"value"],[39,44,61,28],[39,49,61,33],[39,57,61,41],[39,59,61,43],[39,91,61,75],[39,92,61,76],[40,8,62,6],[40,12,62,10,"keys"],[40,16,62,14],[40,19,62,17,"Object"],[40,25,62,23],[40,26,62,24,"keys"],[40,30,62,28],[40,31,62,29,"value"],[40,36,62,34],[40,37,62,35],[41,8,63,6],[41,12,63,10,"stack"],[41,17,63,15],[41,18,63,16,"length"],[41,24,63,22],[41,28,63,26,"maxDepth"],[41,36,63,34],[41,38,63,36],[42,10,64,8,"retval"],[42,16,64,14],[42,19,64,17],[42,40,64,38,"keys"],[42,44,64,42],[42,45,64,43,"length"],[42,51,64,49],[42,64,64,62],[43,8,65,6],[43,9,65,7],[43,15,65,13],[43,19,65,17,"keys"],[43,23,65,21],[43,24,65,22,"length"],[43,30,65,28],[43,33,65,31,"maxObjectKeysLimit"],[43,51,65,49],[43,53,65,51],[44,10,67,8,"retval"],[44,16,67,14],[44,19,67,18],[44,20,67,19],[44,21,67,40],[45,10,68,8],[45,15,68,13],[45,19,68,17,"k"],[45,20,68,18],[45,24,68,22,"keys"],[45,28,68,26],[45,29,68,27,"slice"],[45,34,68,32],[45,35,68,33],[45,36,68,34],[45,38,68,36,"maxObjectKeysLimit"],[45,56,68,54],[45,57,68,55],[45,59,68,57],[46,12,69,10,"retval"],[46,18,69,16],[46,19,69,17,"k"],[46,20,69,18],[46,21,69,19],[46,24,69,22,"value"],[46,29,69,27],[46,30,69,28,"k"],[46,31,69,29],[46,32,69,30],[47,10,70,8],[48,10,71,8],[48,16,71,14,"truncatedKey"],[48,28,71,26],[48,31,71,29],[48,55,71,53],[49,10,72,8,"retval"],[49,16,72,14],[49,17,72,15,"truncatedKey"],[49,29,72,27],[49,30,72,28],[49,33,72,31,"keys"],[49,37,72,35],[49,38,72,36,"length"],[49,44,72,42],[49,47,72,45,"maxObjectKeysLimit"],[49,65,72,63],[50,8,73,6],[51,6,74,4],[52,6,75,4,"stack"],[52,11,75,9],[52,12,75,10,"unshift"],[52,19,75,17],[52,20,75,18,"retval"],[52,26,75,24],[52,27,75,25],[53,6,76,4],[53,13,76,11,"retval"],[53,19,76,17],[54,4,77,2],[55,4,79,2],[55,11,79,9],[55,20,79,18,"stringifySafe"],[55,33,79,31,"stringifySafe"],[55,34,79,32,"arg"],[55,37,79,42],[55,39,79,52],[56,6,80,4],[56,10,80,8,"arg"],[56,13,80,11],[56,18,80,16,"undefined"],[56,27,80,25],[56,29,80,27],[57,8,81,6],[57,15,81,13],[57,26,81,24],[58,6,82,4],[58,7,82,5],[58,13,82,11],[58,17,82,15,"arg"],[58,20,82,18],[58,25,82,23],[58,29,82,27],[58,31,82,29],[59,8,83,6],[59,15,83,13],[59,21,83,19],[60,6,84,4],[60,7,84,5],[60,13,84,11],[60,17,84,15],[60,24,84,22,"arg"],[60,27,84,25],[60,32,84,30],[60,42,84,40],[60,44,84,42],[61,8,85,6],[61,12,85,10],[62,10,86,8],[62,17,86,15,"arg"],[62,20,86,18],[62,21,86,19,"toString"],[62,29,86,27],[62,30,86,28],[62,31,86,29],[63,8,87,6],[63,9,87,7],[63,10,87,8],[63,17,87,15,"e"],[63,18,87,16],[63,20,87,18],[64,10,88,8],[64,17,88,15],[64,37,88,35],[65,8,89,6],[66,6,90,4],[66,7,90,5],[66,13,90,11],[66,17,90,15,"arg"],[66,20,90,18],[66,32,90,30,"Error"],[66,37,90,35],[66,39,90,37],[67,8,91,6],[67,15,91,13,"arg"],[67,18,91,16],[67,19,91,17,"name"],[67,23,91,21],[67,26,91,24],[67,30,91,28],[67,33,91,31,"arg"],[67,36,91,34],[67,37,91,35,"message"],[67,44,91,42],[68,6,92,4],[68,7,92,5],[68,13,92,11],[69,8,95,6],[69,12,95,10],[70,10,96,8],[70,16,96,14,"ret"],[70,19,96,17],[70,22,96,20,"JSON"],[70,26,96,24],[70,27,96,25,"stringify"],[70,36,96,34],[70,37,96,35,"arg"],[70,40,96,38],[70,42,96,40,"replacer"],[70,50,96,48],[70,51,96,49],[71,10,97,8],[71,14,97,12,"ret"],[71,17,97,15],[71,22,97,20,"undefined"],[71,31,97,29],[71,33,97,31],[72,12,98,10],[72,19,98,17],[72,23,98,21],[72,26,98,24],[72,33,98,31,"arg"],[72,36,98,34],[72,39,98,37],[72,63,98,61],[73,10,99,8],[74,10,100,8],[74,17,100,15,"ret"],[74,20,100,18],[75,8,101,6],[75,9,101,7],[75,10,101,8],[75,17,101,15,"e"],[75,18,101,16],[75,20,101,18],[76,10,102,8],[76,14,102,12],[76,21,102,19,"arg"],[76,24,102,22],[76,25,102,23,"toString"],[76,33,102,31],[76,38,102,36],[76,48,102,46],[76,50,102,48],[77,12,103,10],[77,16,103,14],[78,14,105,12],[78,21,105,19,"arg"],[78,24,105,22],[78,25,105,23,"toString"],[78,33,105,31],[78,34,105,32],[78,35,105,33],[79,12,106,10],[79,13,106,11],[79,14,106,12],[79,21,106,19,"E"],[79,22,106,20],[79,24,106,22],[79,25,106,23],[80,10,107,8],[81,8,108,6],[82,6,109,4],[83,6,110,4],[83,13,110,11],[83,17,110,15],[83,20,110,18],[83,27,110,25,"arg"],[83,30,110,28],[83,33,110,31],[83,57,110,55],[84,4,111,2],[84,5,111,3],[85,2,112,0],[86,2,114,0],[86,8,114,6,"stringifySafe"],[86,21,114,36],[86,24,114,39,"createStringifySafeWithLimits"],[86,53,114,68],[86,54,114,69],[87,4,115,2,"maxDepth"],[87,12,115,10],[87,14,115,12],[87,16,115,14],[88,4,116,2,"maxStringLimit"],[88,18,116,16],[88,20,116,18],[88,23,116,21],[89,4,117,2,"maxArrayLimit"],[89,17,117,15],[89,19,117,17],[89,21,117,19],[90,4,118,2,"maxObjectKeysLimit"],[90,22,118,20],[90,24,118,22],[91,2,119,0],[91,3,119,1],[91,4,119,2],[92,2,119,3],[92,6,119,3,"_default"],[92,14,119,3],[92,17,119,3,"exports"],[92,24,119,3],[92,25,119,3,"default"],[92,32,119,3],[92,35,121,15,"stringifySafe"],[92,48,121,28],[93,0,121,28],[93,3]],"functionMap":{"names":["<global>","createStringifySafeWithLimits","replacer","stringifySafe"],"mappings":"AAA;OCgB;ECe;GD6C;SEE;GFgC;CDC"}},"type":"js/module"}]}