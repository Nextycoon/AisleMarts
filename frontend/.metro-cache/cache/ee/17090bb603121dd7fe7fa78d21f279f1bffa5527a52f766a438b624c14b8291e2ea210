{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"../api/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"vrY6iF+Nd2CrRu9d6eBxeX1BPiA=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"@react-native-voice/voice","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":61,"column":22,"index":1218},"end":{"line":61,"column":58,"index":1254}}],"key":"XwZY785fsg+A2+ChTu5WGh6oXyE=","exportNames":["*"],"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.aiService = void 0;\n  var _client = require(_dependencyMap[1], \"../api/client\");\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  class AIService {\n    voiceService = null;\n    constructor() {\n      this.initializeVoiceService();\n    }\n    static getInstance() {\n      if (!AIService.instance) {\n        AIService.instance = new AIService();\n      }\n      return AIService.instance;\n    }\n    initializeVoiceService() {\n      if (_Platform.default.OS !== 'web') {\n        try {\n          const Voice = require(_dependencyMap[3], \"@react-native-voice/voice\");\n          this.voiceService = Voice.default || Voice;\n        } catch (error) {\n          console.warn('Voice service not available:', error);\n        }\n      }\n    }\n\n    /**\n     * Detect user's locale and get AI-powered recommendations\n     */\n    async detectLocale() {\n      try {\n        const response = await _client.API.get('/ai/locale-detection');\n        return response.data;\n      } catch (error) {\n        console.error('Locale detection failed:', error);\n        // Fallback locale\n        return {\n          country: 'US',\n          language: 'en',\n          currency: 'USD',\n          recommendations: {\n            message: 'Welcome to AisleMarts! Start exploring our global marketplace.',\n            categories: ['Electronics', 'Fashion', 'Home & Garden'],\n            next_steps: ['Browse products', 'Set up profile', 'Add items to cart']\n          }\n        };\n      }\n    }\n\n    /**\n     * Chat with personal AI agent\n     */\n    async chatWithAgent(message, context) {\n      try {\n        const response = await _client.API.post('/ai/chat', {\n          message,\n          context\n        });\n        return response.data;\n      } catch (error) {\n        console.error('AI chat failed:', error);\n        return {\n          response: \"I'm having trouble right now. Please try again later.\",\n          agent_id: 'fallback',\n          timestamp: new Date().toISOString()\n        };\n      }\n    }\n\n    /**\n     * Get AI-powered onboarding guidance\n     */\n    async getOnboardingGuidance(userInfo) {\n      try {\n        const response = await _client.API.post('/ai/onboarding', {\n          user_info: userInfo\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Onboarding guidance failed:', error);\n        return {\n          guidance: 'Welcome to AisleMarts! Explore products, add to cart, and enjoy seamless global shopping.',\n          user_role: 'buyer'\n        };\n      }\n    }\n\n    /**\n     * Get AI-powered product recommendations\n     */\n    async getProductRecommendations(query, maxResults = 10) {\n      try {\n        const response = await _client.API.post('/ai/recommendations', {\n          query,\n          max_results: maxResults\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Product recommendations failed:', error);\n        return {\n          recommendations: [],\n          ai_explanation: 'Unable to get AI recommendations at this time.',\n          query\n        };\n      }\n    }\n\n    /**\n     * Enhance search query with AI\n     */\n    async enhanceSearchQuery(query, context) {\n      try {\n        const response = await _client.API.post('/ai/search/enhance', {\n          query,\n          context\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Search enhancement failed:', error);\n        return {\n          original_query: query,\n          enhanced_keywords: query.split(),\n          suggested_filters: {},\n          search_intent: 'product_search',\n          synonyms: []\n        };\n      }\n    }\n\n    /**\n     * Analyze user intent\n     */\n    async analyzeIntent(message) {\n      try {\n        const response = await _client.API.post('/ai/intent-analysis', null, {\n          params: {\n            message\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Intent analysis failed:', error);\n        return {\n          intent_type: 'general_help',\n          extracted_keywords: [message],\n          suggested_actions: ['Browse products'],\n          urgency_level: 'low'\n        };\n      }\n    }\n\n    /**\n     * Track user activity for AI personalization\n     */\n    async trackActivity(activityData) {\n      try {\n        await _client.API.post('/ai/track-activity', activityData);\n      } catch (error) {\n        console.error('Activity tracking failed:', error);\n      }\n    }\n\n    /**\n     * Voice search functionality\n     */\n    async startVoiceSearch() {\n      return new Promise((resolve, reject) => {\n        if (!this.voiceService || _Platform.default.OS === 'web') {\n          reject(new Error('Voice search not available on this platform'));\n          return;\n        }\n        const timeout = setTimeout(() => {\n          this.voiceService.stop();\n          reject(new Error('Voice search timeout'));\n        }, 10000);\n        this.voiceService.onSpeechResults = event => {\n          clearTimeout(timeout);\n          const results = event.value || [];\n          if (results.length > 0) {\n            resolve(results[0]);\n          } else {\n            reject(new Error('No speech recognized'));\n          }\n        };\n        this.voiceService.onSpeechError = event => {\n          clearTimeout(timeout);\n          reject(new Error(event.error?.message || 'Voice search failed'));\n        };\n        this.voiceService.start('en-US').catch(error => {\n          clearTimeout(timeout);\n          reject(error);\n        });\n      });\n    }\n\n    /**\n     * Stop voice search\n     */\n    async stopVoiceSearch() {\n      if (this.voiceService && _Platform.default.OS !== 'web') {\n        try {\n          await this.voiceService.stop();\n        } catch (error) {\n          console.error('Failed to stop voice search:', error);\n        }\n      }\n    }\n\n    /**\n     * Process voice search query\n     */\n    async processVoiceSearch(audioText) {\n      try {\n        const response = await _client.API.post('/ai/voice-search', null, {\n          params: {\n            audio_text: audioText\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Voice search processing failed:', error);\n        return {\n          original_query: audioText,\n          enhanced_query: {\n            original_query: audioText\n          },\n          products: [],\n          response_type: 'voice_search'\n        };\n      }\n    }\n\n    /**\n     * Get AI welcome message based on user profile\n     */\n    async getWelcomeMessage(user) {\n      if (!user) {\n        return \"Welcome to AisleMarts! üåç Your AI-powered global marketplace. What can I help you find today?\";\n      }\n      try {\n        const context = {\n          user_name: user.name,\n          user_roles: user.roles,\n          returning_user: true\n        };\n        const response = await this.chatWithAgent(\"Give me a personalized welcome message for this returning user\", context);\n        return response.response;\n      } catch (error) {\n        return `Welcome back, ${user.name || 'friend'}! üåç Ready to explore more amazing products from around the world?`;\n      }\n    }\n\n    /**\n     * Get smart search suggestions\n     */\n    async getSearchSuggestions(partialQuery) {\n      try {\n        const response = await this.enhanceSearchQuery(partialQuery);\n        return [response.original_query, ...(response.enhanced_keywords || []), ...(response.synonyms || [])].filter(Boolean).slice(0, 5);\n      } catch (error) {\n        console.error('Search suggestions failed:', error);\n        return [partialQuery];\n      }\n    }\n\n    /**\n     * Get contextual help based on current screen\n     */\n    async getContextualHelp(screenName, context) {\n      const helpPrompts = {\n        home: \"How can I help you find products on the home screen?\",\n        product: \"Do you need help with this product or have questions about it?\",\n        cart: \"Need help with your shopping cart or checkout process?\",\n        profile: \"How can I assist with your account or settings?\",\n        orders: \"Do you have questions about your orders or order history?\"\n      };\n      const prompt = helpPrompts[screenName] || \"How can I help you navigate AisleMarts?\";\n      try {\n        const response = await this.chatWithAgent(prompt, {\n          screen: screenName,\n          ...context\n        });\n        return response.response;\n      } catch (error) {\n        return \"I'm here to help! Ask me anything about finding products, placing orders, or using AisleMarts.\";\n      }\n    }\n  }\n\n  // Export singleton instance\n  const aiService = exports.aiService = AIService.getInstance();\n  var _default = exports.default = aiService;\n});","lineCount":297,"map":[[7,2,1,0],[7,6,1,0,"_client"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,1,36],[8,6,1,36,"_Platform"],[8,15,1,36],[8,18,1,36,"_interopRequireDefault"],[8,40,1,36],[8,41,1,36,"require"],[8,48,1,36],[8,49,1,36,"_dependencyMap"],[8,63,1,36],[9,2,43,0],[9,8,43,6,"AIService"],[9,17,43,15],[9,18,43,16],[10,4,45,10,"voiceService"],[10,16,45,22],[10,19,45,30],[10,23,45,34],[11,4,47,10,"constructor"],[11,15,47,21,"constructor"],[11,16,47,21],[11,18,47,24],[12,6,48,4],[12,10,48,8],[12,11,48,9,"initializeVoiceService"],[12,33,48,31],[12,34,48,32],[12,35,48,33],[13,4,49,2],[14,4,51,2],[14,11,51,16,"getInstance"],[14,22,51,27,"getInstance"],[14,23,51,27],[14,25,51,41],[15,6,52,4],[15,10,52,8],[15,11,52,9,"AIService"],[15,20,52,18],[15,21,52,19,"instance"],[15,29,52,27],[15,31,52,29],[16,8,53,6,"AIService"],[16,17,53,15],[16,18,53,16,"instance"],[16,26,53,24],[16,29,53,27],[16,33,53,31,"AIService"],[16,42,53,40],[16,43,53,41],[16,44,53,42],[17,6,54,4],[18,6,55,4],[18,13,55,11,"AIService"],[18,22,55,20],[18,23,55,21,"instance"],[18,31,55,29],[19,4,56,2],[20,4,58,10,"initializeVoiceService"],[20,26,58,32,"initializeVoiceService"],[20,27,58,32],[20,29,58,35],[21,6,59,4],[21,10,59,8,"Platform"],[21,27,59,16],[21,28,59,17,"OS"],[21,30,59,19],[21,35,59,24],[21,40,59,29],[21,42,59,31],[22,8,60,6],[22,12,60,10],[23,10,61,8],[23,16,61,14,"Voice"],[23,21,61,19],[23,24,61,22,"require"],[23,31,61,29],[23,32,61,29,"_dependencyMap"],[23,46,61,29],[23,78,61,57],[23,79,61,58],[24,10,62,8],[24,14,62,12],[24,15,62,13,"voiceService"],[24,27,62,25],[24,30,62,28,"Voice"],[24,35,62,33],[24,36,62,34,"default"],[24,43,62,41],[24,47,62,45,"Voice"],[24,52,62,50],[25,8,63,6],[25,9,63,7],[25,10,63,8],[25,17,63,15,"error"],[25,22,63,20],[25,24,63,22],[26,10,64,8,"console"],[26,17,64,15],[26,18,64,16,"warn"],[26,22,64,20],[26,23,64,21],[26,53,64,51],[26,55,64,53,"error"],[26,60,64,58],[26,61,64,59],[27,8,65,6],[28,6,66,4],[29,4,67,2],[31,4,69,2],[32,0,70,0],[33,0,71,0],[34,4,72,2],[34,10,72,8,"detectLocale"],[34,22,72,20,"detectLocale"],[34,23,72,20],[34,25,72,44],[35,6,73,4],[35,10,73,8],[36,8,74,6],[36,14,74,12,"response"],[36,22,74,20],[36,25,74,23],[36,31,74,29,"API"],[36,42,74,32],[36,43,74,33,"get"],[36,46,74,36],[36,47,74,37],[36,69,74,59],[36,70,74,60],[37,8,75,6],[37,15,75,13,"response"],[37,23,75,21],[37,24,75,22,"data"],[37,28,75,26],[38,6,76,4],[38,7,76,5],[38,8,76,6],[38,15,76,13,"error"],[38,20,76,18],[38,22,76,20],[39,8,77,6,"console"],[39,15,77,13],[39,16,77,14,"error"],[39,21,77,19],[39,22,77,20],[39,48,77,46],[39,50,77,48,"error"],[39,55,77,53],[39,56,77,54],[40,8,78,6],[41,8,79,6],[41,15,79,13],[42,10,80,8,"country"],[42,17,80,15],[42,19,80,17],[42,23,80,21],[43,10,81,8,"language"],[43,18,81,16],[43,20,81,18],[43,24,81,22],[44,10,82,8,"currency"],[44,18,82,16],[44,20,82,18],[44,25,82,23],[45,10,83,8,"recommendations"],[45,25,83,23],[45,27,83,25],[46,12,84,10,"message"],[46,19,84,17],[46,21,84,19],[46,85,84,83],[47,12,85,10,"categories"],[47,22,85,20],[47,24,85,22],[47,25,85,23],[47,38,85,36],[47,40,85,38],[47,49,85,47],[47,51,85,49],[47,66,85,64],[47,67,85,65],[48,12,86,10,"next_steps"],[48,22,86,20],[48,24,86,22],[48,25,86,23],[48,42,86,40],[48,44,86,42],[48,60,86,58],[48,62,86,60],[48,81,86,79],[49,10,87,8],[50,8,88,6],[50,9,88,7],[51,6,89,4],[52,4,90,2],[54,4,92,2],[55,0,93,0],[56,0,94,0],[57,4,95,2],[57,10,95,8,"chatWithAgent"],[57,23,95,21,"chatWithAgent"],[57,24,95,22,"message"],[57,31,95,37],[57,33,95,39,"context"],[57,40,95,52],[57,42,95,77],[58,6,96,4],[58,10,96,8],[59,8,97,6],[59,14,97,12,"response"],[59,22,97,20],[59,25,97,23],[59,31,97,29,"API"],[59,42,97,32],[59,43,97,33,"post"],[59,47,97,37],[59,48,97,38],[59,58,97,48],[59,60,97,50],[60,10,98,8,"message"],[60,17,98,15],[61,10,99,8,"context"],[62,8,100,6],[62,9,100,7],[62,10,100,8],[63,8,101,6],[63,15,101,13,"response"],[63,23,101,21],[63,24,101,22,"data"],[63,28,101,26],[64,6,102,4],[64,7,102,5],[64,8,102,6],[64,15,102,13,"error"],[64,20,102,18],[64,22,102,20],[65,8,103,6,"console"],[65,15,103,13],[65,16,103,14,"error"],[65,21,103,19],[65,22,103,20],[65,39,103,37],[65,41,103,39,"error"],[65,46,103,44],[65,47,103,45],[66,8,104,6],[66,15,104,13],[67,10,105,8,"response"],[67,18,105,16],[67,20,105,18],[67,75,105,73],[68,10,106,8,"agent_id"],[68,18,106,16],[68,20,106,18],[68,30,106,28],[69,10,107,8,"timestamp"],[69,19,107,17],[69,21,107,19],[69,25,107,23,"Date"],[69,29,107,27],[69,30,107,28],[69,31,107,29],[69,32,107,30,"toISOString"],[69,43,107,41],[69,44,107,42],[70,8,108,6],[70,9,108,7],[71,6,109,4],[72,4,110,2],[74,4,112,2],[75,0,113,0],[76,0,114,0],[77,4,115,2],[77,10,115,8,"getOnboardingGuidance"],[77,31,115,29,"getOnboardingGuidance"],[77,32,115,30,"userInfo"],[77,40,115,43],[77,42,115,95],[78,6,116,4],[78,10,116,8],[79,8,117,6],[79,14,117,12,"response"],[79,22,117,20],[79,25,117,23],[79,31,117,29,"API"],[79,42,117,32],[79,43,117,33,"post"],[79,47,117,37],[79,48,117,38],[79,64,117,54],[79,66,117,56],[80,10,118,8,"user_info"],[80,19,118,17],[80,21,118,19,"userInfo"],[81,8,119,6],[81,9,119,7],[81,10,119,8],[82,8,120,6],[82,15,120,13,"response"],[82,23,120,21],[82,24,120,22,"data"],[82,28,120,26],[83,6,121,4],[83,7,121,5],[83,8,121,6],[83,15,121,13,"error"],[83,20,121,18],[83,22,121,20],[84,8,122,6,"console"],[84,15,122,13],[84,16,122,14,"error"],[84,21,122,19],[84,22,122,20],[84,51,122,49],[84,53,122,51,"error"],[84,58,122,56],[84,59,122,57],[85,8,123,6],[85,15,123,13],[86,10,124,8,"guidance"],[86,18,124,16],[86,20,124,18],[86,111,124,109],[87,10,125,8,"user_role"],[87,19,125,17],[87,21,125,19],[88,8,126,6],[88,9,126,7],[89,6,127,4],[90,4,128,2],[92,4,130,2],[93,0,131,0],[94,0,132,0],[95,4,133,2],[95,10,133,8,"getProductRecommendations"],[95,35,133,33,"getProductRecommendations"],[95,36,133,34,"query"],[95,41,133,47],[95,43,133,49,"maxResults"],[95,53,133,67],[95,56,133,70],[95,58,133,72],[95,60,133,107],[96,6,134,4],[96,10,134,8],[97,8,135,6],[97,14,135,12,"response"],[97,22,135,20],[97,25,135,23],[97,31,135,29,"API"],[97,42,135,32],[97,43,135,33,"post"],[97,47,135,37],[97,48,135,38],[97,69,135,59],[97,71,135,61],[98,10,136,8,"query"],[98,15,136,13],[99,10,137,8,"max_results"],[99,21,137,19],[99,23,137,21,"maxResults"],[100,8,138,6],[100,9,138,7],[100,10,138,8],[101,8,139,6],[101,15,139,13,"response"],[101,23,139,21],[101,24,139,22,"data"],[101,28,139,26],[102,6,140,4],[102,7,140,5],[102,8,140,6],[102,15,140,13,"error"],[102,20,140,18],[102,22,140,20],[103,8,141,6,"console"],[103,15,141,13],[103,16,141,14,"error"],[103,21,141,19],[103,22,141,20],[103,55,141,53],[103,57,141,55,"error"],[103,62,141,60],[103,63,141,61],[104,8,142,6],[104,15,142,13],[105,10,143,8,"recommendations"],[105,25,143,23],[105,27,143,25],[105,29,143,27],[106,10,144,8,"ai_explanation"],[106,24,144,22],[106,26,144,24],[106,74,144,72],[107,10,145,8,"query"],[108,8,146,6],[108,9,146,7],[109,6,147,4],[110,4,148,2],[112,4,150,2],[113,0,151,0],[114,0,152,0],[115,4,153,2],[115,10,153,8,"enhanceSearchQuery"],[115,28,153,26,"enhanceSearchQuery"],[115,29,153,27,"query"],[115,34,153,40],[115,36,153,42,"context"],[115,43,153,55],[115,45,153,71],[116,6,154,4],[116,10,154,8],[117,8,155,6],[117,14,155,12,"response"],[117,22,155,20],[117,25,155,23],[117,31,155,29,"API"],[117,42,155,32],[117,43,155,33,"post"],[117,47,155,37],[117,48,155,38],[117,68,155,58],[117,70,155,60],[118,10,156,8,"query"],[118,15,156,13],[119,10,157,8,"context"],[120,8,158,6],[120,9,158,7],[120,10,158,8],[121,8,159,6],[121,15,159,13,"response"],[121,23,159,21],[121,24,159,22,"data"],[121,28,159,26],[122,6,160,4],[122,7,160,5],[122,8,160,6],[122,15,160,13,"error"],[122,20,160,18],[122,22,160,20],[123,8,161,6,"console"],[123,15,161,13],[123,16,161,14,"error"],[123,21,161,19],[123,22,161,20],[123,50,161,48],[123,52,161,50,"error"],[123,57,161,55],[123,58,161,56],[124,8,162,6],[124,15,162,13],[125,10,163,8,"original_query"],[125,24,163,22],[125,26,163,24,"query"],[125,31,163,29],[126,10,164,8,"enhanced_keywords"],[126,27,164,25],[126,29,164,27,"query"],[126,34,164,32],[126,35,164,33,"split"],[126,40,164,38],[126,41,164,39],[126,42,164,40],[127,10,165,8,"suggested_filters"],[127,27,165,25],[127,29,165,27],[127,30,165,28],[127,31,165,29],[128,10,166,8,"search_intent"],[128,23,166,21],[128,25,166,23],[128,41,166,39],[129,10,167,8,"synonyms"],[129,18,167,16],[129,20,167,18],[130,8,168,6],[130,9,168,7],[131,6,169,4],[132,4,170,2],[134,4,172,2],[135,0,173,0],[136,0,174,0],[137,4,175,2],[137,10,175,8,"analyzeIntent"],[137,23,175,21,"analyzeIntent"],[137,24,175,22,"message"],[137,31,175,37],[137,33,175,64],[138,6,176,4],[138,10,176,8],[139,8,177,6],[139,14,177,12,"response"],[139,22,177,20],[139,25,177,23],[139,31,177,29,"API"],[139,42,177,32],[139,43,177,33,"post"],[139,47,177,37],[139,48,177,38],[139,69,177,59],[139,71,177,61],[139,75,177,65],[139,77,177,67],[140,10,178,8,"params"],[140,16,178,14],[140,18,178,16],[141,12,178,18,"message"],[142,10,178,26],[143,8,179,6],[143,9,179,7],[143,10,179,8],[144,8,180,6],[144,15,180,13,"response"],[144,23,180,21],[144,24,180,22,"data"],[144,28,180,26],[145,6,181,4],[145,7,181,5],[145,8,181,6],[145,15,181,13,"error"],[145,20,181,18],[145,22,181,20],[146,8,182,6,"console"],[146,15,182,13],[146,16,182,14,"error"],[146,21,182,19],[146,22,182,20],[146,47,182,45],[146,49,182,47,"error"],[146,54,182,52],[146,55,182,53],[147,8,183,6],[147,15,183,13],[148,10,184,8,"intent_type"],[148,21,184,19],[148,23,184,21],[148,37,184,35],[149,10,185,8,"extracted_keywords"],[149,28,185,26],[149,30,185,28],[149,31,185,29,"message"],[149,38,185,36],[149,39,185,37],[150,10,186,8,"suggested_actions"],[150,27,186,25],[150,29,186,27],[150,30,186,28],[150,47,186,45],[150,48,186,46],[151,10,187,8,"urgency_level"],[151,23,187,21],[151,25,187,23],[152,8,188,6],[152,9,188,7],[153,6,189,4],[154,4,190,2],[156,4,192,2],[157,0,193,0],[158,0,194,0],[159,4,195,2],[159,10,195,8,"trackActivity"],[159,23,195,21,"trackActivity"],[159,24,195,22,"activityData"],[159,36,195,39],[159,38,195,56],[160,6,196,4],[160,10,196,8],[161,8,197,6],[161,14,197,12,"API"],[161,25,197,15],[161,26,197,16,"post"],[161,30,197,20],[161,31,197,21],[161,51,197,41],[161,53,197,43,"activityData"],[161,65,197,55],[161,66,197,56],[162,6,198,4],[162,7,198,5],[162,8,198,6],[162,15,198,13,"error"],[162,20,198,18],[162,22,198,20],[163,8,199,6,"console"],[163,15,199,13],[163,16,199,14,"error"],[163,21,199,19],[163,22,199,20],[163,49,199,47],[163,51,199,49,"error"],[163,56,199,54],[163,57,199,55],[164,6,200,4],[165,4,201,2],[167,4,203,2],[168,0,204,0],[169,0,205,0],[170,4,206,2],[170,10,206,8,"startVoiceSearch"],[170,26,206,24,"startVoiceSearch"],[170,27,206,24],[170,29,206,44],[171,6,207,4],[171,13,207,11],[171,17,207,15,"Promise"],[171,24,207,22],[171,25,207,23],[171,26,207,24,"resolve"],[171,33,207,31],[171,35,207,33,"reject"],[171,41,207,39],[171,46,207,44],[172,8,208,6],[172,12,208,10],[172,13,208,11],[172,17,208,15],[172,18,208,16,"voiceService"],[172,30,208,28],[172,34,208,32,"Platform"],[172,51,208,40],[172,52,208,41,"OS"],[172,54,208,43],[172,59,208,48],[172,64,208,53],[172,66,208,55],[173,10,209,8,"reject"],[173,16,209,14],[173,17,209,15],[173,21,209,19,"Error"],[173,26,209,24],[173,27,209,25],[173,72,209,70],[173,73,209,71],[173,74,209,72],[174,10,210,8],[175,8,211,6],[176,8,213,6],[176,14,213,12,"timeout"],[176,21,213,19],[176,24,213,22,"setTimeout"],[176,34,213,32],[176,35,213,33],[176,41,213,39],[177,10,214,8],[177,14,214,12],[177,15,214,13,"voiceService"],[177,27,214,25],[177,28,214,26,"stop"],[177,32,214,30],[177,33,214,31],[177,34,214,32],[178,10,215,8,"reject"],[178,16,215,14],[178,17,215,15],[178,21,215,19,"Error"],[178,26,215,24],[178,27,215,25],[178,49,215,47],[178,50,215,48],[178,51,215,49],[179,8,216,6],[179,9,216,7],[179,11,216,9],[179,16,216,14],[179,17,216,15],[180,8,218,6],[180,12,218,10],[180,13,218,11,"voiceService"],[180,25,218,23],[180,26,218,24,"onSpeechResults"],[180,41,218,39],[180,44,218,43,"event"],[180,49,218,53],[180,53,218,58],[181,10,219,8,"clearTimeout"],[181,22,219,20],[181,23,219,21,"timeout"],[181,30,219,28],[181,31,219,29],[182,10,220,8],[182,16,220,14,"results"],[182,23,220,21],[182,26,220,24,"event"],[182,31,220,29],[182,32,220,30,"value"],[182,37,220,35],[182,41,220,39],[182,43,220,41],[183,10,221,8],[183,14,221,12,"results"],[183,21,221,19],[183,22,221,20,"length"],[183,28,221,26],[183,31,221,29],[183,32,221,30],[183,34,221,32],[184,12,222,10,"resolve"],[184,19,222,17],[184,20,222,18,"results"],[184,27,222,25],[184,28,222,26],[184,29,222,27],[184,30,222,28],[184,31,222,29],[185,10,223,8],[185,11,223,9],[185,17,223,15],[186,12,224,10,"reject"],[186,18,224,16],[186,19,224,17],[186,23,224,21,"Error"],[186,28,224,26],[186,29,224,27],[186,51,224,49],[186,52,224,50],[186,53,224,51],[187,10,225,8],[188,8,226,6],[188,9,226,7],[189,8,228,6],[189,12,228,10],[189,13,228,11,"voiceService"],[189,25,228,23],[189,26,228,24,"onSpeechError"],[189,39,228,37],[189,42,228,41,"event"],[189,47,228,51],[189,51,228,56],[190,10,229,8,"clearTimeout"],[190,22,229,20],[190,23,229,21,"timeout"],[190,30,229,28],[190,31,229,29],[191,10,230,8,"reject"],[191,16,230,14],[191,17,230,15],[191,21,230,19,"Error"],[191,26,230,24],[191,27,230,25,"event"],[191,32,230,30],[191,33,230,31,"error"],[191,38,230,36],[191,40,230,38,"message"],[191,47,230,45],[191,51,230,49],[191,72,230,70],[191,73,230,71],[191,74,230,72],[192,8,231,6],[192,9,231,7],[193,8,233,6],[193,12,233,10],[193,13,233,11,"voiceService"],[193,25,233,23],[193,26,233,24,"start"],[193,31,233,29],[193,32,233,30],[193,39,233,37],[193,40,233,38],[193,41,233,39,"catch"],[193,46,233,44],[193,47,233,46,"error"],[193,52,233,56],[193,56,233,61],[194,10,234,8,"clearTimeout"],[194,22,234,20],[194,23,234,21,"timeout"],[194,30,234,28],[194,31,234,29],[195,10,235,8,"reject"],[195,16,235,14],[195,17,235,15,"error"],[195,22,235,20],[195,23,235,21],[196,8,236,6],[196,9,236,7],[196,10,236,8],[197,6,237,4],[197,7,237,5],[197,8,237,6],[198,4,238,2],[200,4,240,2],[201,0,241,0],[202,0,242,0],[203,4,243,2],[203,10,243,8,"stopVoiceSearch"],[203,25,243,23,"stopVoiceSearch"],[203,26,243,23],[203,28,243,41],[204,6,244,4],[204,10,244,8],[204,14,244,12],[204,15,244,13,"voiceService"],[204,27,244,25],[204,31,244,29,"Platform"],[204,48,244,37],[204,49,244,38,"OS"],[204,51,244,40],[204,56,244,45],[204,61,244,50],[204,63,244,52],[205,8,245,6],[205,12,245,10],[206,10,246,8],[206,16,246,14],[206,20,246,18],[206,21,246,19,"voiceService"],[206,33,246,31],[206,34,246,32,"stop"],[206,38,246,36],[206,39,246,37],[206,40,246,38],[207,8,247,6],[207,9,247,7],[207,10,247,8],[207,17,247,15,"error"],[207,22,247,20],[207,24,247,22],[208,10,248,8,"console"],[208,17,248,15],[208,18,248,16,"error"],[208,23,248,21],[208,24,248,22],[208,54,248,52],[208,56,248,54,"error"],[208,61,248,59],[208,62,248,60],[209,8,249,6],[210,6,250,4],[211,4,251,2],[213,4,253,2],[214,0,254,0],[215,0,255,0],[216,4,256,2],[216,10,256,8,"processVoiceSearch"],[216,28,256,26,"processVoiceSearch"],[216,29,256,27,"audioText"],[216,38,256,44],[216,40,256,60],[217,6,257,4],[217,10,257,8],[218,8,258,6],[218,14,258,12,"response"],[218,22,258,20],[218,25,258,23],[218,31,258,29,"API"],[218,42,258,32],[218,43,258,33,"post"],[218,47,258,37],[218,48,258,38],[218,66,258,56],[218,68,258,58],[218,72,258,62],[218,74,258,64],[219,10,259,8,"params"],[219,16,259,14],[219,18,259,16],[220,12,259,18,"audio_text"],[220,22,259,28],[220,24,259,30,"audioText"],[221,10,259,40],[222,8,260,6],[222,9,260,7],[222,10,260,8],[223,8,261,6],[223,15,261,13,"response"],[223,23,261,21],[223,24,261,22,"data"],[223,28,261,26],[224,6,262,4],[224,7,262,5],[224,8,262,6],[224,15,262,13,"error"],[224,20,262,18],[224,22,262,20],[225,8,263,6,"console"],[225,15,263,13],[225,16,263,14,"error"],[225,21,263,19],[225,22,263,20],[225,55,263,53],[225,57,263,55,"error"],[225,62,263,60],[225,63,263,61],[226,8,264,6],[226,15,264,13],[227,10,265,8,"original_query"],[227,24,265,22],[227,26,265,24,"audioText"],[227,35,265,33],[228,10,266,8,"enhanced_query"],[228,24,266,22],[228,26,266,24],[229,12,266,26,"original_query"],[229,26,266,40],[229,28,266,42,"audioText"],[230,10,266,52],[230,11,266,53],[231,10,267,8,"products"],[231,18,267,16],[231,20,267,18],[231,22,267,20],[232,10,268,8,"response_type"],[232,23,268,21],[232,25,268,23],[233,8,269,6],[233,9,269,7],[234,6,270,4],[235,4,271,2],[237,4,273,2],[238,0,274,0],[239,0,275,0],[240,4,276,2],[240,10,276,8,"getWelcomeMessage"],[240,27,276,25,"getWelcomeMessage"],[240,28,276,26,"user"],[240,32,276,36],[240,34,276,55],[241,6,277,4],[241,10,277,8],[241,11,277,9,"user"],[241,15,277,13],[241,17,277,15],[242,8,278,6],[242,15,278,13],[242,110,278,108],[243,6,279,4],[244,6,281,4],[244,10,281,8],[245,8,282,6],[245,14,282,12,"context"],[245,21,282,19],[245,24,282,22],[246,10,283,8,"user_name"],[246,19,283,17],[246,21,283,19,"user"],[246,25,283,23],[246,26,283,24,"name"],[246,30,283,28],[247,10,284,8,"user_roles"],[247,20,284,18],[247,22,284,20,"user"],[247,26,284,24],[247,27,284,25,"roles"],[247,32,284,30],[248,10,285,8,"returning_user"],[248,24,285,22],[248,26,285,24],[249,8,286,6],[249,9,286,7],[250,8,288,6],[250,14,288,12,"response"],[250,22,288,20],[250,25,288,23],[250,31,288,29],[250,35,288,33],[250,36,288,34,"chatWithAgent"],[250,49,288,47],[250,50,289,8],[250,114,289,72],[250,116,290,8,"context"],[250,123,291,6],[250,124,291,7],[251,8,293,6],[251,15,293,13,"response"],[251,23,293,21],[251,24,293,22,"response"],[251,32,293,30],[252,6,294,4],[252,7,294,5],[252,8,294,6],[252,15,294,13,"error"],[252,20,294,18],[252,22,294,20],[253,8,295,6],[253,15,295,13],[253,32,295,30,"user"],[253,36,295,34],[253,37,295,35,"name"],[253,41,295,39],[253,45,295,43],[253,53,295,51],[253,121,295,119],[254,6,296,4],[255,4,297,2],[257,4,299,2],[258,0,300,0],[259,0,301,0],[260,4,302,2],[260,10,302,8,"getSearchSuggestions"],[260,30,302,28,"getSearchSuggestions"],[260,31,302,29,"partialQuery"],[260,43,302,49],[260,45,302,70],[261,6,303,4],[261,10,303,8],[262,8,304,6],[262,14,304,12,"response"],[262,22,304,20],[262,25,304,23],[262,31,304,29],[262,35,304,33],[262,36,304,34,"enhanceSearchQuery"],[262,54,304,52],[262,55,304,53,"partialQuery"],[262,67,304,65],[262,68,304,66],[263,8,305,6],[263,15,305,13],[263,16,306,8,"response"],[263,24,306,16],[263,25,306,17,"original_query"],[263,39,306,31],[263,41,307,8],[263,45,307,12,"response"],[263,53,307,20],[263,54,307,21,"enhanced_keywords"],[263,71,307,38],[263,75,307,42],[263,77,307,44],[263,78,307,45],[263,80,308,8],[263,84,308,12,"response"],[263,92,308,20],[263,93,308,21,"synonyms"],[263,101,308,29],[263,105,308,33],[263,107,308,35],[263,108,308,36],[263,109,309,7],[263,110,309,8,"filter"],[263,116,309,14],[263,117,309,15,"Boolean"],[263,124,309,22],[263,125,309,23],[263,126,309,24,"slice"],[263,131,309,29],[263,132,309,30],[263,133,309,31],[263,135,309,33],[263,136,309,34],[263,137,309,35],[264,6,310,4],[264,7,310,5],[264,8,310,6],[264,15,310,13,"error"],[264,20,310,18],[264,22,310,20],[265,8,311,6,"console"],[265,15,311,13],[265,16,311,14,"error"],[265,21,311,19],[265,22,311,20],[265,50,311,48],[265,52,311,50,"error"],[265,57,311,55],[265,58,311,56],[266,8,312,6],[266,15,312,13],[266,16,312,14,"partialQuery"],[266,28,312,26],[266,29,312,27],[267,6,313,4],[268,4,314,2],[270,4,316,2],[271,0,317,0],[272,0,318,0],[273,4,319,2],[273,10,319,8,"getContextualHelp"],[273,27,319,25,"getContextualHelp"],[273,28,319,26,"screenName"],[273,38,319,44],[273,40,319,46,"context"],[273,47,319,59],[273,49,319,78],[274,6,320,4],[274,12,320,10,"helpPrompts"],[274,23,320,21],[274,26,320,24],[275,8,321,6,"home"],[275,12,321,10],[275,14,321,12],[275,68,321,66],[276,8,322,6,"product"],[276,15,322,13],[276,17,322,15],[276,81,322,79],[277,8,323,6,"cart"],[277,12,323,10],[277,14,323,12],[277,70,323,68],[278,8,324,6,"profile"],[278,15,324,13],[278,17,324,15],[278,66,324,64],[279,8,325,6,"orders"],[279,14,325,12],[279,16,325,14],[280,6,326,4],[280,7,326,5],[281,6,328,4],[281,12,328,10,"prompt"],[281,18,328,16],[281,21,328,19,"helpPrompts"],[281,32,328,30],[281,33,328,31,"screenName"],[281,43,328,41],[281,44,328,70],[281,48,329,19],[281,89,329,60],[282,6,331,4],[282,10,331,8],[283,8,332,6],[283,14,332,12,"response"],[283,22,332,20],[283,25,332,23],[283,31,332,29],[283,35,332,33],[283,36,332,34,"chatWithAgent"],[283,49,332,47],[283,50,332,48,"prompt"],[283,56,332,54],[283,58,332,56],[284,10,332,58,"screen"],[284,16,332,64],[284,18,332,66,"screenName"],[284,28,332,76],[285,10,332,78],[285,13,332,81,"context"],[286,8,332,89],[286,9,332,90],[286,10,332,91],[287,8,333,6],[287,15,333,13,"response"],[287,23,333,21],[287,24,333,22,"response"],[287,32,333,30],[288,6,334,4],[288,7,334,5],[288,8,334,6],[288,15,334,13,"error"],[288,20,334,18],[288,22,334,20],[289,8,335,6],[289,15,335,13],[289,111,335,109],[290,6,336,4],[291,4,337,2],[292,2,338,0],[294,2,340,0],[295,2,341,7],[295,8,341,13,"aiService"],[295,17,341,22],[295,20,341,22,"exports"],[295,27,341,22],[295,28,341,22,"aiService"],[295,37,341,22],[295,40,341,25,"AIService"],[295,49,341,34],[295,50,341,35,"getInstance"],[295,61,341,46],[295,62,341,47],[295,63,341,48],[296,2,341,49],[296,6,341,49,"_default"],[296,14,341,49],[296,17,341,49,"exports"],[296,24,341,49],[296,25,341,49,"default"],[296,32,341,49],[296,35,342,15,"aiService"],[296,44,342,24],[297,0,342,24],[297,3]],"functionMap":{"names":["<global>","AIService","constructor","getInstance","initializeVoiceService","detectLocale","chatWithAgent","getOnboardingGuidance","getProductRecommendations","enhanceSearchQuery","analyzeIntent","trackActivity","startVoiceSearch","Promise$argument_0","setTimeout$argument_0","voiceService.onSpeechResults","voiceService.onSpeechError","voiceService.start._catch$argument_0","stopVoiceSearch","processVoiceSearch","getWelcomeMessage","getSearchSuggestions","getContextualHelp"],"mappings":"AAA;AC0C;ECI;GDE;EEE;GFK;EGE;GHS;EIK;GJkB;EKK;GLe;EMK;GNa;EOK;GPe;EQK;GRiB;ESK;GTe;EUK;GVM;EWK;uBCC;iCCM;ODG;0CEE;OFQ;wCGE;OHG;6CIE;OJG;KDC;GXC;EiBK;GjBQ;EkBK;GlBe;EmBK;GnBqB;EoBK;GpBY;EqBK;GrBkB;CDC"}},"type":"js/module"}]}