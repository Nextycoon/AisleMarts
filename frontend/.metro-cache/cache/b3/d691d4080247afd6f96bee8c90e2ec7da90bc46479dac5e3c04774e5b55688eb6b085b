{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"nHSfosE61FtaEyZSpVpaRl796Kk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.aiDomainService = void 0;\n  var _client = _interopRequireDefault(require(_dependencyMap[1], \"./client\"));\n  // AI Domain Specialization Service - Trade Intelligence\n\n  class AIDomainService {\n    async suggestHSCodes(request) {\n      try {\n        const response = await _client.default.post('/trade/hscode-suggest', request);\n        return response.data;\n      } catch (error) {\n        console.error('Error suggesting HS codes:', error);\n        throw error;\n      }\n    }\n    async calculateLandedCost(request) {\n      try {\n        const response = await _client.default.post('/trade/landed-cost-calculate', request);\n        return response.data;\n      } catch (error) {\n        console.error('Error calculating landed cost:', error);\n        throw error;\n      }\n    }\n    async getFreightQuote(request) {\n      try {\n        const response = await _client.default.post('/trade/freight-quote', request);\n        return response.data;\n      } catch (error) {\n        console.error('Error getting freight quote:', error);\n        throw error;\n      }\n    }\n    async screenCompliance(parties) {\n      try {\n        const response = await _client.default.post('/trade/compliance-screening', {\n          parties\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error screening compliance:', error);\n        throw error;\n      }\n    }\n    async suggestPaymentMethods(request) {\n      try {\n        const response = await _client.default.post('/trade/payment-methods-suggest', request);\n        return response.data;\n      } catch (error) {\n        console.error('Error suggesting payment methods:', error);\n        throw error;\n      }\n    }\n    async computeTax(request) {\n      try {\n        const response = await _client.default.post('/trade/tax-compute', request);\n        return response.data;\n      } catch (error) {\n        console.error('Error computing tax:', error);\n        throw error;\n      }\n    }\n    async getTradeInsights(request) {\n      try {\n        const response = await _client.default.post('/trade/insights', request);\n        return response.data;\n      } catch (error) {\n        console.error('Error getting trade insights:', error);\n        throw error;\n      }\n    }\n    async getIncoterms() {\n      try {\n        const response = await _client.default.get('/trade/incoterms');\n        return response.data;\n      } catch (error) {\n        console.error('Error getting Incoterms:', error);\n        throw error;\n      }\n    }\n    async getTransportModes() {\n      try {\n        const response = await _client.default.get('/trade/transport-modes');\n        return response.data;\n      } catch (error) {\n        console.error('Error getting transport modes:', error);\n        throw error;\n      }\n    }\n    async getSampleHSCodes() {\n      try {\n        const response = await _client.default.get('/trade/sample-hs-codes');\n        return response.data;\n      } catch (error) {\n        console.error('Error getting sample HS codes:', error);\n        throw error;\n      }\n    }\n  }\n  const aiDomainService = exports.aiDomainService = new AIDomainService();\n});","lineCount":105,"map":[[7,2,1,0],[7,6,1,0,"_client"],[7,13,1,0],[7,16,1,0,"_interopRequireDefault"],[7,38,1,0],[7,39,1,0,"require"],[7,46,1,0],[7,47,1,0,"_dependencyMap"],[7,61,1,0],[8,2,3,0],[10,2,80,0],[10,8,80,6,"AIDomainService"],[10,23,80,21],[10,24,80,22],[11,4,81,2],[11,10,81,8,"suggestHSCodes"],[11,24,81,22,"suggestHSCodes"],[11,25,81,23,"request"],[11,32,81,52],[11,34,81,54],[12,6,82,4],[12,10,82,8],[13,8,83,6],[13,14,83,12,"response"],[13,22,83,20],[13,25,83,23],[13,31,83,29,"apiClient"],[13,46,83,38],[13,47,83,39,"post"],[13,51,83,43],[13,52,83,44],[13,75,83,67],[13,77,83,69,"request"],[13,84,83,76],[13,85,83,77],[14,8,84,6],[14,15,84,13,"response"],[14,23,84,21],[14,24,84,22,"data"],[14,28,84,26],[15,6,85,4],[15,7,85,5],[15,8,85,6],[15,15,85,13,"error"],[15,20,85,18],[15,22,85,20],[16,8,86,6,"console"],[16,15,86,13],[16,16,86,14,"error"],[16,21,86,19],[16,22,86,20],[16,50,86,48],[16,52,86,50,"error"],[16,57,86,55],[16,58,86,56],[17,8,87,6],[17,14,87,12,"error"],[17,19,87,17],[18,6,88,4],[19,4,89,2],[20,4,91,2],[20,10,91,8,"calculateLandedCost"],[20,29,91,27,"calculateLandedCost"],[20,30,91,28,"request"],[20,37,91,54],[20,39,91,56],[21,6,92,4],[21,10,92,8],[22,8,93,6],[22,14,93,12,"response"],[22,22,93,20],[22,25,93,23],[22,31,93,29,"apiClient"],[22,46,93,38],[22,47,93,39,"post"],[22,51,93,43],[22,52,93,44],[22,82,93,74],[22,84,93,76,"request"],[22,91,93,83],[22,92,93,84],[23,8,94,6],[23,15,94,13,"response"],[23,23,94,21],[23,24,94,22,"data"],[23,28,94,26],[24,6,95,4],[24,7,95,5],[24,8,95,6],[24,15,95,13,"error"],[24,20,95,18],[24,22,95,20],[25,8,96,6,"console"],[25,15,96,13],[25,16,96,14,"error"],[25,21,96,19],[25,22,96,20],[25,54,96,52],[25,56,96,54,"error"],[25,61,96,59],[25,62,96,60],[26,8,97,6],[26,14,97,12,"error"],[26,19,97,17],[27,6,98,4],[28,4,99,2],[29,4,101,2],[29,10,101,8,"getFreightQuote"],[29,25,101,23,"getFreightQuote"],[29,26,101,24,"request"],[29,33,101,52],[29,35,101,54],[30,6,102,4],[30,10,102,8],[31,8,103,6],[31,14,103,12,"response"],[31,22,103,20],[31,25,103,23],[31,31,103,29,"apiClient"],[31,46,103,38],[31,47,103,39,"post"],[31,51,103,43],[31,52,103,44],[31,74,103,66],[31,76,103,68,"request"],[31,83,103,75],[31,84,103,76],[32,8,104,6],[32,15,104,13,"response"],[32,23,104,21],[32,24,104,22,"data"],[32,28,104,26],[33,6,105,4],[33,7,105,5],[33,8,105,6],[33,15,105,13,"error"],[33,20,105,18],[33,22,105,20],[34,8,106,6,"console"],[34,15,106,13],[34,16,106,14,"error"],[34,21,106,19],[34,22,106,20],[34,52,106,50],[34,54,106,52,"error"],[34,59,106,57],[34,60,106,58],[35,8,107,6],[35,14,107,12,"error"],[35,19,107,17],[36,6,108,4],[37,4,109,2],[38,4,111,2],[38,10,111,8,"screenCompliance"],[38,26,111,24,"screenCompliance"],[38,27,111,25,"parties"],[38,34,111,51],[38,36,111,53],[39,6,112,4],[39,10,112,8],[40,8,113,6],[40,14,113,12,"response"],[40,22,113,20],[40,25,113,23],[40,31,113,29,"apiClient"],[40,46,113,38],[40,47,113,39,"post"],[40,51,113,43],[40,52,113,44],[40,81,113,73],[40,83,113,75],[41,10,113,77,"parties"],[42,8,113,85],[42,9,113,86],[42,10,113,87],[43,8,114,6],[43,15,114,13,"response"],[43,23,114,21],[43,24,114,22,"data"],[43,28,114,26],[44,6,115,4],[44,7,115,5],[44,8,115,6],[44,15,115,13,"error"],[44,20,115,18],[44,22,115,20],[45,8,116,6,"console"],[45,15,116,13],[45,16,116,14,"error"],[45,21,116,19],[45,22,116,20],[45,51,116,49],[45,53,116,51,"error"],[45,58,116,56],[45,59,116,57],[46,8,117,6],[46,14,117,12,"error"],[46,19,117,17],[47,6,118,4],[48,4,119,2],[49,4,121,2],[49,10,121,8,"suggestPaymentMethods"],[49,31,121,29,"suggestPaymentMethods"],[49,32,121,30,"request"],[49,39,121,60],[49,41,121,62],[50,6,122,4],[50,10,122,8],[51,8,123,6],[51,14,123,12,"response"],[51,22,123,20],[51,25,123,23],[51,31,123,29,"apiClient"],[51,46,123,38],[51,47,123,39,"post"],[51,51,123,43],[51,52,123,44],[51,84,123,76],[51,86,123,78,"request"],[51,93,123,85],[51,94,123,86],[52,8,124,6],[52,15,124,13,"response"],[52,23,124,21],[52,24,124,22,"data"],[52,28,124,26],[53,6,125,4],[53,7,125,5],[53,8,125,6],[53,15,125,13,"error"],[53,20,125,18],[53,22,125,20],[54,8,126,6,"console"],[54,15,126,13],[54,16,126,14,"error"],[54,21,126,19],[54,22,126,20],[54,57,126,55],[54,59,126,57,"error"],[54,64,126,62],[54,65,126,63],[55,8,127,6],[55,14,127,12,"error"],[55,19,127,17],[56,6,128,4],[57,4,129,2],[58,4,131,2],[58,10,131,8,"computeTax"],[58,20,131,18,"computeTax"],[58,21,131,19,"request"],[58,28,131,45],[58,30,131,47],[59,6,132,4],[59,10,132,8],[60,8,133,6],[60,14,133,12,"response"],[60,22,133,20],[60,25,133,23],[60,31,133,29,"apiClient"],[60,46,133,38],[60,47,133,39,"post"],[60,51,133,43],[60,52,133,44],[60,72,133,64],[60,74,133,66,"request"],[60,81,133,73],[60,82,133,74],[61,8,134,6],[61,15,134,13,"response"],[61,23,134,21],[61,24,134,22,"data"],[61,28,134,26],[62,6,135,4],[62,7,135,5],[62,8,135,6],[62,15,135,13,"error"],[62,20,135,18],[62,22,135,20],[63,8,136,6,"console"],[63,15,136,13],[63,16,136,14,"error"],[63,21,136,19],[63,22,136,20],[63,44,136,42],[63,46,136,44,"error"],[63,51,136,49],[63,52,136,50],[64,8,137,6],[64,14,137,12,"error"],[64,19,137,17],[65,6,138,4],[66,4,139,2],[67,4,141,2],[67,10,141,8,"getTradeInsights"],[67,26,141,24,"getTradeInsights"],[67,27,141,25,"request"],[67,34,141,54],[67,36,141,56],[68,6,142,4],[68,10,142,8],[69,8,143,6],[69,14,143,12,"response"],[69,22,143,20],[69,25,143,23],[69,31,143,29,"apiClient"],[69,46,143,38],[69,47,143,39,"post"],[69,51,143,43],[69,52,143,44],[69,69,143,61],[69,71,143,63,"request"],[69,78,143,70],[69,79,143,71],[70,8,144,6],[70,15,144,13,"response"],[70,23,144,21],[70,24,144,22,"data"],[70,28,144,26],[71,6,145,4],[71,7,145,5],[71,8,145,6],[71,15,145,13,"error"],[71,20,145,18],[71,22,145,20],[72,8,146,6,"console"],[72,15,146,13],[72,16,146,14,"error"],[72,21,146,19],[72,22,146,20],[72,53,146,51],[72,55,146,53,"error"],[72,60,146,58],[72,61,146,59],[73,8,147,6],[73,14,147,12,"error"],[73,19,147,17],[74,6,148,4],[75,4,149,2],[76,4,151,2],[76,10,151,8,"getIncoterms"],[76,22,151,20,"getIncoterms"],[76,23,151,20],[76,25,151,23],[77,6,152,4],[77,10,152,8],[78,8,153,6],[78,14,153,12,"response"],[78,22,153,20],[78,25,153,23],[78,31,153,29,"apiClient"],[78,46,153,38],[78,47,153,39,"get"],[78,50,153,42],[78,51,153,43],[78,69,153,61],[78,70,153,62],[79,8,154,6],[79,15,154,13,"response"],[79,23,154,21],[79,24,154,22,"data"],[79,28,154,26],[80,6,155,4],[80,7,155,5],[80,8,155,6],[80,15,155,13,"error"],[80,20,155,18],[80,22,155,20],[81,8,156,6,"console"],[81,15,156,13],[81,16,156,14,"error"],[81,21,156,19],[81,22,156,20],[81,48,156,46],[81,50,156,48,"error"],[81,55,156,53],[81,56,156,54],[82,8,157,6],[82,14,157,12,"error"],[82,19,157,17],[83,6,158,4],[84,4,159,2],[85,4,161,2],[85,10,161,8,"getTransportModes"],[85,27,161,25,"getTransportModes"],[85,28,161,25],[85,30,161,28],[86,6,162,4],[86,10,162,8],[87,8,163,6],[87,14,163,12,"response"],[87,22,163,20],[87,25,163,23],[87,31,163,29,"apiClient"],[87,46,163,38],[87,47,163,39,"get"],[87,50,163,42],[87,51,163,43],[87,75,163,67],[87,76,163,68],[88,8,164,6],[88,15,164,13,"response"],[88,23,164,21],[88,24,164,22,"data"],[88,28,164,26],[89,6,165,4],[89,7,165,5],[89,8,165,6],[89,15,165,13,"error"],[89,20,165,18],[89,22,165,20],[90,8,166,6,"console"],[90,15,166,13],[90,16,166,14,"error"],[90,21,166,19],[90,22,166,20],[90,54,166,52],[90,56,166,54,"error"],[90,61,166,59],[90,62,166,60],[91,8,167,6],[91,14,167,12,"error"],[91,19,167,17],[92,6,168,4],[93,4,169,2],[94,4,171,2],[94,10,171,8,"getSampleHSCodes"],[94,26,171,24,"getSampleHSCodes"],[94,27,171,24],[94,29,171,27],[95,6,172,4],[95,10,172,8],[96,8,173,6],[96,14,173,12,"response"],[96,22,173,20],[96,25,173,23],[96,31,173,29,"apiClient"],[96,46,173,38],[96,47,173,39,"get"],[96,50,173,42],[96,51,173,43],[96,75,173,67],[96,76,173,68],[97,8,174,6],[97,15,174,13,"response"],[97,23,174,21],[97,24,174,22,"data"],[97,28,174,26],[98,6,175,4],[98,7,175,5],[98,8,175,6],[98,15,175,13,"error"],[98,20,175,18],[98,22,175,20],[99,8,176,6,"console"],[99,15,176,13],[99,16,176,14,"error"],[99,21,176,19],[99,22,176,20],[99,54,176,52],[99,56,176,54,"error"],[99,61,176,59],[99,62,176,60],[100,8,177,6],[100,14,177,12,"error"],[100,19,177,17],[101,6,178,4],[102,4,179,2],[103,2,180,0],[104,2,182,7],[104,8,182,13,"aiDomainService"],[104,23,182,28],[104,26,182,28,"exports"],[104,33,182,28],[104,34,182,28,"aiDomainService"],[104,49,182,28],[104,52,182,31],[104,56,182,35,"AIDomainService"],[104,71,182,50],[104,72,182,51],[104,73,182,52],[105,0,182,53],[105,3]],"functionMap":{"names":["<global>","AIDomainService","suggestHSCodes","calculateLandedCost","getFreightQuote","screenCompliance","suggestPaymentMethods","computeTax","getTradeInsights","getIncoterms","getTransportModes","getSampleHSCodes"],"mappings":"AAA;AC+E;ECC;GDQ;EEE;GFQ;EGE;GHQ;EIE;GJQ;EKE;GLQ;EME;GNQ;EOE;GPQ;EQE;GRQ;ESE;GTQ;EUE;GVQ;CDC"}},"type":"js/module"}]}