{"dependencies":[{"name":"./BatchedBridge","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":22},"end":{"line":15,"column":48}}],"key":"pZMcJWKis6r8zImtFNHls0vi+s0=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":18},"end":{"line":16,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"]}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":191,"column":4},"end":{"line":191,"column":52}}],"key":"iAPGUMITE/2KH0DH4/f0/lVJtsQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  const BatchedBridge = require(_dependencyMap[0], \"./BatchedBridge\").default;\n  const invariant = require(_dependencyMap[1], \"invariant\");\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n    const [moduleName, constants, methods, promiseMethods, syncMethods] = config;\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n    const module = {};\n    methods && methods.forEach((methodName, methodID) => {\n      const isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      const isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      const methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n    if (module.getConstants == null) {\n      module.getConstants = () => constants || Object.freeze({});\n    } else {\n      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);\n    }\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n    return {\n      name: moduleName,\n      module\n    };\n  }\n  global.__fbGenNativeModule = genModule;\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    const config = global.nativeRequireModuleConfig(name);\n    const info = genModule(config, moduleID);\n    return info && info.module;\n  }\n  function genMethod(moduleID, methodID, type) {\n    let fn = null;\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper(...args) {\n        const enqueueingFrameError = new Error();\n        return new Promise((resolve, reject) => {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, data => resolve(data), errorData => reject(updateErrorWithErrorData(errorData, enqueueingFrameError)));\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper(...args) {\n        const lastArg = args.length > 0 ? args[args.length - 1] : null;\n        const secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        const hasSuccessCallback = typeof lastArg === 'function';\n        const hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        const onSuccess = hasSuccessCallback ? lastArg : null;\n        const onFail = hasErrorCallback ? secondLastArg : null;\n        const callbackCount = hasSuccessCallback + hasErrorCallback;\n        const newArgs = args.slice(0, args.length - callbackCount);\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n    fn.type = type;\n    return fn;\n  }\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n  function updateErrorWithErrorData(errorData, error) {\n    return Object.assign(error, errorData || {});\n  }\n  let NativeModules = {};\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else {\n    const bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n    const defineLazyObjectProperty = require(_dependencyMap[2], \"../Utilities/defineLazyObjectProperty\").default;\n    (bridgeConfig.remoteModuleConfig || []).forEach((config, moduleID) => {\n      const info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: () => loadModule(info.name, moduleID)\n        });\n      }\n    });\n  }\n  var _default = exports.default = NativeModules;\n});","lineCount":108,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13,"exports"],[7,9,11,13],[7,10,11,13,"default"],[7,17,11,13],[8,2,15,0],[8,8,15,6,"BatchedBridge"],[8,21,15,19],[8,24,15,22,"require"],[8,31,15,29],[8,32,15,29,"_dependencyMap"],[8,46,15,29],[8,68,15,47],[8,69,15,48],[8,70,15,49,"default"],[8,77,15,56],[9,2,16,0],[9,8,16,6,"invariant"],[9,17,16,15],[9,20,16,18,"require"],[9,27,16,25],[9,28,16,25,"_dependencyMap"],[9,42,16,25],[9,58,16,37],[9,59,16,38],[10,2,28,0],[10,11,28,9,"genModule"],[10,20,28,18,"genModule"],[10,21,29,2,"config"],[10,27,29,23],[10,29,30,2,"moduleID"],[10,37,30,18],[10,39,35,2],[11,4,36,2],[11,8,36,6],[11,9,36,7,"config"],[11,15,36,13],[11,17,36,15],[12,6,37,4],[12,13,37,11],[12,17,37,15],[13,4,38,2],[14,4,40,2],[14,10,40,8],[14,11,40,9,"moduleName"],[14,21,40,19],[14,23,40,21,"constants"],[14,32,40,30],[14,34,40,32,"methods"],[14,41,40,39],[14,43,40,41,"promiseMethods"],[14,57,40,55],[14,59,40,57,"syncMethods"],[14,70,40,68],[14,71,40,69],[14,74,40,72,"config"],[14,80,40,78],[15,4,41,2,"invariant"],[15,13,41,11],[15,14,42,4],[15,15,42,5,"moduleName"],[15,25,42,15],[15,26,42,16,"startsWith"],[15,36,42,26],[15,37,42,27],[15,42,42,32],[15,43,42,33],[15,47,42,37],[15,48,42,38,"moduleName"],[15,58,42,48],[15,59,42,49,"startsWith"],[15,69,42,59],[15,70,42,60],[15,74,42,64],[15,75,42,65],[15,77,43,4],[15,143,43,70],[15,146,44,6],[15,163,44,23],[15,166,45,6,"moduleName"],[15,176,46,2],[15,177,46,3],[16,4,48,2],[16,8,48,6],[16,9,48,7,"constants"],[16,18,48,16],[16,22,48,20],[16,23,48,21,"methods"],[16,30,48,28],[16,32,48,30],[17,6,50,4],[17,13,50,11],[18,8,50,12,"name"],[18,12,50,16],[18,14,50,18,"moduleName"],[19,6,50,28],[19,7,50,29],[20,4,51,2],[21,4,53,2],[21,10,53,8,"module"],[21,16,53,33],[21,19,53,36],[21,20,53,37],[21,21,53,38],[22,4,54,2,"methods"],[22,11,54,9],[22,15,55,4,"methods"],[22,22,55,11],[22,23,55,12,"forEach"],[22,30,55,19],[22,31,55,20],[22,32,55,21,"methodName"],[22,42,55,31],[22,44,55,33,"methodID"],[22,52,55,41],[22,57,55,46],[23,6,56,6],[23,12,56,12,"isPromise"],[23,21,56,21],[23,24,57,9,"promiseMethods"],[23,38,57,23],[23,42,57,27,"arrayContains"],[23,55,57,40],[23,56,57,41,"promiseMethods"],[23,70,57,55],[23,72,57,57,"methodID"],[23,80,57,65],[23,81,57,66],[23,85,57,71],[23,90,57,76],[24,6,58,6],[24,12,58,12,"isSync"],[24,18,58,18],[24,21,59,9,"syncMethods"],[24,32,59,20],[24,36,59,24,"arrayContains"],[24,49,59,37],[24,50,59,38,"syncMethods"],[24,61,59,49],[24,63,59,51,"methodID"],[24,71,59,59],[24,72,59,60],[24,76,59,65],[24,81,59,70],[25,6,60,6,"invariant"],[25,15,60,15],[25,16,61,8],[25,17,61,9,"isPromise"],[25,26,61,18],[25,30,61,22],[25,31,61,23,"isSync"],[25,37,61,29],[25,39,62,8],[25,96,63,6],[25,97,63,7],[26,6,64,6],[26,12,64,12,"methodType"],[26,22,64,22],[26,25,64,25,"isPromise"],[26,34,64,34],[26,37,64,37],[26,46,64,46],[26,49,64,49,"isSync"],[26,55,64,55],[26,58,64,58],[26,64,64,64],[26,67,64,67],[26,74,64,74],[27,6,65,6,"module"],[27,12,65,12],[27,13,65,13,"methodName"],[27,23,65,23],[27,24,65,24],[27,27,65,27,"genMethod"],[27,36,65,36],[27,37,65,37,"moduleID"],[27,45,65,45],[27,47,65,47,"methodID"],[27,55,65,55],[27,57,65,57,"methodType"],[27,67,65,67],[27,68,65,68],[28,4,66,4],[28,5,66,5],[28,6,66,6],[29,4,68,2,"Object"],[29,10,68,8],[29,11,68,9,"assign"],[29,17,68,15],[29,18,68,16,"module"],[29,24,68,22],[29,26,68,24,"constants"],[29,35,68,33],[29,36,68,34],[30,4,70,2],[30,8,70,6,"module"],[30,14,70,12],[30,15,70,13,"getConstants"],[30,27,70,25],[30,31,70,29],[30,35,70,33],[30,37,70,35],[31,6,71,4,"module"],[31,12,71,10],[31,13,71,11,"getConstants"],[31,25,71,23],[31,28,71,26],[31,34,71,32,"constants"],[31,43,71,41],[31,47,71,45,"Object"],[31,53,71,51],[31,54,71,52,"freeze"],[31,60,71,58],[31,61,71,59],[31,62,71,60],[31,63,71,61],[31,64,71,62],[32,4,72,2],[32,5,72,3],[32,11,72,9],[33,6,73,4,"console"],[33,13,73,11],[33,14,73,12,"warn"],[33,18,73,16],[33,19,74,6],[33,80,74,67,"moduleName"],[33,90,74,77],[33,110,74,97,"moduleName"],[33,120,74,107],[33,197,75,4],[33,198,75,5],[34,4,76,2],[35,4,78,2],[35,8,78,6,"__DEV__"],[35,15,78,13],[35,17,78,15],[36,6,79,4,"BatchedBridge"],[36,19,79,17],[36,20,79,18,"createDebugLookup"],[36,37,79,35],[36,38,79,36,"moduleID"],[36,46,79,44],[36,48,79,46,"moduleName"],[36,58,79,56],[36,60,79,58,"methods"],[36,67,79,65],[36,68,79,66],[37,4,80,2],[38,4,82,2],[38,11,82,9],[39,6,82,10,"name"],[39,10,82,14],[39,12,82,16,"moduleName"],[39,22,82,26],[40,6,82,28,"module"],[41,4,82,34],[41,5,82,35],[42,2,83,0],[43,2,86,0,"global"],[43,8,86,6],[43,9,86,7,"__fbGenNativeModule"],[43,28,86,26],[43,31,86,29,"genModule"],[43,40,86,38],[44,2,88,0],[44,11,88,9,"loadModule"],[44,21,88,19,"loadModule"],[44,22,88,20,"name"],[44,26,88,32],[44,28,88,34,"moduleID"],[44,36,88,50],[44,38,88,60],[45,4,89,2,"invariant"],[45,13,89,11],[45,14,90,4,"global"],[45,20,90,10],[45,21,90,11,"nativeRequireModuleConfig"],[45,46,90,36],[45,48,91,4],[45,110,92,2],[45,111,92,3],[46,4,93,2],[46,10,93,8,"config"],[46,16,93,14],[46,19,93,17,"global"],[46,25,93,23],[46,26,93,24,"nativeRequireModuleConfig"],[46,51,93,49],[46,52,93,50,"name"],[46,56,93,54],[46,57,93,55],[47,4,94,2],[47,10,94,8,"info"],[47,14,94,12],[47,17,94,15,"genModule"],[47,26,94,24],[47,27,94,25,"config"],[47,33,94,31],[47,35,94,33,"moduleID"],[47,43,94,41],[47,44,94,42],[48,4,95,2],[48,11,95,9,"info"],[48,15,95,13],[48,19,95,17,"info"],[48,23,95,21],[48,24,95,22,"module"],[48,30,95,28],[49,2,96,0],[50,2,98,0],[50,11,98,9,"genMethod"],[50,20,98,18,"genMethod"],[50,21,98,19,"moduleID"],[50,29,98,35],[50,31,98,37,"methodID"],[50,39,98,53],[50,41,98,55,"type"],[50,45,98,71],[50,47,98,73],[51,4,99,2],[51,8,99,6,"fn"],[51,10,99,8],[51,13,99,11],[51,17,99,15],[52,4,100,2],[52,8,100,6,"type"],[52,12,100,10],[52,17,100,15],[52,26,100,24],[52,28,100,26],[53,6,101,4,"fn"],[53,8,101,6],[53,11,101,9],[53,20,101,18,"promiseMethodWrapper"],[53,40,101,38,"promiseMethodWrapper"],[53,41,101,39],[53,44,101,42,"args"],[53,48,101,60],[53,50,101,62],[54,8,106,6],[54,14,106,12,"enqueueingFrameError"],[54,34,106,47],[54,37,106,50],[54,41,106,54,"Error"],[54,46,106,59],[54,47,106,60],[54,48,106,61],[55,8,107,6],[55,15,107,13],[55,19,107,17,"Promise"],[55,26,107,24],[55,27,107,25],[55,28,107,26,"resolve"],[55,35,107,33],[55,37,107,35,"reject"],[55,43,107,41],[55,48,107,46],[56,10,108,8,"BatchedBridge"],[56,23,108,21],[56,24,108,22,"enqueueNativeCall"],[56,41,108,39],[56,42,109,10,"moduleID"],[56,50,109,18],[56,52,110,10,"methodID"],[56,60,110,18],[56,62,111,10,"args"],[56,66,111,14],[56,68,112,10,"data"],[56,72,112,14],[56,76,112,18,"resolve"],[56,83,112,25],[56,84,112,26,"data"],[56,88,112,30],[56,89,112,31],[56,91,113,10,"errorData"],[56,100,113,19],[56,104,114,12,"reject"],[56,110,114,18],[56,111,115,14,"updateErrorWithErrorData"],[56,135,115,38],[56,136,116,17,"errorData"],[56,145,116,26],[56,147,117,16,"enqueueingFrameError"],[56,167,118,14],[56,168,119,12],[56,169,120,8],[56,170,120,9],[57,8,121,6],[57,9,121,7],[57,10,121,8],[58,6,122,4],[58,7,122,5],[59,4,123,2],[59,5,123,3],[59,11,123,9],[60,6,124,4,"fn"],[60,8,124,6],[60,11,124,9],[60,20,124,18,"nonPromiseMethodWrapper"],[60,43,124,41,"nonPromiseMethodWrapper"],[60,44,124,42],[60,47,124,45,"args"],[60,51,124,63],[60,53,124,65],[61,8,125,6],[61,14,125,12,"lastArg"],[61,21,125,19],[61,24,125,22,"args"],[61,28,125,26],[61,29,125,27,"length"],[61,35,125,33],[61,38,125,36],[61,39,125,37],[61,42,125,40,"args"],[61,46,125,44],[61,47,125,45,"args"],[61,51,125,49],[61,52,125,50,"length"],[61,58,125,56],[61,61,125,59],[61,62,125,60],[61,63,125,61],[61,66,125,64],[61,70,125,68],[62,8,126,6],[62,14,126,12,"secondLastArg"],[62,27,126,25],[62,30,126,28,"args"],[62,34,126,32],[62,35,126,33,"length"],[62,41,126,39],[62,44,126,42],[62,45,126,43],[62,48,126,46,"args"],[62,52,126,50],[62,53,126,51,"args"],[62,57,126,55],[62,58,126,56,"length"],[62,64,126,62],[62,67,126,65],[62,68,126,66],[62,69,126,67],[62,72,126,70],[62,76,126,74],[63,8,127,6],[63,14,127,12,"hasSuccessCallback"],[63,32,127,30],[63,35,127,33],[63,42,127,40,"lastArg"],[63,49,127,47],[63,54,127,52],[63,64,127,62],[64,8,128,6],[64,14,128,12,"hasErrorCallback"],[64,30,128,28],[64,33,128,31],[64,40,128,38,"secondLastArg"],[64,53,128,51],[64,58,128,56],[64,68,128,66],[65,8,129,6,"hasErrorCallback"],[65,24,129,22],[65,28,130,8,"invariant"],[65,37,130,17],[65,38,131,10,"hasSuccessCallback"],[65,56,131,28],[65,58,132,10],[65,112,133,8],[65,113,133,9],[66,8,135,6],[66,14,135,12,"onSuccess"],[66,23,135,39],[66,26,135,42,"hasSuccessCallback"],[66,44,135,60],[66,47,135,63,"lastArg"],[66,54,135,70],[66,57,135,73],[66,61,135,77],[67,8,137,6],[67,14,137,12,"onFail"],[67,20,137,36],[67,23,137,39,"hasErrorCallback"],[67,39,137,55],[67,42,137,58,"secondLastArg"],[67,55,137,71],[67,58,137,74],[67,62,137,78],[68,8,139,6],[68,14,139,12,"callbackCount"],[68,27,139,25],[68,30,139,28,"hasSuccessCallback"],[68,48,139,46],[68,51,139,49,"hasErrorCallback"],[68,67,139,65],[69,8,140,6],[69,14,140,12,"newArgs"],[69,21,140,19],[69,24,140,22,"args"],[69,28,140,26],[69,29,140,27,"slice"],[69,34,140,32],[69,35,140,33],[69,36,140,34],[69,38,140,36,"args"],[69,42,140,40],[69,43,140,41,"length"],[69,49,140,47],[69,52,140,50,"callbackCount"],[69,65,140,63],[69,66,140,64],[70,8,141,6],[70,12,141,10,"type"],[70,16,141,14],[70,21,141,19],[70,27,141,25],[70,29,141,27],[71,10,142,8],[71,17,142,15,"BatchedBridge"],[71,30,142,28],[71,31,142,29,"callNativeSyncHook"],[71,49,142,47],[71,50,143,10,"moduleID"],[71,58,143,18],[71,60,144,10,"methodID"],[71,68,144,18],[71,70,145,10,"newArgs"],[71,77,145,17],[71,79,146,10,"onFail"],[71,85,146,16],[71,87,147,10,"onSuccess"],[71,96,148,8],[71,97,148,9],[72,8,149,6],[72,9,149,7],[72,15,149,13],[73,10,150,8,"BatchedBridge"],[73,23,150,21],[73,24,150,22,"enqueueNativeCall"],[73,41,150,39],[73,42,151,10,"moduleID"],[73,50,151,18],[73,52,152,10,"methodID"],[73,60,152,18],[73,62,153,10,"newArgs"],[73,69,153,17],[73,71,154,10,"onFail"],[73,77,154,16],[73,79,155,10,"onSuccess"],[73,88,156,8],[73,89,156,9],[74,8,157,6],[75,6,158,4],[75,7,158,5],[76,4,159,2],[77,4,161,2,"fn"],[77,6,161,4],[77,7,161,5,"type"],[77,11,161,9],[77,14,161,12,"type"],[77,18,161,16],[78,4,162,2],[78,11,162,9,"fn"],[78,13,162,11],[79,2,163,0],[80,2,165,0],[80,11,165,9,"arrayContains"],[80,24,165,22,"arrayContains"],[80,25,165,26,"array"],[80,30,165,50],[80,32,165,52,"value"],[80,37,165,60],[80,39,165,71],[81,4,166,2],[81,11,166,9,"array"],[81,16,166,14],[81,17,166,15,"indexOf"],[81,24,166,22],[81,25,166,23,"value"],[81,30,166,28],[81,31,166,29],[81,36,166,34],[81,37,166,35],[81,38,166,36],[82,2,167,0],[83,2,169,0],[83,11,169,9,"updateErrorWithErrorData"],[83,35,169,33,"updateErrorWithErrorData"],[83,36,170,2,"errorData"],[83,45,170,35],[83,47,171,2,"error"],[83,52,171,22],[83,54,172,17],[84,4,176,2],[84,11,176,9,"Object"],[84,17,176,15],[84,18,176,16,"assign"],[84,24,176,22],[84,25,176,23,"error"],[84,30,176,28],[84,32,176,30,"errorData"],[84,41,176,39],[84,45,176,43],[84,46,176,44],[84,47,176,45],[84,48,176,46],[85,2,177,0],[86,2,180,0],[86,6,180,4,"NativeModules"],[86,19,180,51],[86,22,180,54],[86,23,180,55],[86,24,180,56],[87,2,181,0],[87,6,181,4,"global"],[87,12,181,10],[87,13,181,11,"nativeModuleProxy"],[87,30,181,28],[87,32,181,30],[88,4,182,2,"NativeModules"],[88,17,182,15],[88,20,182,18,"global"],[88,26,182,24],[88,27,182,25,"nativeModuleProxy"],[88,44,182,42],[89,2,183,0],[89,3,183,1],[89,9,183,7],[90,4,184,2],[90,10,184,8,"bridgeConfig"],[90,22,184,20],[90,25,184,23,"global"],[90,31,184,29],[90,32,184,30,"__fbBatchedBridgeConfig"],[90,55,184,53],[91,4,185,2,"invariant"],[91,13,185,11],[91,14,186,4,"bridgeConfig"],[91,26,186,16],[91,28,187,4],[91,94,188,2],[91,95,188,3],[92,4,190,2],[92,10,190,8,"defineLazyObjectProperty"],[92,34,190,32],[92,37,191,4,"require"],[92,44,191,11],[92,45,191,11,"_dependencyMap"],[92,59,191,11],[92,103,191,51],[92,104,191,52],[92,105,191,53,"default"],[92,112,191,60],[93,4,192,2],[93,5,192,3,"bridgeConfig"],[93,17,192,15],[93,18,192,16,"remoteModuleConfig"],[93,36,192,34],[93,40,192,38],[93,42,192,40],[93,44,192,42,"forEach"],[93,51,192,49],[93,52,193,4],[93,53,193,5,"config"],[93,59,193,25],[93,61,193,27,"moduleID"],[93,69,193,43],[93,74,193,48],[94,6,196,6],[94,12,196,12,"info"],[94,16,196,16],[94,19,196,19,"genModule"],[94,28,196,28],[94,29,196,29,"config"],[94,35,196,35],[94,37,196,37,"moduleID"],[94,45,196,45],[94,46,196,46],[95,6,197,6],[95,10,197,10],[95,11,197,11,"info"],[95,15,197,15],[95,17,197,17],[96,8,198,8],[97,6,199,6],[98,6,201,6],[98,10,201,10,"info"],[98,14,201,14],[98,15,201,15,"module"],[98,21,201,21],[98,23,201,23],[99,8,202,8,"NativeModules"],[99,21,202,21],[99,22,202,22,"info"],[99,26,202,26],[99,27,202,27,"name"],[99,31,202,31],[99,32,202,32],[99,35,202,35,"info"],[99,39,202,39],[99,40,202,40,"module"],[99,46,202,46],[100,6,203,6],[100,7,203,7],[100,13,205,11],[101,8,206,8,"defineLazyObjectProperty"],[101,32,206,32],[101,33,206,33,"NativeModules"],[101,46,206,46],[101,48,206,48,"info"],[101,52,206,52],[101,53,206,53,"name"],[101,57,206,57],[101,59,206,59],[102,10,207,10,"get"],[102,13,207,13],[102,15,207,15,"get"],[102,16,207,15],[102,21,207,21,"loadModule"],[102,31,207,31],[102,32,207,32,"info"],[102,36,207,36],[102,37,207,37,"name"],[102,41,207,41],[102,43,207,43,"moduleID"],[102,51,207,51],[103,8,208,8],[103,9,208,9],[103,10,208,10],[104,6,209,6],[105,4,210,4],[105,5,211,2],[105,6,211,3],[106,2,212,0],[107,2,212,1],[107,6,212,1,"_default"],[107,14,212,1],[107,17,212,1,"exports"],[107,24,212,1],[107,25,212,1,"default"],[107,32,212,1],[107,35,214,15,"NativeModules"],[107,48,214,28],[108,0,214,28],[108,3]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC2B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCM;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLkC;CLK;AWE;CXE;AYE;CZQ;IagB;eCc,qCD;KbG"}},"type":"js/module"}]}