{"dependencies":[{"name":"../api/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"vrY6iF+Nd2CrRu9d6eBxeX1BPiA=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"@react-native-voice/voice","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":61,"column":22,"index":1218},"end":{"line":61,"column":58,"index":1254}}],"key":"XwZY785fsg+A2+ChTu5WGh6oXyE=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"aiService\", {\n    enumerable: true,\n    get: function () {\n      return aiService;\n    }\n  });\n  var _apiClient = require(_dependencyMap[0], \"../api/client\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  class AIService {\n    voiceService = null;\n    constructor() {\n      this.initializeVoiceService();\n    }\n    static getInstance() {\n      if (!AIService.instance) {\n        AIService.instance = new AIService();\n      }\n      return AIService.instance;\n    }\n    initializeVoiceService() {\n      if (Platform.default.OS !== 'web') {\n        try {\n          const Voice = require(_dependencyMap[2], \"@react-native-voice/voice\");\n          this.voiceService = Voice.default || Voice;\n        } catch (error) {\n          console.warn('Voice service not available:', error);\n        }\n      }\n    }\n\n    /**\n     * Detect user's locale and get AI-powered recommendations\n     */\n    async detectLocale() {\n      try {\n        const response = await _apiClient.API.get('/ai/locale-detection');\n        return response.data;\n      } catch (error) {\n        console.error('Locale detection failed:', error);\n        // Fallback locale\n        return {\n          country: 'US',\n          language: 'en',\n          currency: 'USD',\n          recommendations: {\n            message: 'Welcome to AisleMarts! Start exploring our global marketplace.',\n            categories: ['Electronics', 'Fashion', 'Home & Garden'],\n            next_steps: ['Browse products', 'Set up profile', 'Add items to cart']\n          }\n        };\n      }\n    }\n\n    /**\n     * Chat with personal AI agent\n     */\n    async chatWithAgent(message, context) {\n      try {\n        const response = await _apiClient.API.post('/ai/chat', {\n          message,\n          context\n        });\n        return response.data;\n      } catch (error) {\n        console.error('AI chat failed:', error);\n        return {\n          response: \"I'm having trouble right now. Please try again later.\",\n          agent_id: 'fallback',\n          timestamp: new Date().toISOString()\n        };\n      }\n    }\n\n    /**\n     * Get AI-powered onboarding guidance\n     */\n    async getOnboardingGuidance(userInfo) {\n      try {\n        const response = await _apiClient.API.post('/ai/onboarding', {\n          user_info: userInfo\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Onboarding guidance failed:', error);\n        return {\n          guidance: 'Welcome to AisleMarts! Explore products, add to cart, and enjoy seamless global shopping.',\n          user_role: 'buyer'\n        };\n      }\n    }\n\n    /**\n     * Get AI-powered product recommendations\n     */\n    async getProductRecommendations(query, maxResults = 10) {\n      try {\n        const response = await _apiClient.API.post('/ai/recommendations', {\n          query,\n          max_results: maxResults\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Product recommendations failed:', error);\n        return {\n          recommendations: [],\n          ai_explanation: 'Unable to get AI recommendations at this time.',\n          query\n        };\n      }\n    }\n\n    /**\n     * Enhance search query with AI\n     */\n    async enhanceSearchQuery(query, context) {\n      try {\n        const response = await _apiClient.API.post('/ai/search/enhance', {\n          query,\n          context\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Search enhancement failed:', error);\n        return {\n          original_query: query,\n          enhanced_keywords: query.split(),\n          suggested_filters: {},\n          search_intent: 'product_search',\n          synonyms: []\n        };\n      }\n    }\n\n    /**\n     * Analyze user intent\n     */\n    async analyzeIntent(message) {\n      try {\n        const response = await _apiClient.API.post('/ai/intent-analysis', null, {\n          params: {\n            message\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Intent analysis failed:', error);\n        return {\n          intent_type: 'general_help',\n          extracted_keywords: [message],\n          suggested_actions: ['Browse products'],\n          urgency_level: 'low'\n        };\n      }\n    }\n\n    /**\n     * Track user activity for AI personalization\n     */\n    async trackActivity(activityData) {\n      try {\n        await _apiClient.API.post('/ai/track-activity', activityData);\n      } catch (error) {\n        console.error('Activity tracking failed:', error);\n      }\n    }\n\n    /**\n     * Voice search functionality\n     */\n    async startVoiceSearch() {\n      return new Promise((resolve, reject) => {\n        if (!this.voiceService || Platform.default.OS === 'web') {\n          reject(new Error('Voice search not available on this platform'));\n          return;\n        }\n        const timeout = setTimeout(() => {\n          this.voiceService.stop();\n          reject(new Error('Voice search timeout'));\n        }, 10000);\n        this.voiceService.onSpeechResults = event => {\n          clearTimeout(timeout);\n          const results = event.value || [];\n          if (results.length > 0) {\n            resolve(results[0]);\n          } else {\n            reject(new Error('No speech recognized'));\n          }\n        };\n        this.voiceService.onSpeechError = event => {\n          clearTimeout(timeout);\n          reject(new Error(event.error?.message || 'Voice search failed'));\n        };\n        this.voiceService.start('en-US').catch(error => {\n          clearTimeout(timeout);\n          reject(error);\n        });\n      });\n    }\n\n    /**\n     * Stop voice search\n     */\n    async stopVoiceSearch() {\n      if (this.voiceService && Platform.default.OS !== 'web') {\n        try {\n          await this.voiceService.stop();\n        } catch (error) {\n          console.error('Failed to stop voice search:', error);\n        }\n      }\n    }\n\n    /**\n     * Process voice search query\n     */\n    async processVoiceSearch(audioText) {\n      try {\n        const response = await _apiClient.API.post('/ai/voice-search', null, {\n          params: {\n            audio_text: audioText\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Voice search processing failed:', error);\n        return {\n          original_query: audioText,\n          enhanced_query: {\n            original_query: audioText\n          },\n          products: [],\n          response_type: 'voice_search'\n        };\n      }\n    }\n\n    /**\n     * Get AI welcome message based on user profile\n     */\n    async getWelcomeMessage(user) {\n      if (!user) {\n        return \"Welcome to AisleMarts! üåç Your AI-powered global marketplace. What can I help you find today?\";\n      }\n      try {\n        const context = {\n          user_name: user.name,\n          user_roles: user.roles,\n          returning_user: true\n        };\n        const response = await this.chatWithAgent(\"Give me a personalized welcome message for this returning user\", context);\n        return response.response;\n      } catch (error) {\n        return `Welcome back, ${user.name || 'friend'}! üåç Ready to explore more amazing products from around the world?`;\n      }\n    }\n\n    /**\n     * Get smart search suggestions\n     */\n    async getSearchSuggestions(partialQuery) {\n      try {\n        const response = await this.enhanceSearchQuery(partialQuery);\n        return [response.original_query, ...(response.enhanced_keywords || []), ...(response.synonyms || [])].filter(Boolean).slice(0, 5);\n      } catch (error) {\n        console.error('Search suggestions failed:', error);\n        return [partialQuery];\n      }\n    }\n\n    /**\n     * Get AI-powered insights for dashboard\n     */\n    async getInsights(user, prompt) {\n      const defaultPrompt = user?.roles?.includes('vendor') ? \"Generate a brief business insight for today - market trends, opportunities, or actionable advice for a seller\" : \"Generate a brief shopping insight for today - deals, trends, or personalized recommendations\";\n      try {\n        const context = {\n          user_name: user?.name,\n          user_roles: user?.roles,\n          insight_type: 'daily_dashboard'\n        };\n        const response = await this.chatWithAgent(prompt || defaultPrompt, context);\n        return response;\n      } catch (error) {\n        console.error('AI insights failed:', error);\n        return {\n          response: \"Keep exploring! New opportunities await you today.\",\n          agent_id: 'fallback',\n          timestamp: new Date().toISOString()\n        };\n      }\n    }\n\n    /**\n     * Get contextual help based on current screen\n     */\n    async getContextualHelp(screenName, context) {\n      const helpPrompts = {\n        home: \"How can I help you find products on the home screen?\",\n        product: \"Do you need help with this product or have questions about it?\",\n        cart: \"Need help with your shopping cart or checkout process?\",\n        profile: \"How can I assist with your account or settings?\",\n        orders: \"Do you have questions about your orders or order history?\"\n      };\n      const prompt = helpPrompts[screenName] || \"How can I help you navigate AisleMarts?\";\n      try {\n        const response = await this.chatWithAgent(prompt, {\n          screen: screenName,\n          ...context\n        });\n        return response.response;\n      } catch (error) {\n        return \"I'm here to help! Ask me anything about finding products, placing orders, or using AisleMarts.\";\n      }\n    }\n  }\n\n  // Export singleton instance\n  const aiService = AIService.getInstance();\n  var _default = aiService;\n});","lineCount":338,"map":[[12,2,369,0,"Object"],[12,8,369,0],[12,9,369,0,"defineProperty"],[12,23,369,0],[12,24,369,0,"exports"],[12,31,369,0],[13,4,369,0,"enumerable"],[13,14,369,0],[14,4,369,0,"get"],[14,7,369,0],[14,18,369,0,"get"],[14,19,369,0],[15,6,369,0],[15,13,369,0,"_default"],[15,21,369,0],[16,4,369,0],[17,2,369,0],[18,2,368,0,"Object"],[18,8,368,0],[18,9,368,0,"defineProperty"],[18,23,368,0],[18,24,368,0,"exports"],[18,31,368,0],[19,4,368,0,"enumerable"],[19,14,368,0],[20,4,368,0,"get"],[20,7,368,0],[20,18,368,0,"get"],[20,19,368,0],[21,6,368,0],[21,13,368,0,"aiService"],[21,22,368,0],[22,4,368,0],[23,2,368,0],[24,2,1,0],[24,6,1,0,"_apiClient"],[24,16,1,0],[24,19,1,0,"require"],[24,26,1,0],[24,27,1,0,"_dependencyMap"],[24,41,1,0],[25,2,1,36],[25,6,1,36,"_reactNativeWebDistExportsPlatform"],[25,40,1,36],[25,43,1,36,"require"],[25,50,1,36],[25,51,1,36,"_dependencyMap"],[25,65,1,36],[26,2,1,36],[26,6,1,36,"Platform"],[26,14,1,36],[26,17,1,36,"_interopDefault"],[26,32,1,36],[26,33,1,36,"_reactNativeWebDistExportsPlatform"],[26,67,1,36],[27,2,43,0],[27,8,43,6,"AIService"],[27,17,43,15],[27,18,43,16],[28,4,45,10,"voiceService"],[28,16,45,22],[28,19,45,30],[28,23,45,34],[29,4,47,10,"constructor"],[29,15,47,21,"constructor"],[29,16,47,21],[29,18,47,24],[30,6,48,4],[30,10,48,8],[30,11,48,9,"initializeVoiceService"],[30,33,48,31],[30,34,48,32],[30,35,48,33],[31,4,49,2],[32,4,51,2],[32,11,51,16,"getInstance"],[32,22,51,27,"getInstance"],[32,23,51,27],[32,25,51,41],[33,6,52,4],[33,10,52,8],[33,11,52,9,"AIService"],[33,20,52,18],[33,21,52,19,"instance"],[33,29,52,27],[33,31,52,29],[34,8,53,6,"AIService"],[34,17,53,15],[34,18,53,16,"instance"],[34,26,53,24],[34,29,53,27],[34,33,53,31,"AIService"],[34,42,53,40],[34,43,53,41],[34,44,53,42],[35,6,54,4],[36,6,55,4],[36,13,55,11,"AIService"],[36,22,55,20],[36,23,55,21,"instance"],[36,31,55,29],[37,4,56,2],[38,4,58,10,"initializeVoiceService"],[38,26,58,32,"initializeVoiceService"],[38,27,58,32],[38,29,58,35],[39,6,59,4],[39,10,59,8,"Platform"],[39,18,59,16],[39,19,59,16,"default"],[39,26,59,16],[39,27,59,17,"OS"],[39,29,59,19],[39,34,59,24],[39,39,59,29],[39,41,59,31],[40,8,60,6],[40,12,60,10],[41,10,61,8],[41,16,61,14,"Voice"],[41,21,61,19],[41,24,61,22,"require"],[41,31,61,29],[41,32,61,29,"_dependencyMap"],[41,46,61,29],[41,78,61,57],[41,79,61,58],[42,10,62,8],[42,14,62,12],[42,15,62,13,"voiceService"],[42,27,62,25],[42,30,62,28,"Voice"],[42,35,62,33],[42,36,62,34,"default"],[42,43,62,41],[42,47,62,45,"Voice"],[42,52,62,50],[43,8,63,6],[43,9,63,7],[43,10,63,8],[43,17,63,15,"error"],[43,22,63,20],[43,24,63,22],[44,10,64,8,"console"],[44,17,64,15],[44,18,64,16,"warn"],[44,22,64,20],[44,23,64,21],[44,53,64,51],[44,55,64,53,"error"],[44,60,64,58],[44,61,64,59],[45,8,65,6],[46,6,66,4],[47,4,67,2],[49,4,69,2],[50,0,70,0],[51,0,71,0],[52,4,72,2],[52,10,72,8,"detectLocale"],[52,22,72,20,"detectLocale"],[52,23,72,20],[52,25,72,44],[53,6,73,4],[53,10,73,8],[54,8,74,6],[54,14,74,12,"response"],[54,22,74,20],[54,25,74,23],[54,31,74,29,"API"],[54,41,74,32],[54,42,74,32,"API"],[54,45,74,32],[54,46,74,33,"get"],[54,49,74,36],[54,50,74,37],[54,72,74,59],[54,73,74,60],[55,8,75,6],[55,15,75,13,"response"],[55,23,75,21],[55,24,75,22,"data"],[55,28,75,26],[56,6,76,4],[56,7,76,5],[56,8,76,6],[56,15,76,13,"error"],[56,20,76,18],[56,22,76,20],[57,8,77,6,"console"],[57,15,77,13],[57,16,77,14,"error"],[57,21,77,19],[57,22,77,20],[57,48,77,46],[57,50,77,48,"error"],[57,55,77,53],[57,56,77,54],[58,8,78,6],[59,8,79,6],[59,15,79,13],[60,10,80,8,"country"],[60,17,80,15],[60,19,80,17],[60,23,80,21],[61,10,81,8,"language"],[61,18,81,16],[61,20,81,18],[61,24,81,22],[62,10,82,8,"currency"],[62,18,82,16],[62,20,82,18],[62,25,82,23],[63,10,83,8,"recommendations"],[63,25,83,23],[63,27,83,25],[64,12,84,10,"message"],[64,19,84,17],[64,21,84,19],[64,85,84,83],[65,12,85,10,"categories"],[65,22,85,20],[65,24,85,22],[65,25,85,23],[65,38,85,36],[65,40,85,38],[65,49,85,47],[65,51,85,49],[65,66,85,64],[65,67,85,65],[66,12,86,10,"next_steps"],[66,22,86,20],[66,24,86,22],[66,25,86,23],[66,42,86,40],[66,44,86,42],[66,60,86,58],[66,62,86,60],[66,81,86,79],[67,10,87,8],[68,8,88,6],[68,9,88,7],[69,6,89,4],[70,4,90,2],[72,4,92,2],[73,0,93,0],[74,0,94,0],[75,4,95,2],[75,10,95,8,"chatWithAgent"],[75,23,95,21,"chatWithAgent"],[75,24,95,22,"message"],[75,31,95,37],[75,33,95,39,"context"],[75,40,95,52],[75,42,95,77],[76,6,96,4],[76,10,96,8],[77,8,97,6],[77,14,97,12,"response"],[77,22,97,20],[77,25,97,23],[77,31,97,29,"API"],[77,41,97,32],[77,42,97,32,"API"],[77,45,97,32],[77,46,97,33,"post"],[77,50,97,37],[77,51,97,38],[77,61,97,48],[77,63,97,50],[78,10,98,8,"message"],[78,17,98,15],[79,10,99,8,"context"],[80,8,100,6],[80,9,100,7],[80,10,100,8],[81,8,101,6],[81,15,101,13,"response"],[81,23,101,21],[81,24,101,22,"data"],[81,28,101,26],[82,6,102,4],[82,7,102,5],[82,8,102,6],[82,15,102,13,"error"],[82,20,102,18],[82,22,102,20],[83,8,103,6,"console"],[83,15,103,13],[83,16,103,14,"error"],[83,21,103,19],[83,22,103,20],[83,39,103,37],[83,41,103,39,"error"],[83,46,103,44],[83,47,103,45],[84,8,104,6],[84,15,104,13],[85,10,105,8,"response"],[85,18,105,16],[85,20,105,18],[85,75,105,73],[86,10,106,8,"agent_id"],[86,18,106,16],[86,20,106,18],[86,30,106,28],[87,10,107,8,"timestamp"],[87,19,107,17],[87,21,107,19],[87,25,107,23,"Date"],[87,29,107,27],[87,30,107,28],[87,31,107,29],[87,32,107,30,"toISOString"],[87,43,107,41],[87,44,107,42],[88,8,108,6],[88,9,108,7],[89,6,109,4],[90,4,110,2],[92,4,112,2],[93,0,113,0],[94,0,114,0],[95,4,115,2],[95,10,115,8,"getOnboardingGuidance"],[95,31,115,29,"getOnboardingGuidance"],[95,32,115,30,"userInfo"],[95,40,115,43],[95,42,115,95],[96,6,116,4],[96,10,116,8],[97,8,117,6],[97,14,117,12,"response"],[97,22,117,20],[97,25,117,23],[97,31,117,29,"API"],[97,41,117,32],[97,42,117,32,"API"],[97,45,117,32],[97,46,117,33,"post"],[97,50,117,37],[97,51,117,38],[97,67,117,54],[97,69,117,56],[98,10,118,8,"user_info"],[98,19,118,17],[98,21,118,19,"userInfo"],[99,8,119,6],[99,9,119,7],[99,10,119,8],[100,8,120,6],[100,15,120,13,"response"],[100,23,120,21],[100,24,120,22,"data"],[100,28,120,26],[101,6,121,4],[101,7,121,5],[101,8,121,6],[101,15,121,13,"error"],[101,20,121,18],[101,22,121,20],[102,8,122,6,"console"],[102,15,122,13],[102,16,122,14,"error"],[102,21,122,19],[102,22,122,20],[102,51,122,49],[102,53,122,51,"error"],[102,58,122,56],[102,59,122,57],[103,8,123,6],[103,15,123,13],[104,10,124,8,"guidance"],[104,18,124,16],[104,20,124,18],[104,111,124,109],[105,10,125,8,"user_role"],[105,19,125,17],[105,21,125,19],[106,8,126,6],[106,9,126,7],[107,6,127,4],[108,4,128,2],[110,4,130,2],[111,0,131,0],[112,0,132,0],[113,4,133,2],[113,10,133,8,"getProductRecommendations"],[113,35,133,33,"getProductRecommendations"],[113,36,133,34,"query"],[113,41,133,47],[113,43,133,49,"maxResults"],[113,53,133,67],[113,56,133,70],[113,58,133,72],[113,60,133,107],[114,6,134,4],[114,10,134,8],[115,8,135,6],[115,14,135,12,"response"],[115,22,135,20],[115,25,135,23],[115,31,135,29,"API"],[115,41,135,32],[115,42,135,32,"API"],[115,45,135,32],[115,46,135,33,"post"],[115,50,135,37],[115,51,135,38],[115,72,135,59],[115,74,135,61],[116,10,136,8,"query"],[116,15,136,13],[117,10,137,8,"max_results"],[117,21,137,19],[117,23,137,21,"maxResults"],[118,8,138,6],[118,9,138,7],[118,10,138,8],[119,8,139,6],[119,15,139,13,"response"],[119,23,139,21],[119,24,139,22,"data"],[119,28,139,26],[120,6,140,4],[120,7,140,5],[120,8,140,6],[120,15,140,13,"error"],[120,20,140,18],[120,22,140,20],[121,8,141,6,"console"],[121,15,141,13],[121,16,141,14,"error"],[121,21,141,19],[121,22,141,20],[121,55,141,53],[121,57,141,55,"error"],[121,62,141,60],[121,63,141,61],[122,8,142,6],[122,15,142,13],[123,10,143,8,"recommendations"],[123,25,143,23],[123,27,143,25],[123,29,143,27],[124,10,144,8,"ai_explanation"],[124,24,144,22],[124,26,144,24],[124,74,144,72],[125,10,145,8,"query"],[126,8,146,6],[126,9,146,7],[127,6,147,4],[128,4,148,2],[130,4,150,2],[131,0,151,0],[132,0,152,0],[133,4,153,2],[133,10,153,8,"enhanceSearchQuery"],[133,28,153,26,"enhanceSearchQuery"],[133,29,153,27,"query"],[133,34,153,40],[133,36,153,42,"context"],[133,43,153,55],[133,45,153,71],[134,6,154,4],[134,10,154,8],[135,8,155,6],[135,14,155,12,"response"],[135,22,155,20],[135,25,155,23],[135,31,155,29,"API"],[135,41,155,32],[135,42,155,32,"API"],[135,45,155,32],[135,46,155,33,"post"],[135,50,155,37],[135,51,155,38],[135,71,155,58],[135,73,155,60],[136,10,156,8,"query"],[136,15,156,13],[137,10,157,8,"context"],[138,8,158,6],[138,9,158,7],[138,10,158,8],[139,8,159,6],[139,15,159,13,"response"],[139,23,159,21],[139,24,159,22,"data"],[139,28,159,26],[140,6,160,4],[140,7,160,5],[140,8,160,6],[140,15,160,13,"error"],[140,20,160,18],[140,22,160,20],[141,8,161,6,"console"],[141,15,161,13],[141,16,161,14,"error"],[141,21,161,19],[141,22,161,20],[141,50,161,48],[141,52,161,50,"error"],[141,57,161,55],[141,58,161,56],[142,8,162,6],[142,15,162,13],[143,10,163,8,"original_query"],[143,24,163,22],[143,26,163,24,"query"],[143,31,163,29],[144,10,164,8,"enhanced_keywords"],[144,27,164,25],[144,29,164,27,"query"],[144,34,164,32],[144,35,164,33,"split"],[144,40,164,38],[144,41,164,39],[144,42,164,40],[145,10,165,8,"suggested_filters"],[145,27,165,25],[145,29,165,27],[145,30,165,28],[145,31,165,29],[146,10,166,8,"search_intent"],[146,23,166,21],[146,25,166,23],[146,41,166,39],[147,10,167,8,"synonyms"],[147,18,167,16],[147,20,167,18],[148,8,168,6],[148,9,168,7],[149,6,169,4],[150,4,170,2],[152,4,172,2],[153,0,173,0],[154,0,174,0],[155,4,175,2],[155,10,175,8,"analyzeIntent"],[155,23,175,21,"analyzeIntent"],[155,24,175,22,"message"],[155,31,175,37],[155,33,175,64],[156,6,176,4],[156,10,176,8],[157,8,177,6],[157,14,177,12,"response"],[157,22,177,20],[157,25,177,23],[157,31,177,29,"API"],[157,41,177,32],[157,42,177,32,"API"],[157,45,177,32],[157,46,177,33,"post"],[157,50,177,37],[157,51,177,38],[157,72,177,59],[157,74,177,61],[157,78,177,65],[157,80,177,67],[158,10,178,8,"params"],[158,16,178,14],[158,18,178,16],[159,12,178,18,"message"],[160,10,178,26],[161,8,179,6],[161,9,179,7],[161,10,179,8],[162,8,180,6],[162,15,180,13,"response"],[162,23,180,21],[162,24,180,22,"data"],[162,28,180,26],[163,6,181,4],[163,7,181,5],[163,8,181,6],[163,15,181,13,"error"],[163,20,181,18],[163,22,181,20],[164,8,182,6,"console"],[164,15,182,13],[164,16,182,14,"error"],[164,21,182,19],[164,22,182,20],[164,47,182,45],[164,49,182,47,"error"],[164,54,182,52],[164,55,182,53],[165,8,183,6],[165,15,183,13],[166,10,184,8,"intent_type"],[166,21,184,19],[166,23,184,21],[166,37,184,35],[167,10,185,8,"extracted_keywords"],[167,28,185,26],[167,30,185,28],[167,31,185,29,"message"],[167,38,185,36],[167,39,185,37],[168,10,186,8,"suggested_actions"],[168,27,186,25],[168,29,186,27],[168,30,186,28],[168,47,186,45],[168,48,186,46],[169,10,187,8,"urgency_level"],[169,23,187,21],[169,25,187,23],[170,8,188,6],[170,9,188,7],[171,6,189,4],[172,4,190,2],[174,4,192,2],[175,0,193,0],[176,0,194,0],[177,4,195,2],[177,10,195,8,"trackActivity"],[177,23,195,21,"trackActivity"],[177,24,195,22,"activityData"],[177,36,195,39],[177,38,195,56],[178,6,196,4],[178,10,196,8],[179,8,197,6],[179,14,197,12,"API"],[179,24,197,15],[179,25,197,15,"API"],[179,28,197,15],[179,29,197,16,"post"],[179,33,197,20],[179,34,197,21],[179,54,197,41],[179,56,197,43,"activityData"],[179,68,197,55],[179,69,197,56],[180,6,198,4],[180,7,198,5],[180,8,198,6],[180,15,198,13,"error"],[180,20,198,18],[180,22,198,20],[181,8,199,6,"console"],[181,15,199,13],[181,16,199,14,"error"],[181,21,199,19],[181,22,199,20],[181,49,199,47],[181,51,199,49,"error"],[181,56,199,54],[181,57,199,55],[182,6,200,4],[183,4,201,2],[185,4,203,2],[186,0,204,0],[187,0,205,0],[188,4,206,2],[188,10,206,8,"startVoiceSearch"],[188,26,206,24,"startVoiceSearch"],[188,27,206,24],[188,29,206,44],[189,6,207,4],[189,13,207,11],[189,17,207,15,"Promise"],[189,24,207,22],[189,25,207,23],[189,26,207,24,"resolve"],[189,33,207,31],[189,35,207,33,"reject"],[189,41,207,39],[189,46,207,44],[190,8,208,6],[190,12,208,10],[190,13,208,11],[190,17,208,15],[190,18,208,16,"voiceService"],[190,30,208,28],[190,34,208,32,"Platform"],[190,42,208,40],[190,43,208,40,"default"],[190,50,208,40],[190,51,208,41,"OS"],[190,53,208,43],[190,58,208,48],[190,63,208,53],[190,65,208,55],[191,10,209,8,"reject"],[191,16,209,14],[191,17,209,15],[191,21,209,19,"Error"],[191,26,209,24],[191,27,209,25],[191,72,209,70],[191,73,209,71],[191,74,209,72],[192,10,210,8],[193,8,211,6],[194,8,213,6],[194,14,213,12,"timeout"],[194,21,213,19],[194,24,213,22,"setTimeout"],[194,34,213,32],[194,35,213,33],[194,41,213,39],[195,10,214,8],[195,14,214,12],[195,15,214,13,"voiceService"],[195,27,214,25],[195,28,214,26,"stop"],[195,32,214,30],[195,33,214,31],[195,34,214,32],[196,10,215,8,"reject"],[196,16,215,14],[196,17,215,15],[196,21,215,19,"Error"],[196,26,215,24],[196,27,215,25],[196,49,215,47],[196,50,215,48],[196,51,215,49],[197,8,216,6],[197,9,216,7],[197,11,216,9],[197,16,216,14],[197,17,216,15],[198,8,218,6],[198,12,218,10],[198,13,218,11,"voiceService"],[198,25,218,23],[198,26,218,24,"onSpeechResults"],[198,41,218,39],[198,44,218,43,"event"],[198,49,218,53],[198,53,218,58],[199,10,219,8,"clearTimeout"],[199,22,219,20],[199,23,219,21,"timeout"],[199,30,219,28],[199,31,219,29],[200,10,220,8],[200,16,220,14,"results"],[200,23,220,21],[200,26,220,24,"event"],[200,31,220,29],[200,32,220,30,"value"],[200,37,220,35],[200,41,220,39],[200,43,220,41],[201,10,221,8],[201,14,221,12,"results"],[201,21,221,19],[201,22,221,20,"length"],[201,28,221,26],[201,31,221,29],[201,32,221,30],[201,34,221,32],[202,12,222,10,"resolve"],[202,19,222,17],[202,20,222,18,"results"],[202,27,222,25],[202,28,222,26],[202,29,222,27],[202,30,222,28],[202,31,222,29],[203,10,223,8],[203,11,223,9],[203,17,223,15],[204,12,224,10,"reject"],[204,18,224,16],[204,19,224,17],[204,23,224,21,"Error"],[204,28,224,26],[204,29,224,27],[204,51,224,49],[204,52,224,50],[204,53,224,51],[205,10,225,8],[206,8,226,6],[206,9,226,7],[207,8,228,6],[207,12,228,10],[207,13,228,11,"voiceService"],[207,25,228,23],[207,26,228,24,"onSpeechError"],[207,39,228,37],[207,42,228,41,"event"],[207,47,228,51],[207,51,228,56],[208,10,229,8,"clearTimeout"],[208,22,229,20],[208,23,229,21,"timeout"],[208,30,229,28],[208,31,229,29],[209,10,230,8,"reject"],[209,16,230,14],[209,17,230,15],[209,21,230,19,"Error"],[209,26,230,24],[209,27,230,25,"event"],[209,32,230,30],[209,33,230,31,"error"],[209,38,230,36],[209,40,230,38,"message"],[209,47,230,45],[209,51,230,49],[209,72,230,70],[209,73,230,71],[209,74,230,72],[210,8,231,6],[210,9,231,7],[211,8,233,6],[211,12,233,10],[211,13,233,11,"voiceService"],[211,25,233,23],[211,26,233,24,"start"],[211,31,233,29],[211,32,233,30],[211,39,233,37],[211,40,233,38],[211,41,233,39,"catch"],[211,46,233,44],[211,47,233,46,"error"],[211,52,233,56],[211,56,233,61],[212,10,234,8,"clearTimeout"],[212,22,234,20],[212,23,234,21,"timeout"],[212,30,234,28],[212,31,234,29],[213,10,235,8,"reject"],[213,16,235,14],[213,17,235,15,"error"],[213,22,235,20],[213,23,235,21],[214,8,236,6],[214,9,236,7],[214,10,236,8],[215,6,237,4],[215,7,237,5],[215,8,237,6],[216,4,238,2],[218,4,240,2],[219,0,241,0],[220,0,242,0],[221,4,243,2],[221,10,243,8,"stopVoiceSearch"],[221,25,243,23,"stopVoiceSearch"],[221,26,243,23],[221,28,243,41],[222,6,244,4],[222,10,244,8],[222,14,244,12],[222,15,244,13,"voiceService"],[222,27,244,25],[222,31,244,29,"Platform"],[222,39,244,37],[222,40,244,37,"default"],[222,47,244,37],[222,48,244,38,"OS"],[222,50,244,40],[222,55,244,45],[222,60,244,50],[222,62,244,52],[223,8,245,6],[223,12,245,10],[224,10,246,8],[224,16,246,14],[224,20,246,18],[224,21,246,19,"voiceService"],[224,33,246,31],[224,34,246,32,"stop"],[224,38,246,36],[224,39,246,37],[224,40,246,38],[225,8,247,6],[225,9,247,7],[225,10,247,8],[225,17,247,15,"error"],[225,22,247,20],[225,24,247,22],[226,10,248,8,"console"],[226,17,248,15],[226,18,248,16,"error"],[226,23,248,21],[226,24,248,22],[226,54,248,52],[226,56,248,54,"error"],[226,61,248,59],[226,62,248,60],[227,8,249,6],[228,6,250,4],[229,4,251,2],[231,4,253,2],[232,0,254,0],[233,0,255,0],[234,4,256,2],[234,10,256,8,"processVoiceSearch"],[234,28,256,26,"processVoiceSearch"],[234,29,256,27,"audioText"],[234,38,256,44],[234,40,256,60],[235,6,257,4],[235,10,257,8],[236,8,258,6],[236,14,258,12,"response"],[236,22,258,20],[236,25,258,23],[236,31,258,29,"API"],[236,41,258,32],[236,42,258,32,"API"],[236,45,258,32],[236,46,258,33,"post"],[236,50,258,37],[236,51,258,38],[236,69,258,56],[236,71,258,58],[236,75,258,62],[236,77,258,64],[237,10,259,8,"params"],[237,16,259,14],[237,18,259,16],[238,12,259,18,"audio_text"],[238,22,259,28],[238,24,259,30,"audioText"],[239,10,259,40],[240,8,260,6],[240,9,260,7],[240,10,260,8],[241,8,261,6],[241,15,261,13,"response"],[241,23,261,21],[241,24,261,22,"data"],[241,28,261,26],[242,6,262,4],[242,7,262,5],[242,8,262,6],[242,15,262,13,"error"],[242,20,262,18],[242,22,262,20],[243,8,263,6,"console"],[243,15,263,13],[243,16,263,14,"error"],[243,21,263,19],[243,22,263,20],[243,55,263,53],[243,57,263,55,"error"],[243,62,263,60],[243,63,263,61],[244,8,264,6],[244,15,264,13],[245,10,265,8,"original_query"],[245,24,265,22],[245,26,265,24,"audioText"],[245,35,265,33],[246,10,266,8,"enhanced_query"],[246,24,266,22],[246,26,266,24],[247,12,266,26,"original_query"],[247,26,266,40],[247,28,266,42,"audioText"],[248,10,266,52],[248,11,266,53],[249,10,267,8,"products"],[249,18,267,16],[249,20,267,18],[249,22,267,20],[250,10,268,8,"response_type"],[250,23,268,21],[250,25,268,23],[251,8,269,6],[251,9,269,7],[252,6,270,4],[253,4,271,2],[255,4,273,2],[256,0,274,0],[257,0,275,0],[258,4,276,2],[258,10,276,8,"getWelcomeMessage"],[258,27,276,25,"getWelcomeMessage"],[258,28,276,26,"user"],[258,32,276,36],[258,34,276,55],[259,6,277,4],[259,10,277,8],[259,11,277,9,"user"],[259,15,277,13],[259,17,277,15],[260,8,278,6],[260,15,278,13],[260,110,278,108],[261,6,279,4],[262,6,281,4],[262,10,281,8],[263,8,282,6],[263,14,282,12,"context"],[263,21,282,19],[263,24,282,22],[264,10,283,8,"user_name"],[264,19,283,17],[264,21,283,19,"user"],[264,25,283,23],[264,26,283,24,"name"],[264,30,283,28],[265,10,284,8,"user_roles"],[265,20,284,18],[265,22,284,20,"user"],[265,26,284,24],[265,27,284,25,"roles"],[265,32,284,30],[266,10,285,8,"returning_user"],[266,24,285,22],[266,26,285,24],[267,8,286,6],[267,9,286,7],[268,8,288,6],[268,14,288,12,"response"],[268,22,288,20],[268,25,288,23],[268,31,288,29],[268,35,288,33],[268,36,288,34,"chatWithAgent"],[268,49,288,47],[268,50,289,8],[268,114,289,72],[268,116,290,8,"context"],[268,123,291,6],[268,124,291,7],[269,8,293,6],[269,15,293,13,"response"],[269,23,293,21],[269,24,293,22,"response"],[269,32,293,30],[270,6,294,4],[270,7,294,5],[270,8,294,6],[270,15,294,13,"error"],[270,20,294,18],[270,22,294,20],[271,8,295,6],[271,15,295,13],[271,32,295,30,"user"],[271,36,295,34],[271,37,295,35,"name"],[271,41,295,39],[271,45,295,43],[271,53,295,51],[271,121,295,119],[272,6,296,4],[273,4,297,2],[275,4,299,2],[276,0,300,0],[277,0,301,0],[278,4,302,2],[278,10,302,8,"getSearchSuggestions"],[278,30,302,28,"getSearchSuggestions"],[278,31,302,29,"partialQuery"],[278,43,302,49],[278,45,302,70],[279,6,303,4],[279,10,303,8],[280,8,304,6],[280,14,304,12,"response"],[280,22,304,20],[280,25,304,23],[280,31,304,29],[280,35,304,33],[280,36,304,34,"enhanceSearchQuery"],[280,54,304,52],[280,55,304,53,"partialQuery"],[280,67,304,65],[280,68,304,66],[281,8,305,6],[281,15,305,13],[281,16,306,8,"response"],[281,24,306,16],[281,25,306,17,"original_query"],[281,39,306,31],[281,41,307,8],[281,45,307,12,"response"],[281,53,307,20],[281,54,307,21,"enhanced_keywords"],[281,71,307,38],[281,75,307,42],[281,77,307,44],[281,78,307,45],[281,80,308,8],[281,84,308,12,"response"],[281,92,308,20],[281,93,308,21,"synonyms"],[281,101,308,29],[281,105,308,33],[281,107,308,35],[281,108,308,36],[281,109,309,7],[281,110,309,8,"filter"],[281,116,309,14],[281,117,309,15,"Boolean"],[281,124,309,22],[281,125,309,23],[281,126,309,24,"slice"],[281,131,309,29],[281,132,309,30],[281,133,309,31],[281,135,309,33],[281,136,309,34],[281,137,309,35],[282,6,310,4],[282,7,310,5],[282,8,310,6],[282,15,310,13,"error"],[282,20,310,18],[282,22,310,20],[283,8,311,6,"console"],[283,15,311,13],[283,16,311,14,"error"],[283,21,311,19],[283,22,311,20],[283,50,311,48],[283,52,311,50,"error"],[283,57,311,55],[283,58,311,56],[284,8,312,6],[284,15,312,13],[284,16,312,14,"partialQuery"],[284,28,312,26],[284,29,312,27],[285,6,313,4],[286,4,314,2],[288,4,316,2],[289,0,317,0],[290,0,318,0],[291,4,319,2],[291,10,319,8,"getInsights"],[291,21,319,19,"getInsights"],[291,22,319,20,"user"],[291,26,319,30],[291,28,319,32,"prompt"],[291,34,319,47],[291,36,319,72],[292,6,320,4],[292,12,320,10,"defaultPrompt"],[292,25,320,23],[292,28,320,26,"user"],[292,32,320,30],[292,34,320,32,"roles"],[292,39,320,37],[292,41,320,39,"includes"],[292,49,320,47],[292,50,320,48],[292,58,320,56],[292,59,320,57],[292,62,321,8],[292,173,321,119],[292,176,322,8],[292,270,322,102],[293,6,324,4],[293,10,324,8],[294,8,325,6],[294,14,325,12,"context"],[294,21,325,19],[294,24,325,22],[295,10,326,8,"user_name"],[295,19,326,17],[295,21,326,19,"user"],[295,25,326,23],[295,27,326,25,"name"],[295,31,326,29],[296,10,327,8,"user_roles"],[296,20,327,18],[296,22,327,20,"user"],[296,26,327,24],[296,28,327,26,"roles"],[296,33,327,31],[297,10,328,8,"insight_type"],[297,22,328,20],[297,24,328,22],[298,8,329,6],[298,9,329,7],[299,8,331,6],[299,14,331,12,"response"],[299,22,331,20],[299,25,331,23],[299,31,331,29],[299,35,331,33],[299,36,331,34,"chatWithAgent"],[299,49,331,47],[299,50,331,48,"prompt"],[299,56,331,54],[299,60,331,58,"defaultPrompt"],[299,73,331,71],[299,75,331,73,"context"],[299,82,331,80],[299,83,331,81],[300,8,332,6],[300,15,332,13,"response"],[300,23,332,21],[301,6,333,4],[301,7,333,5],[301,8,333,6],[301,15,333,13,"error"],[301,20,333,18],[301,22,333,20],[302,8,334,6,"console"],[302,15,334,13],[302,16,334,14,"error"],[302,21,334,19],[302,22,334,20],[302,43,334,41],[302,45,334,43,"error"],[302,50,334,48],[302,51,334,49],[303,8,335,6],[303,15,335,13],[304,10,336,8,"response"],[304,18,336,16],[304,20,336,18],[304,72,336,70],[305,10,337,8,"agent_id"],[305,18,337,16],[305,20,337,18],[305,30,337,28],[306,10,338,8,"timestamp"],[306,19,338,17],[306,21,338,19],[306,25,338,23,"Date"],[306,29,338,27],[306,30,338,28],[306,31,338,29],[306,32,338,30,"toISOString"],[306,43,338,41],[306,44,338,42],[307,8,339,6],[307,9,339,7],[308,6,340,4],[309,4,341,2],[311,4,343,2],[312,0,344,0],[313,0,345,0],[314,4,346,2],[314,10,346,8,"getContextualHelp"],[314,27,346,25,"getContextualHelp"],[314,28,346,26,"screenName"],[314,38,346,44],[314,40,346,46,"context"],[314,47,346,59],[314,49,346,78],[315,6,347,4],[315,12,347,10,"helpPrompts"],[315,23,347,21],[315,26,347,24],[316,8,348,6,"home"],[316,12,348,10],[316,14,348,12],[316,68,348,66],[317,8,349,6,"product"],[317,15,349,13],[317,17,349,15],[317,81,349,79],[318,8,350,6,"cart"],[318,12,350,10],[318,14,350,12],[318,70,350,68],[319,8,351,6,"profile"],[319,15,351,13],[319,17,351,15],[319,66,351,64],[320,8,352,6,"orders"],[320,14,352,12],[320,16,352,14],[321,6,353,4],[321,7,353,5],[322,6,355,4],[322,12,355,10,"prompt"],[322,18,355,16],[322,21,355,19,"helpPrompts"],[322,32,355,30],[322,33,355,31,"screenName"],[322,43,355,41],[322,44,355,70],[322,48,356,19],[322,89,356,60],[323,6,358,4],[323,10,358,8],[324,8,359,6],[324,14,359,12,"response"],[324,22,359,20],[324,25,359,23],[324,31,359,29],[324,35,359,33],[324,36,359,34,"chatWithAgent"],[324,49,359,47],[324,50,359,48,"prompt"],[324,56,359,54],[324,58,359,56],[325,10,359,58,"screen"],[325,16,359,64],[325,18,359,66,"screenName"],[325,28,359,76],[326,10,359,78],[326,13,359,81,"context"],[327,8,359,89],[327,9,359,90],[327,10,359,91],[328,8,360,6],[328,15,360,13,"response"],[328,23,360,21],[328,24,360,22,"response"],[328,32,360,30],[329,6,361,4],[329,7,361,5],[329,8,361,6],[329,15,361,13,"error"],[329,20,361,18],[329,22,361,20],[330,8,362,6],[330,15,362,13],[330,111,362,109],[331,6,363,4],[332,4,364,2],[333,2,365,0],[335,2,367,0],[336,2,368,7],[336,8,368,13,"aiService"],[336,17,368,22],[336,20,368,25,"AIService"],[336,29,368,34],[336,30,368,35,"getInstance"],[336,41,368,46],[336,42,368,47],[336,43,368,48],[337,2,369,0],[337,6,369,0,"_default"],[337,14,369,0],[337,17,369,15,"aiService"],[337,26,369,24],[338,0,369,25],[338,3]],"functionMap":{"names":["<global>","AIService","constructor","getInstance","initializeVoiceService","detectLocale","chatWithAgent","getOnboardingGuidance","getProductRecommendations","enhanceSearchQuery","analyzeIntent","trackActivity","startVoiceSearch","Promise$argument_0","setTimeout$argument_0","voiceService.onSpeechResults","voiceService.onSpeechError","voiceService.start._catch$argument_0","stopVoiceSearch","processVoiceSearch","getWelcomeMessage","getSearchSuggestions","getInsights","getContextualHelp"],"mappings":"AAA;AC0C;ECI;GDE;EEE;GFK;EGE;GHS;EIK;GJkB;EKK;GLe;EMK;GNa;EOK;GPe;EQK;GRiB;ESK;GTe;EUK;GVM;EWK;uBCC;iCCM;ODG;0CEE;OFQ;wCGE;OHG;6CIE;OJG;KDC;GXC;EiBK;GjBQ;EkBK;GlBe;EmBK;GnBqB;EoBK;GpBY;EqBK;GrBsB;EsBK;GtBkB;CDC"},"hasCjsExports":false},"type":"js/module"}]}