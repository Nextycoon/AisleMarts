{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"html-parse-stringify","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":40,"index":129}}],"key":"Dz5mG5jCySHyZi3eazCTCPjnQDg=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":64,"index":194}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}},{"name":"./defaults.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":195},"end":{"line":4,"column":44,"index":239}}],"key":"XCWKIxVkGmzpUvwhJx9c42EufEI=","exportNames":["*"],"imports":1}},{"name":"./i18nInstance.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":240},"end":{"line":5,"column":44,"index":284}}],"key":"2DjoKlYcMulm3L6r09aRNQJwnCE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"format\"],\n    _excluded2 = [\"children\", \"count\", \"parent\", \"i18nKey\", \"context\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"shouldUnescape\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"nodesToString\", {\n    enumerable: true,\n    get: function () {\n      return nodesToString;\n    }\n  });\n  exports.Trans = Trans;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _htmlParseStringify = require(_dependencyMap[2], \"html-parse-stringify\");\n  var HTML = _interopDefault(_htmlParseStringify);\n  var _utilsJs = require(_dependencyMap[3], \"./utils.js\");\n  var _defaultsJs = require(_dependencyMap[4], \"./defaults.js\");\n  var _i18nInstanceJs = require(_dependencyMap[5], \"./i18nInstance.js\");\n  const hasChildren = (node, checkLength) => {\n    if (!node) return false;\n    const base = node.props?.children ?? node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  };\n  const getChildren = node => {\n    if (!node) return [];\n    const children = node.props?.children ?? node.children;\n    return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n  };\n  const hasValidReactChildren = children => Array.isArray(children) && children.every(_react.isValidElement);\n  const getAsArray = data => Array.isArray(data) ? data : [data];\n  const mergeProps = (source, target) => {\n    const newTarget = Object.assign({}, target);\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  };\n  const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n    if (!children) return '';\n    let stringNode = '';\n    const childrenArray = getAsArray(children);\n    const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n    childrenArray.forEach((child, childIndex) => {\n      if ((0, _utilsJs.isString)(child)) {\n        stringNode += `${child}`;\n        return;\n      }\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) {\n        const {\n          props,\n          type\n        } = child;\n        const childPropsCount = Object.keys(props).length;\n        const shouldKeepChild = keepArray.indexOf(type) > -1;\n        const childChildren = props.children;\n        if (!childChildren && shouldKeepChild && !childPropsCount) {\n          stringNode += `<${type}/>`;\n          return;\n        }\n        if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n          stringNode += `<${childIndex}></${childIndex}>`;\n          return;\n        }\n        if (shouldKeepChild && childPropsCount === 1 && (0, _utilsJs.isString)(childChildren)) {\n          stringNode += `<${type}>${childChildren}</${type}>`;\n          return;\n        }\n        const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n        return;\n      }\n      if (child === null) {\n        (0, _utilsJs.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n          i18nKey\n        });\n        return;\n      }\n      if ((0, _utilsJs.isObject)(child)) {\n        const {\n            format\n          } = child,\n          clone = (0, _objectWithoutPropertiesLoose.default)(child, _excluded);\n        const keys = Object.keys(clone);\n        if (keys.length === 1) {\n          const value = format ? `${keys[0]}, ${format}` : keys[0];\n          stringNode += `{{${value}}}`;\n          return;\n        }\n        (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n          i18nKey,\n          child\n        });\n        return;\n      }\n      (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n        i18nKey,\n        child\n      });\n    });\n    return stringNode;\n  };\n  const renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n    if (targetString === '') return [];\n    const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n    if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n    const data = knownComponentsMap ?? {};\n    const getData = childs => {\n      const childrenArray = getAsArray(childs);\n      childrenArray.forEach(child => {\n        if ((0, _utilsJs.isString)(child)) return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _utilsJs.isObject)(child) && ! /*#__PURE__*/(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    };\n    getData(children);\n    const ast = HTML.default.parse(`<0>${targetString}</0>`);\n    const opts = Object.assign({}, data, combinedTOpts);\n    const renderInner = (child, node, rootReactNode) => {\n      const childs = getChildren(child);\n      const mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n    };\n    const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n      if (child.dummy) {\n        child.children = inner;\n        mem.push(/*#__PURE__*/(0, _react.cloneElement)(child, {\n          key: i\n        }, isVoid ? undefined : inner));\n      } else {\n        mem.push(..._react.Children.map([child], c => {\n          const props = Object.assign({}, c.props);\n          delete props.i18nIsDynamicList;\n          return /*#__PURE__*/(0, _react.createElement)(c.type, Object.assign({}, props, {\n            key: i,\n            ref: c.props.ref ?? c.ref\n          }), isVoid ? null : inner);\n        }));\n      }\n    };\n    const mapAST = (reactNode, astNode, rootReactNode) => {\n      const reactNodes = getAsArray(reactNode);\n      const astNodes = getAsArray(astNode);\n      return astNodes.reduce((mem, node, i) => {\n        const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          let tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n          if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          const isElement = /*#__PURE__*/(0, _react.isValidElement)(child);\n          const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _utilsJs.isObject)(child) && child.dummy && !isElement;\n          const isKnownComponent = (0, _utilsJs.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n          if ((0, _utilsJs.isString)(child)) {\n            const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              const inner = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }));\n              } else {\n                const inner = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }, inner));\n              }\n            } else if (node.voidElement) {\n              mem.push(`<${node.name} />`);\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(`<${node.name}>${inner}</${node.name}>`);\n            }\n          } else if ((0, _utilsJs.isObject)(child) && !isElement) {\n            const content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else {\n            pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n          }\n        } else if (node.type === 'text') {\n          const wrapTextNodes = i18nOptions.transWrapTextNodes;\n          const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push(/*#__PURE__*/(0, _react.createElement)(wrapTextNodes, {\n              key: `${node.name}-${i}`\n            }, content));\n          } else {\n            mem.push(content);\n          }\n        }\n        return mem;\n      }, []);\n    };\n    const result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  };\n  const fixComponentProps = (component, index, translation) => {\n    const componentKey = component.key || index;\n    const comp = /*#__PURE__*/(0, _react.cloneElement)(component, {\n      key: componentKey\n    });\n    if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n      return comp;\n    }\n    function Componentized() {\n      return /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, comp);\n    }\n    return /*#__PURE__*/(0, _react.createElement)(Componentized, {\n      key: componentKey\n    });\n  };\n  const generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n  const generateObjectComponents = (components, translation) => {\n    const componentMap = {};\n    Object.keys(components).forEach(c => {\n      Object.assign(componentMap, {\n        [c]: fixComponentProps(components[c], c, translation)\n      });\n    });\n    return componentMap;\n  };\n  const generateComponents = (components, translation, i18n, i18nKey) => {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      return generateArrayComponents(components, translation);\n    }\n    if ((0, _utilsJs.isObject)(components)) {\n      return generateObjectComponents(components, translation);\n    }\n    (0, _utilsJs.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n      i18nKey\n    });\n    return null;\n  };\n  const isComponentsMap = object => {\n    if (!(0, _utilsJs.isObject)(object)) return false;\n    if (Array.isArray(object)) return false;\n    return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n  };\n  function Trans(_ref) {\n    let {\n        children,\n        count,\n        parent,\n        i18nKey,\n        context,\n        tOptions = {},\n        values,\n        defaults,\n        components,\n        ns,\n        i18n: i18nFromProps,\n        t: tFromProps,\n        shouldUnescape\n      } = _ref,\n      additionalProps = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded2);\n    const i18n = i18nFromProps || (0, _i18nInstanceJs.getI18n)();\n    if (!i18n) {\n      (0, _utilsJs.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n        i18nKey\n      });\n      return children;\n    }\n    const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n    const reactI18nextOptions = Object.assign({}, (0, _defaultsJs.getDefaults)(), i18n.options?.react);\n    let namespaces = ns || t.ns || i18n.options?.defaultNS;\n    namespaces = (0, _utilsJs.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n    const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n    const {\n      hashTransKey\n    } = reactI18nextOptions;\n    const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n    if (i18n.options?.interpolation?.defaultVariables) {\n      values = values && Object.keys(values).length > 0 ? Object.assign({}, values, i18n.options.interpolation.defaultVariables) : Object.assign({}, i18n.options.interpolation.defaultVariables);\n    }\n    const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n      interpolation: Object.assign({}, tOptions.interpolation, {\n        prefix: '#$?',\n        suffix: '?$#'\n      })\n    };\n    const combinedTOpts = Object.assign({}, tOptions, {\n      context: context || tOptions.context,\n      count\n    }, values, interpolationOverride, {\n      defaultValue,\n      ns: namespaces\n    });\n    const translation = key ? t(key, combinedTOpts) : defaultValue;\n    const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n    let indexedChildren = generatedComponents || children;\n    let componentsMap = null;\n    if (isComponentsMap(generatedComponents)) {\n      componentsMap = generatedComponents;\n      indexedChildren = children;\n    }\n    const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n    return useAsParent ? /*#__PURE__*/(0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":327,"map":[[14,2,26,0,"Object"],[14,8,26,0],[14,9,26,0,"defineProperty"],[14,23,26,0],[14,24,26,0,"exports"],[14,31,26,0],[15,4,26,0,"enumerable"],[15,14,26,0],[16,4,26,0,"get"],[16,7,26,0],[16,18,26,0,"get"],[16,19,26,0],[17,6,26,0],[17,13,26,0,"nodesToString"],[17,26,26,0],[18,4,26,0],[19,2,26,0],[20,2,250,0,"exports"],[20,9,250,0],[20,10,250,0,"Trans"],[20,15,250,0],[20,18,250,0,"Trans"],[20,23,250,0],[21,2,321,1],[21,6,321,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[21,54,321,1],[21,57,321,1,"require"],[21,64,321,1],[21,65,321,1,"_dependencyMap"],[21,79,321,1],[22,2,321,1],[22,6,321,1,"_objectWithoutPropertiesLoose"],[22,35,321,1],[22,38,321,1,"_interopDefault"],[22,53,321,1],[22,54,321,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[22,102,321,1],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_htmlParseStringify"],[24,25,2,0],[24,28,2,0,"require"],[24,35,2,0],[24,36,2,0,"_dependencyMap"],[24,50,2,0],[25,2,2,0],[25,6,2,0,"HTML"],[25,10,2,0],[25,13,2,0,"_interopDefault"],[25,28,2,0],[25,29,2,0,"_htmlParseStringify"],[25,48,2,0],[26,2,3,0],[26,6,3,0,"_utilsJs"],[26,14,3,0],[26,17,3,0,"require"],[26,24,3,0],[26,25,3,0,"_dependencyMap"],[26,39,3,0],[27,2,4,0],[27,6,4,0,"_defaultsJs"],[27,17,4,0],[27,20,4,0,"require"],[27,27,4,0],[27,28,4,0,"_dependencyMap"],[27,42,4,0],[28,2,5,0],[28,6,5,0,"_i18nInstanceJs"],[28,21,5,0],[28,24,5,0,"require"],[28,31,5,0],[28,32,5,0,"_dependencyMap"],[28,46,5,0],[29,2,6,0],[29,8,6,6,"hasChildren"],[29,19,6,17],[29,22,6,20,"hasChildren"],[29,23,6,21,"node"],[29,27,6,25],[29,29,6,27,"checkLength"],[29,40,6,38],[29,45,6,43],[30,4,7,2],[30,8,7,6],[30,9,7,7,"node"],[30,13,7,11],[30,15,7,13],[30,22,7,20],[30,27,7,25],[31,4,8,2],[31,10,8,8,"base"],[31,14,8,12],[31,17,8,15,"node"],[31,21,8,19],[31,22,8,20,"props"],[31,27,8,25],[31,29,8,27,"children"],[31,37,8,35],[31,41,8,39,"node"],[31,45,8,43],[31,46,8,44,"children"],[31,54,8,52],[32,4,9,2],[32,8,9,6,"checkLength"],[32,19,9,17],[32,21,9,19],[32,28,9,26,"base"],[32,32,9,30],[32,33,9,31,"length"],[32,39,9,37],[32,42,9,40],[32,43,9,41],[33,4,10,2],[33,11,10,9],[33,12,10,10],[33,13,10,11,"base"],[33,17,10,15],[34,2,11,0],[34,3,11,1],[35,2,12,0],[35,8,12,6,"getChildren"],[35,19,12,17],[35,22,12,20,"node"],[35,26,12,24],[35,30,12,28],[36,4,13,2],[36,8,13,6],[36,9,13,7,"node"],[36,13,13,11],[36,15,13,13],[36,22,13,20],[36,24,13,22],[37,4,14,2],[37,10,14,8,"children"],[37,18,14,16],[37,21,14,19,"node"],[37,25,14,23],[37,26,14,24,"props"],[37,31,14,29],[37,33,14,31,"children"],[37,41,14,39],[37,45,14,43,"node"],[37,49,14,47],[37,50,14,48,"children"],[37,58,14,56],[38,4,15,2],[38,11,15,9,"node"],[38,15,15,13],[38,16,15,14,"props"],[38,21,15,19],[38,23,15,21,"i18nIsDynamicList"],[38,40,15,38],[38,43,15,41,"getAsArray"],[38,53,15,51],[38,54,15,52,"children"],[38,62,15,60],[38,63,15,61],[38,66,15,64,"children"],[38,74,15,72],[39,2,16,0],[39,3,16,1],[40,2,17,0],[40,8,17,6,"hasValidReactChildren"],[40,29,17,27],[40,32,17,30,"children"],[40,40,17,38],[40,44,17,42,"Array"],[40,49,17,47],[40,50,17,48,"isArray"],[40,57,17,55],[40,58,17,56,"children"],[40,66,17,64],[40,67,17,65],[40,71,17,69,"children"],[40,79,17,77],[40,80,17,78,"every"],[40,85,17,83],[40,86,17,84,"isValidElement"],[40,92,17,98],[40,93,17,98,"isValidElement"],[40,107,17,98],[40,108,17,99],[41,2,18,0],[41,8,18,6,"getAsArray"],[41,18,18,16],[41,21,18,19,"data"],[41,25,18,23],[41,29,18,27,"Array"],[41,34,18,32],[41,35,18,33,"isArray"],[41,42,18,40],[41,43,18,41,"data"],[41,47,18,45],[41,48,18,46],[41,51,18,49,"data"],[41,55,18,53],[41,58,18,56],[41,59,18,57,"data"],[41,63,18,61],[41,64,18,62],[42,2,19,0],[42,8,19,6,"mergeProps"],[42,18,19,16],[42,21,19,19,"mergeProps"],[42,22,19,20,"source"],[42,28,19,26],[42,30,19,28,"target"],[42,36,19,34],[42,41,19,39],[43,4,20,2],[43,10,20,8,"newTarget"],[43,19,20,17],[43,22,20,17,"Object"],[43,28,20,17],[43,29,20,17,"assign"],[43,35,20,17],[43,40,21,7,"target"],[43,46,21,13],[43,47,22,3],[44,4,23,2,"newTarget"],[44,13,23,11],[44,14,23,12,"props"],[44,19,23,17],[44,22,23,20,"Object"],[44,28,23,26],[44,29,23,27,"assign"],[44,35,23,33],[44,36,23,34,"source"],[44,42,23,40],[44,43,23,41,"props"],[44,48,23,46],[44,50,23,48,"target"],[44,56,23,54],[44,57,23,55,"props"],[44,62,23,60],[44,63,23,61],[45,4,24,2],[45,11,24,9,"newTarget"],[45,20,24,18],[46,2,25,0],[46,3,25,1],[47,2,26,7],[47,8,26,13,"nodesToString"],[47,21,26,26],[47,24,26,29,"nodesToString"],[47,25,26,30,"children"],[47,33,26,38],[47,35,26,40,"i18nOptions"],[47,46,26,51],[47,48,26,53,"i18n"],[47,52,26,57],[47,54,26,59,"i18nKey"],[47,61,26,66],[47,66,26,71],[48,4,27,2],[48,8,27,6],[48,9,27,7,"children"],[48,17,27,15],[48,19,27,17],[48,26,27,24],[48,28,27,26],[49,4,28,2],[49,8,28,6,"stringNode"],[49,18,28,16],[49,21,28,19],[49,23,28,21],[50,4,29,2],[50,10,29,8,"childrenArray"],[50,23,29,21],[50,26,29,24,"getAsArray"],[50,36,29,34],[50,37,29,35,"children"],[50,45,29,43],[50,46,29,44],[51,4,30,2],[51,10,30,8,"keepArray"],[51,19,30,17],[51,22,30,20,"i18nOptions"],[51,33,30,31],[51,35,30,33,"transSupportBasicHtmlNodes"],[51,61,30,59],[51,64,30,62,"i18nOptions"],[51,75,30,73],[51,76,30,74,"transKeepBasicHtmlNodesFor"],[51,102,30,100],[51,106,30,104],[51,108,30,106],[51,111,30,109],[51,113,30,111],[52,4,31,2,"childrenArray"],[52,17,31,15],[52,18,31,16,"forEach"],[52,25,31,23],[52,26,31,24],[52,27,31,25,"child"],[52,32,31,30],[52,34,31,32,"childIndex"],[52,44,31,42],[52,49,31,47],[53,6,32,4],[53,10,32,8],[53,14,32,8,"isString"],[53,22,32,16],[53,23,32,16,"isString"],[53,31,32,16],[53,33,32,17,"child"],[53,38,32,22],[53,39,32,23],[53,41,32,25],[54,8,33,6,"stringNode"],[54,18,33,16],[54,22,33,20],[54,25,33,23,"child"],[54,30,33,28],[54,32,33,30],[55,8,34,6],[56,6,35,4],[57,6,36,4],[57,23,36,8],[57,27,36,8,"isValidElement"],[57,33,36,22],[57,34,36,22,"isValidElement"],[57,48,36,22],[57,50,36,23,"child"],[57,55,36,28],[57,56,36,29],[57,58,36,31],[58,8,37,6],[58,14,37,12],[59,10,38,8,"props"],[59,15,38,13],[60,10,39,8,"type"],[61,8,40,6],[61,9,40,7],[61,12,40,10,"child"],[61,17,40,15],[62,8,41,6],[62,14,41,12,"childPropsCount"],[62,29,41,27],[62,32,41,30,"Object"],[62,38,41,36],[62,39,41,37,"keys"],[62,43,41,41],[62,44,41,42,"props"],[62,49,41,47],[62,50,41,48],[62,51,41,49,"length"],[62,57,41,55],[63,8,42,6],[63,14,42,12,"shouldKeepChild"],[63,29,42,27],[63,32,42,30,"keepArray"],[63,41,42,39],[63,42,42,40,"indexOf"],[63,49,42,47],[63,50,42,48,"type"],[63,54,42,52],[63,55,42,53],[63,58,42,56],[63,59,42,57],[63,60,42,58],[64,8,43,6],[64,14,43,12,"childChildren"],[64,27,43,25],[64,30,43,28,"props"],[64,35,43,33],[64,36,43,34,"children"],[64,44,43,42],[65,8,44,6],[65,12,44,10],[65,13,44,11,"childChildren"],[65,26,44,24],[65,30,44,28,"shouldKeepChild"],[65,45,44,43],[65,49,44,47],[65,50,44,48,"childPropsCount"],[65,65,44,63],[65,67,44,65],[66,10,45,8,"stringNode"],[66,20,45,18],[66,24,45,22],[66,28,45,26,"type"],[66,32,45,30],[66,36,45,34],[67,10,46,8],[68,8,47,6],[69,8,48,6],[69,12,48,10],[69,13,48,11,"childChildren"],[69,26,48,24],[69,31,48,29],[69,32,48,30,"shouldKeepChild"],[69,47,48,45],[69,51,48,49,"childPropsCount"],[69,66,48,64],[69,67,48,65],[69,71,48,69,"props"],[69,76,48,74],[69,77,48,75,"i18nIsDynamicList"],[69,94,48,92],[69,96,48,94],[70,10,49,8,"stringNode"],[70,20,49,18],[70,24,49,22],[70,28,49,26,"childIndex"],[70,38,49,36],[70,44,49,42,"childIndex"],[70,54,49,52],[70,57,49,55],[71,10,50,8],[72,8,51,6],[73,8,52,6],[73,12,52,10,"shouldKeepChild"],[73,27,52,25],[73,31,52,29,"childPropsCount"],[73,46,52,44],[73,51,52,49],[73,52,52,50],[73,56,52,54],[73,60,52,54,"isString"],[73,68,52,62],[73,69,52,62,"isString"],[73,77,52,62],[73,79,52,63,"childChildren"],[73,92,52,76],[73,93,52,77],[73,95,52,79],[74,10,53,8,"stringNode"],[74,20,53,18],[74,24,53,22],[74,28,53,26,"type"],[74,32,53,30],[74,36,53,34,"childChildren"],[74,49,53,47],[74,54,53,52,"type"],[74,58,53,56],[74,61,53,59],[75,10,54,8],[76,8,55,6],[77,8,56,6],[77,14,56,12,"content"],[77,21,56,19],[77,24,56,22,"nodesToString"],[77,37,56,35],[77,38,56,36,"childChildren"],[77,51,56,49],[77,53,56,51,"i18nOptions"],[77,64,56,62],[77,66,56,64,"i18n"],[77,70,56,68],[77,72,56,70,"i18nKey"],[77,79,56,77],[77,80,56,78],[78,8,57,6,"stringNode"],[78,18,57,16],[78,22,57,20],[78,26,57,24,"childIndex"],[78,36,57,34],[78,40,57,38,"content"],[78,47,57,45],[78,52,57,50,"childIndex"],[78,62,57,60],[78,65,57,63],[79,8,58,6],[80,6,59,4],[81,6,60,4],[81,10,60,8,"child"],[81,15,60,13],[81,20,60,18],[81,24,60,22],[81,26,60,24],[82,8,61,6],[82,12,61,6,"warn"],[82,20,61,10],[82,21,61,10,"warn"],[82,25,61,10],[82,27,61,11,"i18n"],[82,31,61,15],[82,33,61,17],[82,51,61,35],[82,53,61,37],[82,86,61,70],[82,88,61,72],[83,10,62,8,"i18nKey"],[84,8,63,6],[84,9,63,7],[84,10,63,8],[85,8,64,6],[86,6,65,4],[87,6,66,4],[87,10,66,8],[87,14,66,8,"isObject"],[87,22,66,16],[87,23,66,16,"isObject"],[87,31,66,16],[87,33,66,17,"child"],[87,38,66,22],[87,39,66,23],[87,41,66,25],[88,8,67,6],[88,14,67,12],[89,12,68,8,"format"],[90,10,70,6],[90,11,70,7],[90,14,70,10,"child"],[90,19,70,15],[91,10,69,11,"clone"],[91,15,69,16],[91,22,69,16,"_objectWithoutPropertiesLoose"],[91,51,69,16],[91,52,69,16,"default"],[91,59,69,16],[91,61,70,10,"child"],[91,66,70,15],[91,68,70,15,"_excluded"],[91,77,70,15],[92,8,71,6],[92,14,71,12,"keys"],[92,18,71,16],[92,21,71,19,"Object"],[92,27,71,25],[92,28,71,26,"keys"],[92,32,71,30],[92,33,71,31,"clone"],[92,38,71,36],[92,39,71,37],[93,8,72,6],[93,12,72,10,"keys"],[93,16,72,14],[93,17,72,15,"length"],[93,23,72,21],[93,28,72,26],[93,29,72,27],[93,31,72,29],[94,10,73,8],[94,16,73,14,"value"],[94,21,73,19],[94,24,73,22,"format"],[94,30,73,28],[94,33,73,31],[94,36,73,34,"keys"],[94,40,73,38],[94,41,73,39],[94,42,73,40],[94,43,73,41],[94,48,73,46,"format"],[94,54,73,52],[94,56,73,54],[94,59,73,57,"keys"],[94,63,73,61],[94,64,73,62],[94,65,73,63],[94,66,73,64],[95,10,74,8,"stringNode"],[95,20,74,18],[95,24,74,22],[95,29,74,27,"value"],[95,34,74,32],[95,38,74,36],[96,10,75,8],[97,8,76,6],[98,8,77,6],[98,12,77,6,"warn"],[98,20,77,10],[98,21,77,10,"warn"],[98,25,77,10],[98,27,77,11,"i18n"],[98,31,77,15],[98,33,77,17],[98,52,77,36],[98,54,77,38],[98,142,77,126],[98,144,77,128],[99,10,78,8,"i18nKey"],[99,17,78,15],[100,10,79,8,"child"],[101,8,80,6],[101,9,80,7],[101,10,80,8],[102,8,81,6],[103,6,82,4],[104,6,83,4],[104,10,83,4,"warn"],[104,18,83,8],[104,19,83,8,"warn"],[104,23,83,8],[104,25,83,9,"i18n"],[104,29,83,13],[104,31,83,15],[104,50,83,34],[104,52,83,36],[104,156,83,140],[104,158,83,142],[105,8,84,6,"i18nKey"],[105,15,84,13],[106,8,85,6,"child"],[107,6,86,4],[107,7,86,5],[107,8,86,6],[108,4,87,2],[108,5,87,3],[108,6,87,4],[109,4,88,2],[109,11,88,9,"stringNode"],[109,21,88,19],[110,2,89,0],[110,3,89,1],[111,2,90,0],[111,8,90,6,"renderNodes"],[111,19,90,17],[111,22,90,20,"renderNodes"],[111,23,90,21,"children"],[111,31,90,29],[111,33,90,31,"knownComponentsMap"],[111,51,90,49],[111,53,90,51,"targetString"],[111,65,90,63],[111,67,90,65,"i18n"],[111,71,90,69],[111,73,90,71,"i18nOptions"],[111,84,90,82],[111,86,90,84,"combinedTOpts"],[111,99,90,97],[111,101,90,99,"shouldUnescape"],[111,115,90,113],[111,120,90,118],[112,4,91,2],[112,8,91,6,"targetString"],[112,20,91,18],[112,25,91,23],[112,27,91,25],[112,29,91,27],[112,36,91,34],[112,38,91,36],[113,4,92,2],[113,10,92,8,"keepArray"],[113,19,92,17],[113,22,92,20,"i18nOptions"],[113,33,92,31],[113,34,92,32,"transKeepBasicHtmlNodesFor"],[113,60,92,58],[113,64,92,62],[113,66,92,64],[114,4,93,2],[114,10,93,8,"emptyChildrenButNeedsHandling"],[114,39,93,37],[114,42,93,40,"targetString"],[114,54,93,52],[114,58,93,56],[114,62,93,60,"RegExp"],[114,68,93,66],[114,69,93,67,"keepArray"],[114,78,93,76],[114,79,93,77,"map"],[114,82,93,80],[114,83,93,81,"keep"],[114,87,93,85],[114,91,93,89],[114,95,93,93,"keep"],[114,99,93,97],[114,101,93,99],[114,102,93,100],[114,103,93,101,"join"],[114,107,93,105],[114,108,93,106],[114,111,93,109],[114,112,93,110],[114,113,93,111],[114,114,93,112,"test"],[114,118,93,116],[114,119,93,117,"targetString"],[114,131,93,129],[114,132,93,130],[115,4,94,2],[115,8,94,6],[115,9,94,7,"children"],[115,17,94,15],[115,21,94,19],[115,22,94,20,"knownComponentsMap"],[115,40,94,38],[115,44,94,42],[115,45,94,43,"emptyChildrenButNeedsHandling"],[115,74,94,72],[115,78,94,76],[115,79,94,77,"shouldUnescape"],[115,93,94,91],[115,95,94,93],[115,102,94,100],[115,103,94,101,"targetString"],[115,115,94,113],[115,116,94,114],[116,4,95,2],[116,10,95,8,"data"],[116,14,95,12],[116,17,95,15,"knownComponentsMap"],[116,35,95,33],[116,39,95,37],[116,40,95,38],[116,41,95,39],[117,4,96,2],[117,10,96,8,"getData"],[117,17,96,15],[117,20,96,18,"childs"],[117,26,96,24],[117,30,96,28],[118,6,97,4],[118,12,97,10,"childrenArray"],[118,25,97,23],[118,28,97,26,"getAsArray"],[118,38,97,36],[118,39,97,37,"childs"],[118,45,97,43],[118,46,97,44],[119,6,98,4,"childrenArray"],[119,19,98,17],[119,20,98,18,"forEach"],[119,27,98,25],[119,28,98,26,"child"],[119,33,98,31],[119,37,98,35],[120,8,99,6],[120,12,99,10],[120,16,99,10,"isString"],[120,24,99,18],[120,25,99,18,"isString"],[120,33,99,18],[120,35,99,19,"child"],[120,40,99,24],[120,41,99,25],[120,43,99,27],[121,8,100,6],[121,12,100,10,"hasChildren"],[121,23,100,21],[121,24,100,22,"child"],[121,29,100,27],[121,30,100,28],[121,32,100,30,"getData"],[121,39,100,37],[121,40,100,38,"getChildren"],[121,51,100,49],[121,52,100,50,"child"],[121,57,100,55],[121,58,100,56],[121,59,100,57],[121,60,100,58],[121,65,100,63],[121,69,100,67],[121,73,100,67,"isObject"],[121,81,100,75],[121,82,100,75,"isObject"],[121,90,100,75],[121,92,100,76,"child"],[121,97,100,81],[121,98,100,82],[121,102,100,86],[121,117,100,87],[121,121,100,87,"isValidElement"],[121,127,100,101],[121,128,100,101,"isValidElement"],[121,142,100,101],[121,144,100,102,"child"],[121,149,100,107],[121,150,100,108],[121,152,100,110,"Object"],[121,158,100,116],[121,159,100,117,"assign"],[121,165,100,123],[121,166,100,124,"data"],[121,170,100,128],[121,172,100,130,"child"],[121,177,100,135],[121,178,100,136],[122,6,101,4],[122,7,101,5],[122,8,101,6],[123,4,102,2],[123,5,102,3],[124,4,103,2,"getData"],[124,11,103,9],[124,12,103,10,"children"],[124,20,103,18],[124,21,103,19],[125,4,104,2],[125,10,104,8,"ast"],[125,13,104,11],[125,16,104,14,"HTML"],[125,20,104,18],[125,21,104,18,"default"],[125,28,104,18],[125,29,104,19,"parse"],[125,34,104,24],[125,35,104,25],[125,41,104,31,"targetString"],[125,53,104,43],[125,59,104,49],[125,60,104,50],[126,4,105,2],[126,10,105,8,"opts"],[126,14,105,12],[126,17,105,12,"Object"],[126,23,105,12],[126,24,105,12,"assign"],[126,30,105,12],[126,35,106,7,"data"],[126,39,106,11],[126,41,107,7,"combinedTOpts"],[126,54,107,20],[126,55,108,3],[127,4,109,2],[127,10,109,8,"renderInner"],[127,21,109,19],[127,24,109,22,"renderInner"],[127,25,109,23,"child"],[127,30,109,28],[127,32,109,30,"node"],[127,36,109,34],[127,38,109,36,"rootReactNode"],[127,51,109,49],[127,56,109,54],[128,6,110,4],[128,12,110,10,"childs"],[128,18,110,16],[128,21,110,19,"getChildren"],[128,32,110,30],[128,33,110,31,"child"],[128,38,110,36],[128,39,110,37],[129,6,111,4],[129,12,111,10,"mappedChildren"],[129,26,111,24],[129,29,111,27,"mapAST"],[129,35,111,33],[129,36,111,34,"childs"],[129,42,111,40],[129,44,111,42,"node"],[129,48,111,46],[129,49,111,47,"children"],[129,57,111,55],[129,59,111,57,"rootReactNode"],[129,72,111,70],[129,73,111,71],[130,6,112,4],[130,13,112,11,"hasValidReactChildren"],[130,34,112,32],[130,35,112,33,"childs"],[130,41,112,39],[130,42,112,40],[130,46,112,44,"mappedChildren"],[130,60,112,58],[130,61,112,59,"length"],[130,67,112,65],[130,72,112,70],[130,73,112,71],[130,77,112,75,"child"],[130,82,112,80],[130,83,112,81,"props"],[130,88,112,86],[130,90,112,88,"i18nIsDynamicList"],[130,107,112,105],[130,110,112,108,"childs"],[130,116,112,114],[130,119,112,117,"mappedChildren"],[130,133,112,131],[131,4,113,2],[131,5,113,3],[132,4,114,2],[132,10,114,8,"pushTranslatedJSX"],[132,27,114,25],[132,30,114,28,"pushTranslatedJSX"],[132,31,114,29,"child"],[132,36,114,34],[132,38,114,36,"inner"],[132,43,114,41],[132,45,114,43,"mem"],[132,48,114,46],[132,50,114,48,"i"],[132,51,114,49],[132,53,114,51,"isVoid"],[132,59,114,57],[132,64,114,62],[133,6,115,4],[133,10,115,8,"child"],[133,15,115,13],[133,16,115,14,"dummy"],[133,21,115,19],[133,23,115,21],[134,8,116,6,"child"],[134,13,116,11],[134,14,116,12,"children"],[134,22,116,20],[134,25,116,23,"inner"],[134,30,116,28],[135,8,117,6,"mem"],[135,11,117,9],[135,12,117,10,"push"],[135,16,117,14],[135,30,117,15],[135,34,117,15,"cloneElement"],[135,40,117,27],[135,41,117,27,"cloneElement"],[135,53,117,27],[135,55,117,28,"child"],[135,60,117,33],[135,62,117,35],[136,10,118,8,"key"],[136,13,118,11],[136,15,118,13,"i"],[137,8,119,6],[137,9,119,7],[137,11,119,9,"isVoid"],[137,17,119,15],[137,20,119,18,"undefined"],[137,29,119,27],[137,32,119,30,"inner"],[137,37,119,35],[137,38,119,36],[137,39,119,37],[138,6,120,4],[138,7,120,5],[138,13,120,11],[139,8,121,6,"mem"],[139,11,121,9],[139,12,121,10,"push"],[139,16,121,14],[139,17,121,15],[139,20,121,18,"Children"],[139,26,121,26],[139,27,121,26,"Children"],[139,35,121,26],[139,36,121,27,"map"],[139,39,121,30],[139,40,121,31],[139,41,121,32,"child"],[139,46,121,37],[139,47,121,38],[139,49,121,40,"c"],[139,50,121,41],[139,54,121,45],[140,10,122,8],[140,16,122,14,"props"],[140,21,122,19],[140,24,122,19,"Object"],[140,30,122,19],[140,31,122,19,"assign"],[140,37,122,19],[140,42,123,13,"c"],[140,43,123,14],[140,44,123,15,"props"],[140,49,123,20],[140,50,124,9],[141,10,125,8],[141,17,125,15,"props"],[141,22,125,20],[141,23,125,21,"i18nIsDynamicList"],[141,40,125,38],[142,10,126,8],[142,30,126,15],[142,34,126,15,"createElement"],[142,40,126,28],[142,41,126,28,"createElement"],[142,54,126,28],[142,56,126,29,"c"],[142,57,126,30],[142,58,126,31,"type"],[142,62,126,35],[142,64,126,35,"Object"],[142,70,126,35],[142,71,126,35,"assign"],[142,77,126,35],[142,82,127,13,"props"],[142,87,127,18],[143,12,128,10,"key"],[143,15,128,13],[143,17,128,15,"i"],[143,18,128,16],[144,12,129,10,"ref"],[144,15,129,13],[144,17,129,15,"c"],[144,18,129,16],[144,19,129,17,"props"],[144,24,129,22],[144,25,129,23,"ref"],[144,28,129,26],[144,32,129,30,"c"],[144,33,129,31],[144,34,129,32,"ref"],[145,10,129,35],[145,14,130,11,"isVoid"],[145,20,130,17],[145,23,130,20],[145,27,130,24],[145,30,130,27,"inner"],[145,35,130,32],[145,36,130,33],[146,8,131,6],[146,9,131,7],[146,10,131,8],[146,11,131,9],[147,6,132,4],[148,4,133,2],[148,5,133,3],[149,4,134,2],[149,10,134,8,"mapAST"],[149,16,134,14],[149,19,134,17,"mapAST"],[149,20,134,18,"reactNode"],[149,29,134,27],[149,31,134,29,"astNode"],[149,38,134,36],[149,40,134,38,"rootReactNode"],[149,53,134,51],[149,58,134,56],[150,6,135,4],[150,12,135,10,"reactNodes"],[150,22,135,20],[150,25,135,23,"getAsArray"],[150,35,135,33],[150,36,135,34,"reactNode"],[150,45,135,43],[150,46,135,44],[151,6,136,4],[151,12,136,10,"astNodes"],[151,20,136,18],[151,23,136,21,"getAsArray"],[151,33,136,31],[151,34,136,32,"astNode"],[151,41,136,39],[151,42,136,40],[152,6,137,4],[152,13,137,11,"astNodes"],[152,21,137,19],[152,22,137,20,"reduce"],[152,28,137,26],[152,29,137,27],[152,30,137,28,"mem"],[152,33,137,31],[152,35,137,33,"node"],[152,39,137,37],[152,41,137,39,"i"],[152,42,137,40],[152,47,137,45],[153,8,138,6],[153,14,138,12,"translationContent"],[153,32,138,30],[153,35,138,33,"node"],[153,39,138,37],[153,40,138,38,"children"],[153,48,138,46],[153,51,138,49],[153,52,138,50],[153,53,138,51],[153,55,138,53,"content"],[153,62,138,60],[153,66,138,64,"i18n"],[153,70,138,68],[153,71,138,69,"services"],[153,79,138,77],[153,80,138,78,"interpolator"],[153,92,138,90],[153,93,138,91,"interpolate"],[153,104,138,102],[153,105,138,103,"node"],[153,109,138,107],[153,110,138,108,"children"],[153,118,138,116],[153,119,138,117],[153,120,138,118],[153,121,138,119],[153,122,138,120,"content"],[153,129,138,127],[153,131,138,129,"opts"],[153,135,138,133],[153,137,138,135,"i18n"],[153,141,138,139],[153,142,138,140,"language"],[153,150,138,148],[153,151,138,149],[154,8,139,6],[154,12,139,10,"node"],[154,16,139,14],[154,17,139,15,"type"],[154,21,139,19],[154,26,139,24],[154,31,139,29],[154,33,139,31],[155,10,140,8],[155,14,140,12,"tmp"],[155,17,140,15],[155,20,140,18,"reactNodes"],[155,30,140,28],[155,31,140,29,"parseInt"],[155,39,140,37],[155,40,140,38,"node"],[155,44,140,42],[155,45,140,43,"name"],[155,49,140,47],[155,51,140,49],[155,53,140,51],[155,54,140,52],[155,55,140,53],[156,10,141,8],[156,14,141,12],[156,15,141,13,"tmp"],[156,18,141,16],[156,22,141,20,"knownComponentsMap"],[156,40,141,38],[156,42,141,40,"tmp"],[156,45,141,43],[156,48,141,46,"knownComponentsMap"],[156,66,141,64],[156,67,141,65,"node"],[156,71,141,69],[156,72,141,70,"name"],[156,76,141,74],[156,77,141,75],[157,10,142,8],[157,14,142,12,"rootReactNode"],[157,27,142,25],[157,28,142,26,"length"],[157,34,142,32],[157,39,142,37],[157,40,142,38],[157,44,142,42],[157,45,142,43,"tmp"],[157,48,142,46],[157,50,142,48,"tmp"],[157,53,142,51],[157,56,142,54,"rootReactNode"],[157,69,142,67],[157,70,142,68],[157,71,142,69],[157,72,142,70],[157,73,142,71,"node"],[157,77,142,75],[157,78,142,76,"name"],[157,82,142,80],[157,83,142,81],[158,10,143,8],[158,14,143,12],[158,15,143,13,"tmp"],[158,18,143,16],[158,20,143,18,"tmp"],[158,23,143,21],[158,26,143,24],[158,27,143,25],[158,28,143,26],[159,10,144,8],[159,16,144,14,"child"],[159,21,144,19],[159,24,144,22,"Object"],[159,30,144,28],[159,31,144,29,"keys"],[159,35,144,33],[159,36,144,34,"node"],[159,40,144,38],[159,41,144,39,"attrs"],[159,46,144,44],[159,47,144,45],[159,48,144,46,"length"],[159,54,144,52],[159,59,144,57],[159,60,144,58],[159,63,144,61,"mergeProps"],[159,73,144,71],[159,74,144,72],[160,12,145,10,"props"],[160,17,145,15],[160,19,145,17,"node"],[160,23,145,21],[160,24,145,22,"attrs"],[161,10,146,8],[161,11,146,9],[161,13,146,11,"tmp"],[161,16,146,14],[161,17,146,15],[161,20,146,18,"tmp"],[161,23,146,21],[162,10,147,8],[162,16,147,14,"isElement"],[162,25,147,23],[162,41,147,26],[162,45,147,26,"isValidElement"],[162,51,147,40],[162,52,147,40,"isValidElement"],[162,66,147,40],[162,68,147,41,"child"],[162,73,147,46],[162,74,147,47],[163,10,148,8],[163,16,148,14,"isValidTranslationWithChildren"],[163,46,148,44],[163,49,148,47,"isElement"],[163,58,148,56],[163,62,148,60,"hasChildren"],[163,73,148,71],[163,74,148,72,"node"],[163,78,148,76],[163,80,148,78],[163,84,148,82],[163,85,148,83],[163,89,148,87],[163,90,148,88,"node"],[163,94,148,92],[163,95,148,93,"voidElement"],[163,106,148,104],[164,10,149,8],[164,16,149,14,"isEmptyTransWithHTML"],[164,36,149,34],[164,39,149,37,"emptyChildrenButNeedsHandling"],[164,68,149,66],[164,72,149,70],[164,76,149,70,"isObject"],[164,84,149,78],[164,85,149,78,"isObject"],[164,93,149,78],[164,95,149,79,"child"],[164,100,149,84],[164,101,149,85],[164,105,149,89,"child"],[164,110,149,94],[164,111,149,95,"dummy"],[164,116,149,100],[164,120,149,104],[164,121,149,105,"isElement"],[164,130,149,114],[165,10,150,8],[165,16,150,14,"isKnownComponent"],[165,32,150,30],[165,35,150,33],[165,39,150,33,"isObject"],[165,47,150,41],[165,48,150,41,"isObject"],[165,56,150,41],[165,58,150,42,"knownComponentsMap"],[165,76,150,60],[165,77,150,61],[165,81,150,65,"Object"],[165,87,150,71],[165,88,150,72,"hasOwnProperty"],[165,102,150,86],[165,103,150,87,"call"],[165,107,150,91],[165,108,150,92,"knownComponentsMap"],[165,126,150,110],[165,128,150,112,"node"],[165,132,150,116],[165,133,150,117,"name"],[165,137,150,121],[165,138,150,122],[166,10,151,8],[166,14,151,12],[166,18,151,12,"isString"],[166,26,151,20],[166,27,151,20,"isString"],[166,35,151,20],[166,37,151,21,"child"],[166,42,151,26],[166,43,151,27],[166,45,151,29],[167,12,152,10],[167,18,152,16,"value"],[167,23,152,21],[167,26,152,24,"i18n"],[167,30,152,28],[167,31,152,29,"services"],[167,39,152,37],[167,40,152,38,"interpolator"],[167,52,152,50],[167,53,152,51,"interpolate"],[167,64,152,62],[167,65,152,63,"child"],[167,70,152,68],[167,72,152,70,"opts"],[167,76,152,74],[167,78,152,76,"i18n"],[167,82,152,80],[167,83,152,81,"language"],[167,91,152,89],[167,92,152,90],[168,12,153,10,"mem"],[168,15,153,13],[168,16,153,14,"push"],[168,20,153,18],[168,21,153,19,"value"],[168,26,153,24],[168,27,153,25],[169,10,154,8],[169,11,154,9],[169,17,154,15],[169,21,154,19,"hasChildren"],[169,32,154,30],[169,33,154,31,"child"],[169,38,154,36],[169,39,154,37],[169,43,154,41,"isValidTranslationWithChildren"],[169,73,154,71],[169,75,154,73],[170,12,155,10],[170,18,155,16,"inner"],[170,23,155,21],[170,26,155,24,"renderInner"],[170,37,155,35],[170,38,155,36,"child"],[170,43,155,41],[170,45,155,43,"node"],[170,49,155,47],[170,51,155,49,"rootReactNode"],[170,64,155,62],[170,65,155,63],[171,12,156,10,"pushTranslatedJSX"],[171,29,156,27],[171,30,156,28,"child"],[171,35,156,33],[171,37,156,35,"inner"],[171,42,156,40],[171,44,156,42,"mem"],[171,47,156,45],[171,49,156,47,"i"],[171,50,156,48],[171,51,156,49],[172,10,157,8],[172,11,157,9],[172,17,157,15],[172,21,157,19,"isEmptyTransWithHTML"],[172,41,157,39],[172,43,157,41],[173,12,158,10],[173,18,158,16,"inner"],[173,23,158,21],[173,26,158,24,"mapAST"],[173,32,158,30],[173,33,158,31,"reactNodes"],[173,43,158,41],[173,45,158,43,"node"],[173,49,158,47],[173,50,158,48,"children"],[173,58,158,56],[173,60,158,58,"rootReactNode"],[173,73,158,71],[173,74,158,72],[174,12,159,10,"pushTranslatedJSX"],[174,29,159,27],[174,30,159,28,"child"],[174,35,159,33],[174,37,159,35,"inner"],[174,42,159,40],[174,44,159,42,"mem"],[174,47,159,45],[174,49,159,47,"i"],[174,50,159,48],[174,51,159,49],[175,10,160,8],[175,11,160,9],[175,17,160,15],[175,21,160,19,"Number"],[175,27,160,25],[175,28,160,26,"isNaN"],[175,33,160,31],[175,34,160,32,"parseFloat"],[175,44,160,42],[175,45,160,43,"node"],[175,49,160,47],[175,50,160,48,"name"],[175,54,160,52],[175,55,160,53],[175,56,160,54],[175,58,160,56],[176,12,161,10],[176,16,161,14,"isKnownComponent"],[176,32,161,30],[176,34,161,32],[177,14,162,12],[177,20,162,18,"inner"],[177,25,162,23],[177,28,162,26,"renderInner"],[177,39,162,37],[177,40,162,38,"child"],[177,45,162,43],[177,47,162,45,"node"],[177,51,162,49],[177,53,162,51,"rootReactNode"],[177,66,162,64],[177,67,162,65],[178,14,163,12,"pushTranslatedJSX"],[178,31,163,29],[178,32,163,30,"child"],[178,37,163,35],[178,39,163,37,"inner"],[178,44,163,42],[178,46,163,44,"mem"],[178,49,163,47],[178,51,163,49,"i"],[178,52,163,50],[178,54,163,52,"node"],[178,58,163,56],[178,59,163,57,"voidElement"],[178,70,163,68],[178,71,163,69],[179,12,164,10],[179,13,164,11],[179,19,164,17],[179,23,164,21,"i18nOptions"],[179,34,164,32],[179,35,164,33,"transSupportBasicHtmlNodes"],[179,61,164,59],[179,65,164,63,"keepArray"],[179,74,164,72],[179,75,164,73,"indexOf"],[179,82,164,80],[179,83,164,81,"node"],[179,87,164,85],[179,88,164,86,"name"],[179,92,164,90],[179,93,164,91],[179,96,164,94],[179,97,164,95],[179,98,164,96],[179,100,164,98],[180,14,165,12],[180,18,165,16,"node"],[180,22,165,20],[180,23,165,21,"voidElement"],[180,34,165,32],[180,36,165,34],[181,16,166,14,"mem"],[181,19,166,17],[181,20,166,18,"push"],[181,24,166,22],[181,38,166,23],[181,42,166,23,"createElement"],[181,48,166,36],[181,49,166,36,"createElement"],[181,62,166,36],[181,64,166,37,"node"],[181,68,166,41],[181,69,166,42,"name"],[181,73,166,46],[181,75,166,48],[182,18,167,16,"key"],[182,21,167,19],[182,23,167,21],[182,26,167,24,"node"],[182,30,167,28],[182,31,167,29,"name"],[182,35,167,33],[182,39,167,37,"i"],[182,40,167,38],[183,16,168,14],[183,17,168,15],[183,18,168,16],[183,19,168,17],[184,14,169,12],[184,15,169,13],[184,21,169,19],[185,16,170,14],[185,22,170,20,"inner"],[185,27,170,25],[185,30,170,28,"mapAST"],[185,36,170,34],[185,37,170,35,"reactNodes"],[185,47,170,45],[185,49,170,47,"node"],[185,53,170,51],[185,54,170,52,"children"],[185,62,170,60],[185,64,170,62,"rootReactNode"],[185,77,170,75],[185,78,170,76],[186,16,171,14,"mem"],[186,19,171,17],[186,20,171,18,"push"],[186,24,171,22],[186,38,171,23],[186,42,171,23,"createElement"],[186,48,171,36],[186,49,171,36,"createElement"],[186,62,171,36],[186,64,171,37,"node"],[186,68,171,41],[186,69,171,42,"name"],[186,73,171,46],[186,75,171,48],[187,18,172,16,"key"],[187,21,172,19],[187,23,172,21],[187,26,172,24,"node"],[187,30,172,28],[187,31,172,29,"name"],[187,35,172,33],[187,39,172,37,"i"],[187,40,172,38],[188,16,173,14],[188,17,173,15],[188,19,173,17,"inner"],[188,24,173,22],[188,25,173,23],[188,26,173,24],[189,14,174,12],[190,12,175,10],[190,13,175,11],[190,19,175,17],[190,23,175,21,"node"],[190,27,175,25],[190,28,175,26,"voidElement"],[190,39,175,37],[190,41,175,39],[191,14,176,12,"mem"],[191,17,176,15],[191,18,176,16,"push"],[191,22,176,20],[191,23,176,21],[191,27,176,25,"node"],[191,31,176,29],[191,32,176,30,"name"],[191,36,176,34],[191,41,176,39],[191,42,176,40],[192,12,177,10],[192,13,177,11],[192,19,177,17],[193,14,178,12],[193,20,178,18,"inner"],[193,25,178,23],[193,28,178,26,"mapAST"],[193,34,178,32],[193,35,178,33,"reactNodes"],[193,45,178,43],[193,47,178,45,"node"],[193,51,178,49],[193,52,178,50,"children"],[193,60,178,58],[193,62,178,60,"rootReactNode"],[193,75,178,73],[193,76,178,74],[194,14,179,12,"mem"],[194,17,179,15],[194,18,179,16,"push"],[194,22,179,20],[194,23,179,21],[194,27,179,25,"node"],[194,31,179,29],[194,32,179,30,"name"],[194,36,179,34],[194,40,179,38,"inner"],[194,45,179,43],[194,50,179,48,"node"],[194,54,179,52],[194,55,179,53,"name"],[194,59,179,57],[194,62,179,60],[194,63,179,61],[195,12,180,10],[196,10,181,8],[196,11,181,9],[196,17,181,15],[196,21,181,19],[196,25,181,19,"isObject"],[196,33,181,27],[196,34,181,27,"isObject"],[196,42,181,27],[196,44,181,28,"child"],[196,49,181,33],[196,50,181,34],[196,54,181,38],[196,55,181,39,"isElement"],[196,64,181,48],[196,66,181,50],[197,12,182,10],[197,18,182,16,"content"],[197,25,182,23],[197,28,182,26,"node"],[197,32,182,30],[197,33,182,31,"children"],[197,41,182,39],[197,42,182,40],[197,43,182,41],[197,44,182,42],[197,47,182,45,"translationContent"],[197,65,182,63],[197,68,182,66],[197,72,182,70],[198,12,183,10],[198,16,183,14,"content"],[198,23,183,21],[198,25,183,23,"mem"],[198,28,183,26],[198,29,183,27,"push"],[198,33,183,31],[198,34,183,32,"content"],[198,41,183,39],[198,42,183,40],[199,10,184,8],[199,11,184,9],[199,17,184,15],[200,12,185,10,"pushTranslatedJSX"],[200,29,185,27],[200,30,185,28,"child"],[200,35,185,33],[200,37,185,35,"translationContent"],[200,55,185,53],[200,57,185,55,"mem"],[200,60,185,58],[200,62,185,60,"i"],[200,63,185,61],[200,65,185,63,"node"],[200,69,185,67],[200,70,185,68,"children"],[200,78,185,76],[200,79,185,77,"length"],[200,85,185,83],[200,90,185,88],[200,91,185,89],[200,95,185,93],[200,96,185,94,"translationContent"],[200,114,185,112],[200,115,185,113],[201,10,186,8],[202,8,187,6],[202,9,187,7],[202,15,187,13],[202,19,187,17,"node"],[202,23,187,21],[202,24,187,22,"type"],[202,28,187,26],[202,33,187,31],[202,39,187,37],[202,41,187,39],[203,10,188,8],[203,16,188,14,"wrapTextNodes"],[203,29,188,27],[203,32,188,30,"i18nOptions"],[203,43,188,41],[203,44,188,42,"transWrapTextNodes"],[203,62,188,60],[204,10,189,8],[204,16,189,14,"content"],[204,23,189,21],[204,26,189,24,"shouldUnescape"],[204,40,189,38],[204,43,189,41,"i18nOptions"],[204,54,189,52],[204,55,189,53,"unescape"],[204,63,189,61],[204,64,189,62,"i18n"],[204,68,189,66],[204,69,189,67,"services"],[204,77,189,75],[204,78,189,76,"interpolator"],[204,90,189,88],[204,91,189,89,"interpolate"],[204,102,189,100],[204,103,189,101,"node"],[204,107,189,105],[204,108,189,106,"content"],[204,115,189,113],[204,117,189,115,"opts"],[204,121,189,119],[204,123,189,121,"i18n"],[204,127,189,125],[204,128,189,126,"language"],[204,136,189,134],[204,137,189,135],[204,138,189,136],[204,141,189,139,"i18n"],[204,145,189,143],[204,146,189,144,"services"],[204,154,189,152],[204,155,189,153,"interpolator"],[204,167,189,165],[204,168,189,166,"interpolate"],[204,179,189,177],[204,180,189,178,"node"],[204,184,189,182],[204,185,189,183,"content"],[204,192,189,190],[204,194,189,192,"opts"],[204,198,189,196],[204,200,189,198,"i18n"],[204,204,189,202],[204,205,189,203,"language"],[204,213,189,211],[204,214,189,212],[205,10,190,8],[205,14,190,12,"wrapTextNodes"],[205,27,190,25],[205,29,190,27],[206,12,191,10,"mem"],[206,15,191,13],[206,16,191,14,"push"],[206,20,191,18],[206,34,191,19],[206,38,191,19,"createElement"],[206,44,191,32],[206,45,191,32,"createElement"],[206,58,191,32],[206,60,191,33,"wrapTextNodes"],[206,73,191,46],[206,75,191,48],[207,14,192,12,"key"],[207,17,192,15],[207,19,192,17],[207,22,192,20,"node"],[207,26,192,24],[207,27,192,25,"name"],[207,31,192,29],[207,35,192,33,"i"],[207,36,192,34],[208,12,193,10],[208,13,193,11],[208,15,193,13,"content"],[208,22,193,20],[208,23,193,21],[208,24,193,22],[209,10,194,8],[209,11,194,9],[209,17,194,15],[210,12,195,10,"mem"],[210,15,195,13],[210,16,195,14,"push"],[210,20,195,18],[210,21,195,19,"content"],[210,28,195,26],[210,29,195,27],[211,10,196,8],[212,8,197,6],[213,8,198,6],[213,15,198,13,"mem"],[213,18,198,16],[214,6,199,4],[214,7,199,5],[214,9,199,7],[214,11,199,9],[214,12,199,10],[215,4,200,2],[215,5,200,3],[216,4,201,2],[216,10,201,8,"result"],[216,16,201,14],[216,19,201,17,"mapAST"],[216,25,201,23],[216,26,201,24],[216,27,201,25],[217,6,202,4,"dummy"],[217,11,202,9],[217,13,202,11],[217,17,202,15],[218,6,203,4,"children"],[218,14,203,12],[218,16,203,14,"children"],[218,24,203,22],[218,28,203,26],[219,4,204,2],[219,5,204,3],[219,6,204,4],[219,8,204,6,"ast"],[219,11,204,9],[219,13,204,11,"getAsArray"],[219,23,204,21],[219,24,204,22,"children"],[219,32,204,30],[219,36,204,34],[219,38,204,36],[219,39,204,37],[219,40,204,38],[220,4,205,2],[220,11,205,9,"getChildren"],[220,22,205,20],[220,23,205,21,"result"],[220,29,205,27],[220,30,205,28],[220,31,205,29],[220,32,205,30],[220,33,205,31],[221,2,206,0],[221,3,206,1],[222,2,207,0],[222,8,207,6,"fixComponentProps"],[222,25,207,23],[222,28,207,26,"fixComponentProps"],[222,29,207,27,"component"],[222,38,207,36],[222,40,207,38,"index"],[222,45,207,43],[222,47,207,45,"translation"],[222,58,207,56],[222,63,207,61],[223,4,208,2],[223,10,208,8,"componentKey"],[223,22,208,20],[223,25,208,23,"component"],[223,34,208,32],[223,35,208,33,"key"],[223,38,208,36],[223,42,208,40,"index"],[223,47,208,45],[224,4,209,2],[224,10,209,8,"comp"],[224,14,209,12],[224,30,209,15],[224,34,209,15,"cloneElement"],[224,40,209,27],[224,41,209,27,"cloneElement"],[224,53,209,27],[224,55,209,28,"component"],[224,64,209,37],[224,66,209,39],[225,6,210,4,"key"],[225,9,210,7],[225,11,210,9,"componentKey"],[226,4,211,2],[226,5,211,3],[226,6,211,4],[227,4,212,2],[227,8,212,6],[227,9,212,7,"comp"],[227,13,212,11],[227,14,212,12,"props"],[227,19,212,17],[227,23,212,21],[227,24,212,22,"comp"],[227,28,212,26],[227,29,212,27,"props"],[227,34,212,32],[227,35,212,33,"children"],[227,43,212,41],[227,47,212,45,"translation"],[227,58,212,56],[227,59,212,57,"indexOf"],[227,66,212,64],[227,67,212,65],[227,70,212,68,"index"],[227,75,212,73],[227,79,212,77],[227,80,212,78],[227,83,212,81],[227,84,212,82],[227,88,212,86,"translation"],[227,99,212,97],[227,100,212,98,"indexOf"],[227,107,212,105],[227,108,212,106],[227,111,212,109,"index"],[227,116,212,114],[227,121,212,119],[227,122,212,120],[227,125,212,123],[227,126,212,124],[227,128,212,126],[228,6,213,4],[228,13,213,11,"comp"],[228,17,213,15],[229,4,214,2],[230,4,215,2],[230,13,215,11,"Componentized"],[230,26,215,24,"Componentized"],[230,27,215,24],[230,29,215,27],[231,6,216,4],[231,26,216,11],[231,30,216,11,"createElement"],[231,36,216,24],[231,37,216,24,"createElement"],[231,50,216,24],[231,52,216,25,"Fragment"],[231,58,216,33],[231,59,216,33,"Fragment"],[231,67,216,33],[231,69,216,35],[231,73,216,39],[231,75,216,41,"comp"],[231,79,216,45],[231,80,216,46],[232,4,217,2],[233,4,218,2],[233,24,218,9],[233,28,218,9,"createElement"],[233,34,218,22],[233,35,218,22,"createElement"],[233,48,218,22],[233,50,218,23,"Componentized"],[233,63,218,36],[233,65,218,38],[234,6,219,4,"key"],[234,9,219,7],[234,11,219,9,"componentKey"],[235,4,220,2],[235,5,220,3],[235,6,220,4],[236,2,221,0],[236,3,221,1],[237,2,222,0],[237,8,222,6,"generateArrayComponents"],[237,31,222,29],[237,34,222,32,"generateArrayComponents"],[237,35,222,33,"components"],[237,45,222,43],[237,47,222,45,"translation"],[237,58,222,56],[237,63,222,61,"components"],[237,73,222,71],[237,74,222,72,"map"],[237,77,222,75],[237,78,222,76],[237,79,222,77,"c"],[237,80,222,78],[237,82,222,80,"index"],[237,87,222,85],[237,92,222,90,"fixComponentProps"],[237,109,222,107],[237,110,222,108,"c"],[237,111,222,109],[237,113,222,111,"index"],[237,118,222,116],[237,120,222,118,"translation"],[237,131,222,129],[237,132,222,130],[237,133,222,131],[238,2,223,0],[238,8,223,6,"generateObjectComponents"],[238,32,223,30],[238,35,223,33,"generateObjectComponents"],[238,36,223,34,"components"],[238,46,223,44],[238,48,223,46,"translation"],[238,59,223,57],[238,64,223,62],[239,4,224,2],[239,10,224,8,"componentMap"],[239,22,224,20],[239,25,224,23],[239,26,224,24],[239,27,224,25],[240,4,225,2,"Object"],[240,10,225,8],[240,11,225,9,"keys"],[240,15,225,13],[240,16,225,14,"components"],[240,26,225,24],[240,27,225,25],[240,28,225,26,"forEach"],[240,35,225,33],[240,36,225,34,"c"],[240,37,225,35],[240,41,225,39],[241,6,226,4,"Object"],[241,12,226,10],[241,13,226,11,"assign"],[241,19,226,17],[241,20,226,18,"componentMap"],[241,32,226,30],[241,34,226,32],[242,8,227,6],[242,9,227,7,"c"],[242,10,227,8],[242,13,227,11,"fixComponentProps"],[242,30,227,28],[242,31,227,29,"components"],[242,41,227,39],[242,42,227,40,"c"],[242,43,227,41],[242,44,227,42],[242,46,227,44,"c"],[242,47,227,45],[242,49,227,47,"translation"],[242,60,227,58],[243,6,228,4],[243,7,228,5],[243,8,228,6],[244,4,229,2],[244,5,229,3],[244,6,229,4],[245,4,230,2],[245,11,230,9,"componentMap"],[245,23,230,21],[246,2,231,0],[246,3,231,1],[247,2,232,0],[247,8,232,6,"generateComponents"],[247,26,232,24],[247,29,232,27,"generateComponents"],[247,30,232,28,"components"],[247,40,232,38],[247,42,232,40,"translation"],[247,53,232,51],[247,55,232,53,"i18n"],[247,59,232,57],[247,61,232,59,"i18nKey"],[247,68,232,66],[247,73,232,71],[248,4,233,2],[248,8,233,6],[248,9,233,7,"components"],[248,19,233,17],[248,21,233,19],[248,28,233,26],[248,32,233,30],[249,4,234,2],[249,8,234,6,"Array"],[249,13,234,11],[249,14,234,12,"isArray"],[249,21,234,19],[249,22,234,20,"components"],[249,32,234,30],[249,33,234,31],[249,35,234,33],[250,6,235,4],[250,13,235,11,"generateArrayComponents"],[250,36,235,34],[250,37,235,35,"components"],[250,47,235,45],[250,49,235,47,"translation"],[250,60,235,58],[250,61,235,59],[251,4,236,2],[252,4,237,2],[252,8,237,6],[252,12,237,6,"isObject"],[252,20,237,14],[252,21,237,14,"isObject"],[252,29,237,14],[252,31,237,15,"components"],[252,41,237,25],[252,42,237,26],[252,44,237,28],[253,6,238,4],[253,13,238,11,"generateObjectComponents"],[253,37,238,35],[253,38,238,36,"components"],[253,48,238,46],[253,50,238,48,"translation"],[253,61,238,59],[253,62,238,60],[254,4,239,2],[255,4,240,2],[255,8,240,2,"warnOnce"],[255,16,240,10],[255,17,240,10,"warnOnce"],[255,25,240,10],[255,27,240,11,"i18n"],[255,31,240,15],[255,33,240,17],[255,59,240,43],[255,61,240,45],[255,117,240,101],[255,119,240,103],[256,6,241,4,"i18nKey"],[257,4,242,2],[257,5,242,3],[257,6,242,4],[258,4,243,2],[258,11,243,9],[258,15,243,13],[259,2,244,0],[259,3,244,1],[260,2,245,0],[260,8,245,6,"isComponentsMap"],[260,23,245,21],[260,26,245,24,"object"],[260,32,245,30],[260,36,245,34],[261,4,246,2],[261,8,246,6],[261,9,246,7],[261,13,246,7,"isObject"],[261,21,246,15],[261,22,246,15,"isObject"],[261,30,246,15],[261,32,246,16,"object"],[261,38,246,22],[261,39,246,23],[261,41,246,25],[261,48,246,32],[261,53,246,37],[262,4,247,2],[262,8,247,6,"Array"],[262,13,247,11],[262,14,247,12,"isArray"],[262,21,247,19],[262,22,247,20,"object"],[262,28,247,26],[262,29,247,27],[262,31,247,29],[262,38,247,36],[262,43,247,41],[263,4,248,2],[263,11,248,9,"Object"],[263,17,248,15],[263,18,248,16,"keys"],[263,22,248,20],[263,23,248,21,"object"],[263,29,248,27],[263,30,248,28],[263,31,248,29,"reduce"],[263,37,248,35],[263,38,248,36],[263,39,248,37,"acc"],[263,42,248,40],[263,44,248,42,"key"],[263,47,248,45],[263,52,248,50,"acc"],[263,55,248,53],[263,59,248,57,"Number"],[263,65,248,63],[263,66,248,64,"isNaN"],[263,71,248,69],[263,72,248,70,"Number"],[263,78,248,76],[263,79,248,77,"parseFloat"],[263,89,248,87],[263,90,248,88,"key"],[263,93,248,91],[263,94,248,92],[263,95,248,93],[263,97,248,95],[263,101,248,99],[263,102,248,100],[264,2,249,0],[264,3,249,1],[265,2,250,7],[265,11,250,16,"Trans"],[265,16,250,21,"Trans"],[265,17,250,21,"_ref"],[265,21,250,21],[265,23,265,3],[266,4,265,3],[266,8,250,22],[267,8,251,2,"children"],[267,16,251,10],[268,8,252,2,"count"],[268,13,252,7],[269,8,253,2,"parent"],[269,14,253,8],[270,8,254,2,"i18nKey"],[270,15,254,9],[271,8,255,2,"context"],[271,15,255,9],[272,8,256,2,"tOptions"],[272,16,256,10],[272,19,256,13],[272,20,256,14],[272,21,256,15],[273,8,257,2,"values"],[273,14,257,8],[274,8,258,2,"defaults"],[274,16,258,10],[275,8,259,2,"components"],[275,18,259,12],[276,8,260,2,"ns"],[276,10,260,4],[277,8,261,2,"i18n"],[277,12,261,6],[277,14,261,8,"i18nFromProps"],[277,27,261,21],[278,8,262,2,"t"],[278,9,262,3],[278,11,262,5,"tFromProps"],[278,21,262,15],[279,8,263,2,"shouldUnescape"],[280,6,265,0],[280,7,265,1],[280,10,265,1,"_ref"],[280,14,265,1],[281,6,264,5,"additionalProps"],[281,21,264,20],[281,28,264,20,"_objectWithoutPropertiesLoose"],[281,57,264,20],[281,58,264,20,"default"],[281,65,264,20],[281,67,264,20,"_ref"],[281,71,264,20],[281,73,264,20,"_excluded2"],[281,83,264,20],[282,4,266,2],[282,10,266,8,"i18n"],[282,14,266,12],[282,17,266,15,"i18nFromProps"],[282,30,266,28],[282,34,266,32],[282,38,266,32,"getI18n"],[282,53,266,39],[282,54,266,39,"getI18n"],[282,61,266,39],[282,63,266,40],[282,64,266,41],[283,4,267,2],[283,8,267,6],[283,9,267,7,"i18n"],[283,13,267,11],[283,15,267,13],[284,6,268,4],[284,10,268,4,"warnOnce"],[284,18,268,12],[284,19,268,12,"warnOnce"],[284,27,268,12],[284,29,268,13,"i18n"],[284,33,268,17],[284,35,268,19],[284,56,268,40],[284,58,268,42],[284,131,268,115],[284,133,268,117],[285,8,269,6,"i18nKey"],[286,6,270,4],[286,7,270,5],[286,8,270,6],[287,6,271,4],[287,13,271,11,"children"],[287,21,271,19],[288,4,272,2],[289,4,273,2],[289,10,273,8,"t"],[289,11,273,9],[289,14,273,12,"tFromProps"],[289,24,273,22],[289,28,273,26,"i18n"],[289,32,273,30],[289,33,273,31,"t"],[289,34,273,32],[289,35,273,33,"bind"],[289,39,273,37],[289,40,273,38,"i18n"],[289,44,273,42],[289,45,273,43],[289,50,273,48,"k"],[289,51,273,49],[289,55,273,53,"k"],[289,56,273,54],[289,57,273,55],[290,4,274,2],[290,10,274,8,"reactI18nextOptions"],[290,29,274,27],[290,32,274,27,"Object"],[290,38,274,27],[290,39,274,27,"assign"],[290,45,274,27],[290,50,275,7],[290,54,275,7,"getDefaults"],[290,65,275,18],[290,66,275,18,"getDefaults"],[290,77,275,18],[290,79,275,19],[290,80,275,20],[290,82,276,7,"i18n"],[290,86,276,11],[290,87,276,12,"options"],[290,94,276,19],[290,96,276,21,"react"],[290,101,276,26],[290,102,277,3],[291,4,278,2],[291,8,278,6,"namespaces"],[291,18,278,16],[291,21,278,19,"ns"],[291,23,278,21],[291,27,278,25,"t"],[291,28,278,26],[291,29,278,27,"ns"],[291,31,278,29],[291,35,278,33,"i18n"],[291,39,278,37],[291,40,278,38,"options"],[291,47,278,45],[291,49,278,47,"defaultNS"],[291,58,278,56],[292,4,279,2,"namespaces"],[292,14,279,12],[292,17,279,15],[292,21,279,15,"isString"],[292,29,279,23],[292,30,279,23,"isString"],[292,38,279,23],[292,40,279,24,"namespaces"],[292,50,279,34],[292,51,279,35],[292,54,279,38],[292,55,279,39,"namespaces"],[292,65,279,49],[292,66,279,50],[292,69,279,53,"namespaces"],[292,79,279,63],[292,83,279,67],[292,84,279,68],[292,97,279,81],[292,98,279,82],[293,4,280,2],[293,10,280,8,"nodeAsString"],[293,22,280,20],[293,25,280,23,"nodesToString"],[293,38,280,36],[293,39,280,37,"children"],[293,47,280,45],[293,49,280,47,"reactI18nextOptions"],[293,68,280,66],[293,70,280,68,"i18n"],[293,74,280,72],[293,76,280,74,"i18nKey"],[293,83,280,81],[293,84,280,82],[294,4,281,2],[294,10,281,8,"defaultValue"],[294,22,281,20],[294,25,281,23,"defaults"],[294,33,281,31],[294,37,281,35,"nodeAsString"],[294,49,281,47],[294,53,281,51,"reactI18nextOptions"],[294,72,281,70],[294,73,281,71,"transEmptyNodeValue"],[294,92,281,90],[294,96,281,94,"i18nKey"],[294,103,281,101],[295,4,282,2],[295,10,282,8],[296,6,283,4,"hashTransKey"],[297,4,284,2],[297,5,284,3],[297,8,284,6,"reactI18nextOptions"],[297,27,284,25],[298,4,285,2],[298,10,285,8,"key"],[298,13,285,11],[298,16,285,14,"i18nKey"],[298,23,285,21],[298,28,285,26,"hashTransKey"],[298,40,285,38],[298,43,285,41,"hashTransKey"],[298,55,285,53],[298,56,285,54,"nodeAsString"],[298,68,285,66],[298,72,285,70,"defaultValue"],[298,84,285,82],[298,85,285,83],[298,88,285,86,"nodeAsString"],[298,100,285,98],[298,104,285,102,"defaultValue"],[298,116,285,114],[298,117,285,115],[299,4,286,2],[299,8,286,6,"i18n"],[299,12,286,10],[299,13,286,11,"options"],[299,20,286,18],[299,22,286,20,"interpolation"],[299,35,286,33],[299,37,286,35,"defaultVariables"],[299,53,286,51],[299,55,286,53],[300,6,287,4,"values"],[300,12,287,10],[300,15,287,13,"values"],[300,21,287,19],[300,25,287,23,"Object"],[300,31,287,29],[300,32,287,30,"keys"],[300,36,287,34],[300,37,287,35,"values"],[300,43,287,41],[300,44,287,42],[300,45,287,43,"length"],[300,51,287,49],[300,54,287,52],[300,55,287,53],[300,58,287,53,"Object"],[300,64,287,53],[300,65,287,53,"assign"],[300,71,287,53],[300,76,288,9,"values"],[300,82,288,15],[300,84,289,9,"i18n"],[300,88,289,13],[300,89,289,14,"options"],[300,96,289,21],[300,97,289,22,"interpolation"],[300,110,289,35],[300,111,289,36,"defaultVariables"],[300,127,289,52],[300,131,289,52,"Object"],[300,137,289,52],[300,138,289,52,"assign"],[300,144,289,52],[300,149,291,9,"i18n"],[300,153,291,13],[300,154,291,14,"options"],[300,161,291,21],[300,162,291,22,"interpolation"],[300,175,291,35],[300,176,291,36,"defaultVariables"],[300,192,291,52],[300,193,292,5],[301,4,293,2],[302,4,294,2],[302,10,294,8,"interpolationOverride"],[302,31,294,29],[302,34,294,32,"values"],[302,40,294,38],[302,44,294,42,"count"],[302,49,294,47],[302,54,294,52,"undefined"],[302,63,294,61],[302,67,294,65],[302,68,294,66,"i18n"],[302,72,294,70],[302,73,294,71,"options"],[302,80,294,78],[302,82,294,80,"interpolation"],[302,95,294,93],[302,97,294,95,"alwaysFormat"],[302,109,294,107],[302,113,294,111],[302,114,294,112,"children"],[302,122,294,120],[302,125,294,123,"tOptions"],[302,133,294,131],[302,134,294,132,"interpolation"],[302,147,294,145],[302,150,294,148],[303,6,295,4,"interpolation"],[303,19,295,17],[303,21,295,17,"Object"],[303,27,295,17],[303,28,295,17,"assign"],[303,34,295,17],[303,39,296,9,"tOptions"],[303,47,296,17],[303,48,296,18,"interpolation"],[303,61,296,31],[304,8,297,6,"prefix"],[304,14,297,12],[304,16,297,14],[304,21,297,19],[305,8,298,6,"suffix"],[305,14,298,12],[305,16,298,14],[306,6,298,19],[307,4,300,2],[307,5,300,3],[308,4,301,2],[308,10,301,8,"combinedTOpts"],[308,23,301,21],[308,26,301,21,"Object"],[308,32,301,21],[308,33,301,21,"assign"],[308,39,301,21],[308,44,302,7,"tOptions"],[308,52,302,15],[309,6,303,4,"context"],[309,13,303,11],[309,15,303,13,"context"],[309,22,303,20],[309,26,303,24,"tOptions"],[309,34,303,32],[309,35,303,33,"context"],[309,42,303,40],[310,6,304,4,"count"],[311,4,304,9],[311,7,305,7,"values"],[311,13,305,13],[311,15,306,7,"interpolationOverride"],[311,36,306,28],[312,6,307,4,"defaultValue"],[312,18,307,16],[313,6,308,4,"ns"],[313,8,308,6],[313,10,308,8,"namespaces"],[314,4,308,18],[314,6,309,3],[315,4,310,2],[315,10,310,8,"translation"],[315,21,310,19],[315,24,310,22,"key"],[315,27,310,25],[315,30,310,28,"t"],[315,31,310,29],[315,32,310,30,"key"],[315,35,310,33],[315,37,310,35,"combinedTOpts"],[315,50,310,48],[315,51,310,49],[315,54,310,52,"defaultValue"],[315,66,310,64],[316,4,311,2],[316,10,311,8,"generatedComponents"],[316,29,311,27],[316,32,311,30,"generateComponents"],[316,50,311,48],[316,51,311,49,"components"],[316,61,311,59],[316,63,311,61,"translation"],[316,74,311,72],[316,76,311,74,"i18n"],[316,80,311,78],[316,82,311,80,"i18nKey"],[316,89,311,87],[316,90,311,88],[317,4,312,2],[317,8,312,6,"indexedChildren"],[317,23,312,21],[317,26,312,24,"generatedComponents"],[317,45,312,43],[317,49,312,47,"children"],[317,57,312,55],[318,4,313,2],[318,8,313,6,"componentsMap"],[318,21,313,19],[318,24,313,22],[318,28,313,26],[319,4,314,2],[319,8,314,6,"isComponentsMap"],[319,23,314,21],[319,24,314,22,"generatedComponents"],[319,43,314,41],[319,44,314,42],[319,46,314,44],[320,6,315,4,"componentsMap"],[320,19,315,17],[320,22,315,20,"generatedComponents"],[320,41,315,39],[321,6,316,4,"indexedChildren"],[321,21,316,19],[321,24,316,22,"children"],[321,32,316,30],[322,4,317,2],[323,4,318,2],[323,10,318,8,"content"],[323,17,318,15],[323,20,318,18,"renderNodes"],[323,31,318,29],[323,32,318,30,"indexedChildren"],[323,47,318,45],[323,49,318,47,"componentsMap"],[323,62,318,60],[323,64,318,62,"translation"],[323,75,318,73],[323,77,318,75,"i18n"],[323,81,318,79],[323,83,318,81,"reactI18nextOptions"],[323,102,318,100],[323,104,318,102,"combinedTOpts"],[323,117,318,115],[323,119,318,117,"shouldUnescape"],[323,133,318,131],[323,134,318,132],[324,4,319,2],[324,10,319,8,"useAsParent"],[324,21,319,19],[324,24,319,22,"parent"],[324,30,319,28],[324,34,319,32,"reactI18nextOptions"],[324,53,319,51],[324,54,319,52,"defaultTransParent"],[324,72,319,70],[325,4,320,2],[325,11,320,9,"useAsParent"],[325,22,320,20],[325,38,320,23],[325,42,320,23,"createElement"],[325,48,320,36],[325,49,320,36,"createElement"],[325,62,320,36],[325,64,320,37,"useAsParent"],[325,75,320,48],[325,77,320,50,"additionalProps"],[325,92,320,65],[325,94,320,67,"content"],[325,101,320,74],[325,102,320,75],[325,105,320,78,"content"],[325,112,320,85],[326,2,321,0],[327,0,321,1],[327,3]],"functionMap":{"names":["<global>","hasChildren","getChildren","hasValidReactChildren","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","keepArray.map$argument_0","getData","renderInner","pushTranslatedJSX","Children.map$argument_1","mapAST","astNodes.reduce$argument_0","fixComponentProps","Componentized","generateArrayComponents","components.map$argument_0","generateObjectComponents","Object.keys.forEach$argument_0","generateComponents","isComponentsMap","Object.keys.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;oBCK;CDK;oBEC;CFI;8BGC,qEH;mBIC,2CJ;mBKC;CLM;6BMC;wBCK;GDwD;CNE;oBQC;iFCG,kBD;kBEG;0BHE;KGG;GFC;sBGO;GHI;4BIC;wCCO;ODU;GJE;iBMC;2BCG;KD8D;GNC;CRM;0BgBC;ECQ;GDE;ChBI;gCkBC,4CC,sDD,ClB;iCoBC;kCCE;GDI;CpBE;2BsBC;CtBY;wBuBC;oCCG,yDD;CvBC;OyBC;gDCuB,MD"},"hasCjsExports":false},"type":"js/module"}]}